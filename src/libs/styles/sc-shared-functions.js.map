{"version":3,"sources":["../../src/styles/sc-shared-functions.ts"],"names":["media","getBoxDimension","theme","boxDimensions","split","result","map","m","spacing","base","length","join","margin","handleBoxDimensions","dimensions","propertyName","padding","props","boxDimensionsIsString","getBoxDimensionStrings","getBoxDimensionResponsiveObjects","d","mobileStyle","mobile","tabletStyle","tablet","desktopStyle","desktop","filter","style","getSizeInPx","size","themeSizes"],"mappings":"AAAA,SAASA,KAAT;AAeA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAoE;AAAA,MAArDC,aAAqD,uEAAtB,EAAsB;;AACjG,MAAIA,aAAa,IAAIA,aAAa,CAACC,KAAnC,EAA0C;AACxC,QAAMC,MAAM,GAAGF,aAAa,CAACC,KAAd,CAAoB,GAApB,EAAyBE,GAAzB,CAA6B,UAAAC,CAAC;AAAA,aAAIL,KAAK,CAACM,OAAN,CAAcC,IAAd,CAAmBF,CAAnB,KAAyBA,CAA7B;AAAA,KAA9B,CAAf;;AAEA,QAAIF,MAAM,CAACK,MAAX,EAAmB;AACjB,aAAOL,MAAM,CAACM,IAAP,CAAY,GAAZ,CAAP;AACD;AACF;;AACD,SAAOR,aAAP;AACD,CATM;AAWP,OAAO,IAAMS,MAAM,GAAG,sBAA6D;AAAA,MAA1DV,KAA0D,QAA1DA,KAA0D;AAAA,MAAnDU,MAAmD,QAAnDA,MAAmD;AACjF,MAAI,CAACA,MAAL,EAAa;AACb,SAAOC,mBAAmB,CAAC;AAAEX,IAAAA,KAAK,EAALA,KAAF;AAASY,IAAAA,UAAU,EAAEF,MAArB;AAA6BG,IAAAA,YAAY,EAAE;AAA3C,GAAD,CAA1B;AACD,CAHM;AAKP,OAAO,IAAMC,OAAO,GAAG,wBAAgE;AAAA,MAA7Dd,KAA6D,SAA7DA,KAA6D;AAAA,MAAtDc,OAAsD,SAAtDA,OAAsD;AACrF,MAAI,CAACA,OAAL,EAAc;AACd,SAAOH,mBAAmB,CAAC;AAAEX,IAAAA,KAAK,EAALA,KAAF;AAASY,IAAAA,UAAU,EAAEE,OAArB;AAA8BD,IAAAA,YAAY,EAAE;AAA5C,GAAD,CAA1B;AACD,CAHM;AAKP,OAAO,IAAMF,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACI,KAAD,EAI7B;AAAA,MACIf,KADJ,GACwCe,KADxC,CACIf,KADJ;AAAA,MACWY,UADX,GACwCG,KADxC,CACWH,UADX;AAAA,MACuBC,YADvB,GACwCE,KADxC,CACuBF,YADvB;AAEJ,MAAMG,qBAAqB,GAAG,OAAOJ,UAAP,KAAsB,QAApD;;AAEA,MAAII,qBAAJ,EAA2B;AACzB,qBAAUH,YAAV,eAA2BI,sBAAsB,CAACjB,KAAD,EAAQY,UAAR,CAAjD;AACD;;AAED,SAAOM,gCAAgC,CACrClB,KADqC,EAErCY,UAFqC,EAGrCC,YAHqC,CAAvC;AAKD,CAjBM;AAmBP,OAAO,IAAMI,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACjB,KAAD,EAAkD;AAAA,MAAnCY,UAAmC,uEAAP,EAAO;;AACtF,MAAIA,UAAU,CAACV,KAAf,EAAsB;AACpB,QAAMC,MAAM,GAAGS,UAAU,CAACV,KAAX,CAAiB,GAAjB,EAAsBE,GAAtB,CAA0B,UAAAe,CAAC;AAAA,aAAInB,KAAK,CAACM,OAAN,CAAcC,IAAd,CAAmBY,CAAnB,KAAyBA,CAA7B;AAAA,KAA3B,CAAf;;AACA,QAAIhB,MAAM,CAACK,MAAX,EAAmB;AACjB,aAAOL,MAAM,CAACM,IAAP,CAAY,GAAZ,CAAP;AACD;AACF;AACF,CAPM;AASP,OAAO,IAAMS,gCAAgC,GAAG,SAAnCA,gCAAmC,CAC9ClB,KAD8C,EAE9CC,aAF8C,EAG9CY,YAH8C,EAI3C;AACH,MAAMO,WAAW,aAAMP,YAAN,eAAuBI,sBAAsB,CAACjB,KAAD,EAAQC,aAAa,CAACoB,MAAtB,CAA7C,MAAjB;AACA,MAAMC,WAAW,aAAMxB,KAAK,CAACyB,MAAZ,cAAsBV,YAAtB,eAAuCI,sBAAsB,CAC5EjB,KAD4E,EAE5EC,aAAa,CAACsB,MAF8D,CAA7D,OAAjB;AAIA,MAAMC,YAAY,cAAO1B,KAAK,CAAC2B,OAAb,cAAwBZ,YAAxB,eAAyCI,sBAAsB,CAC/EjB,KAD+E,EAE/EC,aAAa,CAACwB,OAFiE,CAA/D,OAAlB;AAKA,MAAMJ,MAAM,GAAG,CAAApB,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEoB,MAAf,KAAyBD,WAAxC;AACA,MAAMG,MAAM,GAAG,CAAAtB,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEsB,MAAf,KAAyBD,WAAxC;AACA,MAAMG,OAAO,GAAG,CAAAxB,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEwB,OAAf,KAA0BD,YAA1C;AAEA,SAAO,CAACH,MAAD,EAASE,MAAT,EAAiBE,OAAjB,EAA0BC,MAA1B,CAAiC,UAAAC,KAAK;AAAA,WAAI,CAAC,CAACA,KAAN;AAAA,GAAtC,EAAmDlB,IAAnD,CAAwD,EAAxD,CAAP;AACD,CApBM;AAsBP,OAAO,IAAMmB,WAAW,GAAG,SAAdA,WAAc,CACzBC,IADyB,EAEzBC,UAFyB,EAGd;AACX,MAAI,OAAOD,IAAP,KAAgB,QAApB,EAA8B;AAC5B,qBAAUA,IAAV;AACD,GAFD,MAEO;AACL,WAAOC,UAAU,CAACD,IAAD,CAAV,IAAoBC,UAAU,CAAC,IAAD,CAArC;AACD;AACF,CATM","sourcesContent":["import { media } from '@/styles'\nimport {\n  BoxDimensions,\n  MarginMap,\n  PaddingMap,\n  Size,\n  Theme,\n  VerticalMarginMap,\n  VerticalPaddingMap,\n} from '@/types/theme'\n\n/**\n * @description utility function to calc the values of margin and padding\n * @deprecated getBoxDimension is replaced by margin-function and padding-function in order to achieve a consistent working method with margin props and padding props\n */\nexport const getBoxDimension = (theme: Theme, boxDimensions: BoxDimensions = ''): BoxDimensions => {\n  if (boxDimensions && boxDimensions.split) {\n    const result = boxDimensions.split(' ').map(m => theme.spacing.base[m] || m)\n\n    if (result.length) {\n      return result.join(' ')\n    }\n  }\n  return boxDimensions\n}\n\nexport const margin = ({ theme, margin }: { theme: Theme; margin?: MarginMap }) => {\n  if (!margin) return\n  return handleBoxDimensions({ theme, dimensions: margin, propertyName: 'margin' })\n}\n\nexport const padding = ({ theme, padding }: { theme: Theme; padding?: PaddingMap }) => {\n  if (!padding) return\n  return handleBoxDimensions({ theme, dimensions: padding, propertyName: 'padding' })\n}\n\nexport const handleBoxDimensions = (props: {\n  theme: Theme\n  dimensions: MarginMap | PaddingMap | string\n  propertyName: 'margin' | 'padding'\n}) => {\n  const { theme, dimensions, propertyName } = props\n  const boxDimensionsIsString = typeof dimensions === 'string'\n\n  if (boxDimensionsIsString) {\n    return `${propertyName}: ${getBoxDimensionStrings(theme, dimensions as string)};`\n  }\n\n  return getBoxDimensionResponsiveObjects(\n    theme,\n    dimensions as VerticalMarginMap | VerticalPaddingMap,\n    propertyName\n  )\n}\n\nexport const getBoxDimensionStrings = (theme: Theme, dimensions: BoxDimensions = '') => {\n  if (dimensions.split) {\n    const result = dimensions.split(' ').map(d => theme.spacing.base[d] || d)\n    if (result.length) {\n      return result.join(' ')\n    }\n  }\n}\n\nexport const getBoxDimensionResponsiveObjects = (\n  theme: Theme,\n  boxDimensions: VerticalMarginMap | VerticalPaddingMap,\n  propertyName: 'margin' | 'padding'\n) => {\n  const mobileStyle = `${propertyName}: ${getBoxDimensionStrings(theme, boxDimensions.mobile)};`\n  const tabletStyle = `${media.tablet}{${propertyName}: ${getBoxDimensionStrings(\n    theme,\n    boxDimensions.tablet\n  )};}`\n  const desktopStyle = ` ${media.desktop}{${propertyName}: ${getBoxDimensionStrings(\n    theme,\n    boxDimensions.desktop\n  )};}`\n\n  const mobile = boxDimensions?.mobile && mobileStyle\n  const tablet = boxDimensions?.tablet && tabletStyle\n  const desktop = boxDimensions?.desktop && desktopStyle\n\n  return [mobile, tablet, desktop].filter(style => !!style).join('')\n}\n\nexport const getSizeInPx = (\n  size: number | keyof Omit<Size, 'xxxs'>,\n  themeSizes: Omit<Size, 'xxxs'>\n): string => {\n  if (typeof size === 'number') {\n    return `${size}px`\n  } else {\n    return themeSizes[size] || themeSizes['sm']\n  }\n}\n"],"file":"sc-shared-functions.js"}
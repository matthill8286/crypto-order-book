{"version":3,"sources":["../../../../src/components/Atoms/RadioButton/RadioGroup.tsx"],"names":["useState","RadioGroup","name","onChange","children","state","groupValue","setGroupValue","internalOnChange","_","value","selected"],"mappings":";;;;;;;;;;;;AAAA,SAAaA,QAAb,QAA6B,OAA7B;AAiBA,OAAO,IAAMC,UAA+B,GAAG,SAAlCA,UAAkC,OAAkD;AAAA,MAA/CC,IAA+C,QAA/CA,IAA+C;AAAA,MAAzCC,QAAyC,QAAzCA,QAAyC;AAAA,MAA/BC,QAA+B,QAA/BA,QAA+B;AAAA,wBAArBC,KAAqB;AAAA,MAArBA,KAAqB,2BAAb,MAAa;;AAAA,kBAC3DL,QAAQ,EADmD;AAAA;AAAA,MACxFM,UADwF;AAAA,MAC5EC,aAD4E;;AAE/F,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,CAAD,EAAcC,KAAd,EAAiC;AACxDH,IAAAA,aAAa,CAACG,KAAD,CAAb;;AACA,QAAIA,KAAJ,EAAW;AACTP,MAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAGO,KAAH,CAAR;AACD;AACF,GALD;;AAMA,SAAON,QAAQ,CAAC;AAAEF,IAAAA,IAAI,EAAJA,IAAF;AAAQC,IAAAA,QAAQ,EAAEK,gBAAlB;AAAoCG,IAAAA,QAAQ,EAAEL,UAA9C;AAA0DD,IAAAA,KAAK,EAALA;AAA1D,GAAD,CAAf;AACD,CATM","sourcesContent":["import { FC, useState } from 'react'\nimport { SelectableState } from '../Selectable/Selectable.interface'\n\ninterface RenderPropObject {\n  name: string\n  onChange: (isChecked?: boolean, value?: string) => void\n  selected?: string\n  state?: SelectableState\n}\n\ninterface RadioGroupProps {\n  name: string\n  onChange?: (value: string) => void\n  children: (props: RenderPropObject) => React.ReactElement | null\n  state?: SelectableState\n}\n\nexport const RadioGroup: FC<RadioGroupProps> = ({ name, onChange, children, state = 'idle' }) => {\n  const [groupValue, setGroupValue] = useState<string>()\n  const internalOnChange = (_?: boolean, value?: string) => {\n    setGroupValue(value)\n    if (value) {\n      onChange?.(value)\n    }\n  }\n  return children({ name, onChange: internalOnChange, selected: groupValue, state })\n}\n"],"file":"RadioGroup.js"}
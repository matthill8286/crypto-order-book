{"version":3,"sources":["../../../../src/components/Atoms/Selectable/Selectable.test.tsx"],"names":["React","Checkbox","RadioButton","renderWithTheme","mockProps","label","value","name","onChangeValue","jest","fn","selectableId","isChecked","state","describe","it","tree","expect","toMatchSnapshot"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT;AACA,SAASC,WAAT;AAEA,SAASC,eAAT;AAEA,IAAMC,SAA2B,GAAG;AAClCC,EAAAA,KAAK,EAAE,EAD2B;AAElCC,EAAAA,KAAK,EAAE,EAF2B;AAGlCC,EAAAA,IAAI,EAAE,EAH4B;AAIlCC,EAAAA,aAAa,EAAEC,IAAI,CAACC,EAAL,EAJmB;AAKlCC,EAAAA,YAAY,EAAE,EALoB;AAMlCC,EAAAA,SAAS,EAAE,KANuB;AAOlCC,EAAAA,KAAK,EAAE;AAP2B,CAApC;AAUAC,QAAQ,CAAC,qBAAD,EAAwB,YAAM;AACpCC,EAAAA,EAAE,CAAC,4BAAD,EAA+B,YAAM;AACrC,QAAMC,IAAI,GAAGb,eAAe,CAAC,oBAAC,QAAD,EAAcC,SAAd,CAAD,CAA5B;AACAa,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHC,CAAF;AAKAH,EAAAA,EAAE,CAAC,gCAAD,EAAmC,YAAM;AACzC,QAAMC,IAAI,GAAGb,eAAe,CAAC,oBAAC,WAAD,EAAiBC,SAAjB,CAAD,CAA5B;AACAa,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHC,CAAF;AAKAH,EAAAA,EAAE,CAAC,sCAAD,EAAyC,YAAM;AAC/C,QAAMC,IAAI,GAAGb,eAAe,CAC1B,0CACE,oBAAC,WAAD,eAAiBC,SAAjB;AAA4B,MAAA,YAAY,EAAC,QAAzC;AAAkD,MAAA,IAAI,EAAC;AAAvD,OADF,EAEE,oBAAC,WAAD,eAAiBA,SAAjB;AAA4B,MAAA,YAAY,EAAC,QAAzC;AAAkD,MAAA,IAAI,EAAC;AAAvD,OAFF,CAD0B,CAA5B;AAMAa,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GARC,CAAF;AASD,CApBO,CAAR","sourcesContent":["import React from 'react'\nimport { Checkbox } from '@/components/Atoms/Checkbox'\nimport { RadioButton } from '@/components/Atoms/RadioButton'\nimport { RadioButtonProps } from '@/components/Atoms/Selectable/Selectable.interface'\nimport { renderWithTheme } from '@/testRenderer'\n\nconst mockProps: RadioButtonProps = {\n  label: '',\n  value: '',\n  name: '',\n  onChangeValue: jest.fn(),\n  selectableId: '',\n  isChecked: false,\n  state: 'idle',\n}\n\ndescribe('renders Selectables', () => {\n  it('renders checkbox correctly', () => {\n    const tree = renderWithTheme(<Checkbox {...mockProps} />)\n    expect(tree).toMatchSnapshot()\n  })\n\n  it('renders radio button correctly', () => {\n    const tree = renderWithTheme(<RadioButton {...mockProps} />)\n    expect(tree).toMatchSnapshot()\n  })\n\n  it('renders radio button group correctly', () => {\n    const tree = renderWithTheme(\n      <>\n        <RadioButton {...mockProps} selectableId=\"radio1\" name=\"radios\" />\n        <RadioButton {...mockProps} selectableId=\"radio2\" name=\"radios\" />\n      </>\n    )\n    expect(tree).toMatchSnapshot()\n  })\n})\n"],"file":"Selectable.test.js"}
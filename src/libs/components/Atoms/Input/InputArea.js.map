{"version":3,"sources":["../../../../src/components/Atoms/Input/InputArea.tsx"],"names":["React","useState","CopyText","StyledHelpWrapper","StyledInputArea","StyledInputWrapper","InputDivider","InputIcon","InputLabel","mapStateToColor","idle","valid","error","disabled","mapStateToIconState","InputArea","props","className","margin","padding","inputProps","state","label","inputStyle","placeholder","autofocus","value","inputRef","inputIcon","rows","helpText","helper","errorMessage","onMouseEnter","onMouseLeave","onClick","onClickIcon","onBlur","onChange","onKeyUp","onKeyDown","onFocus","shrink","changeShrink","action","changeAction","onMouseEnterHandler","ev","includes","onMouseLeaveHandler","onFocusHandler","onBlurHandler","onChangeHandler","onClickHandler","stopPropagation","onClickIconHandler","showError","showIcon","color","iconState","combinedInputProps","autoFocus","displayName"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { CopyText } from '../Typography'\nimport { InputAreaProps, MapStateToColor } from './Input.interface'\nimport { StyledHelpWrapper, StyledInputArea, StyledInputWrapper } from './Input.styled'\nimport { InputDivider } from './InputDivider'\nimport { InputIcon, InputIconState } from './InputIcon'\nimport { InputLabel } from './InputLabel'\n\ntype InputAction = null | 'hover' | 'press' | 'focus'\n\nconst mapStateToColor: MapStateToColor = {\n  idle: 'grey3',\n  valid: 'success',\n  error: 'error',\n  disabled: 'grey2',\n}\n\nconst mapStateToIconState = {\n  valid: 'valid',\n  error: 'error',\n}\n\nexport const InputArea: React.FC<InputAreaProps> = props => {\n  const {\n    className,\n    margin = '',\n    padding = '',\n    inputProps,\n    state = 'idle',\n    label = '',\n    inputStyle = 'default',\n    placeholder = '',\n    autofocus = false,\n    value = '',\n    inputRef,\n    inputIcon,\n    rows,\n    helpText,\n    helper,\n    errorMessage,\n    onMouseEnter,\n    onMouseLeave,\n    onClick,\n    onClickIcon,\n    onBlur,\n    onChange,\n    onKeyUp,\n    onKeyDown,\n    onFocus,\n  } = props\n\n  const [shrink, changeShrink] = useState<boolean>(value !== '')\n  const [action, changeAction] = useState<InputAction>(null)\n\n  const onMouseEnterHandler = (ev: React.MouseEvent<HTMLTextAreaElement>) => {\n    if (!['error', 'disabled'].includes(state)) {\n      changeAction('hover')\n    }\n    if (onMouseEnter) onMouseEnter(ev)\n  }\n\n  const onMouseLeaveHandler = (ev: React.MouseEvent<HTMLTextAreaElement>) => {\n    if (onMouseLeave) onMouseLeave(ev)\n    changeAction(null)\n  }\n\n  const onFocusHandler = (ev: React.FocusEvent<HTMLTextAreaElement>) => {\n    if (onFocus) onFocus(ev)\n    changeShrink(true)\n    changeAction('focus')\n  }\n\n  const onBlurHandler = (ev: React.FocusEvent<HTMLTextAreaElement>) => {\n    if (onBlur) onBlur(ev)\n    if (value === '') {\n      changeShrink(false)\n    }\n    changeAction(null)\n  }\n\n  const onChangeHandler = (ev: React.ChangeEvent<HTMLTextAreaElement>) => {\n    if (onChange) onChange(ev)\n  }\n\n  const onClickHandler = (ev: React.MouseEvent<HTMLTextAreaElement>) => {\n    ev.stopPropagation()\n    if (onClick) onClick(ev)\n  }\n\n  const onClickIconHandler = (ev: React.MouseEvent<HTMLInputElement>) => {\n    ev.stopPropagation()\n    if (onClickIcon) onClickIcon(ev)\n  }\n\n  const showError = state === 'error' && errorMessage\n  const showIcon = state === 'valid' || state === 'error' || inputIcon\n  const color = action ? 'grey5' : mapStateToColor[state]\n  const iconState: InputIconState = mapStateToIconState[state] || 'default'\n\n  const combinedInputProps = {\n    ...inputProps,\n    placeholder: placeholder,\n    autoFocus: autofocus,\n    inputStyle,\n    value,\n    rows,\n    onMouseEnter: onMouseEnterHandler,\n    onMouseLeave: onMouseLeaveHandler,\n    onClick: onClickHandler,\n    onFocus: onFocusHandler,\n    onChange: onChangeHandler,\n    onKeyUp: onKeyUp,\n    onKeyDown: onKeyDown,\n    onBlur: onBlurHandler,\n    disabled: state === 'disabled',\n  }\n\n  return (\n    <StyledInputWrapper className={className} margin={margin} padding={padding}>\n      <InputLabel color={color} label={label} shrink={shrink} inputStyle={inputStyle}>\n        {<StyledInputArea {...combinedInputProps} ref={inputRef} />}\n      </InputLabel>\n\n      {showIcon && (\n        <InputIcon iconState={iconState} icon={inputIcon} onClick={onClickIconHandler} />\n      )}\n\n      {showError && <InputDivider color={color} />}\n\n      {helper && <StyledHelpWrapper inputStyle={inputStyle}>{helper}</StyledHelpWrapper>}\n\n      {helpText && (\n        <StyledHelpWrapper inputStyle={inputStyle}>\n          <CopyText tag=\"span\" fontSize=\"xxs\">\n            {helpText}\n          </CopyText>\n        </StyledHelpWrapper>\n      )}\n\n      {showError && (\n        <StyledHelpWrapper inputStyle={inputStyle}>\n          <CopyText tag=\"span\" color=\"error\" fontSize=\"xxs\">\n            {errorMessage}\n          </CopyText>\n        </StyledHelpWrapper>\n      )}\n    </StyledInputWrapper>\n  )\n}\n\nInputArea.displayName = 'Input'\n"],"file":"InputArea.js"}
{"version":3,"sources":["../../../../src/components/Atoms/Input/InputLabel.tsx"],"names":["React","css","styled","CopyText","StyledInputLabelWrapper","div","theme","spacing","base","lg","StyledLabel","xxs","transition","medium","shrink","font","lineHeight","sm","InputLabel","props","children","color","htmlFor","inputStyle","label","fontSize"],"mappings":"AAAA,OAAOA,KAAP,MAAwC,OAAxC;AAEA,SAASC,GAAT,EAAcC,MAAd;AAEA,SAASC,QAAT;AAGA,IAAMC,uBAAuB,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,2BACX;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBC,EAAlC;AAAA,CADW,CAA7B;AAIA,IAAMC,WAAW,GAAGR,MAAM,CAACC,QAAD,CAAT;AAAA;AAAA;AAAA,gKAED;AAAA,MAAGG,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBG,GAAlC;AAAA,CAFC,EAIK;AAAA,MAAGL,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACM,UAAN,CAAiBC,MAAhC;AAAA,CAJL,EAKP;AAAA,MAAGP,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACM,UAAN,CAAiBC,MAAhC;AAAA,CALO,EAOb;AAAA,MAAGC,MAAH,SAAGA,MAAH;AAAA,MAAWR,KAAX,SAAWA,KAAX;AAAA,SACAQ,MAAM,GACFb,GADE,yCAKFA,GALE,0CAMOK,KAAK,CAACS,IAAN,CAAWC,UAAX,CAAsBC,EAN7B,CADN;AAAA,CAPa,CAAjB;AA4BA,OAAO,IAAMC,UAA+B,GAAG,SAAlCA,UAAkC,CAAAC,KAAK,EAAI;AAAA,MAC9CC,QAD8C,GACUD,KADV,CAC9CC,QAD8C;AAAA,MACpCC,KADoC,GACUF,KADV,CACpCE,KADoC;AAAA,MAC7BC,OAD6B,GACUH,KADV,CAC7BG,OAD6B;AAAA,MACpBC,UADoB,GACUJ,KADV,CACpBI,UADoB;AAAA,MACRC,KADQ,GACUL,KADV,CACRK,KADQ;AAAA,MACDV,MADC,GACUK,KADV,CACDL,MADC;AAGtD,MAAMW,QAAQ,GAAGX,MAAM,GAAG,KAAH,GAAWS,UAAU,KAAK,OAAf,GAAyB,IAAzB,GAAgC,IAAlE;AAEA,SACE,oBAAC,uBAAD,QACE,oBAAC,WAAD;AACE,IAAA,GAAG,EAAC,OADN;AAEE,IAAA,KAAK,EAAEF,KAFT;AAGE,IAAA,QAAQ,EAAEI,QAHZ;AAIE,IAAA,UAAU,EAAC,IAJb;AAKE,IAAA,MAAM,EAAEX,MALV;AAME,IAAA,OAAO,EAAEQ;AANX,KAOGE,KAPH,CADF,EAUGJ,QAVH,CADF;AAcD,CAnBM","sourcesContent":["import React, { FC, ReactElement } from 'react'\nimport { DropdownProps } from '@/components/Molecules/Dropdown/Dropdown.interface'\nimport { css, styled } from '@/styles/styled'\nimport { ThemeColors } from '@/types/theme'\nimport { CopyText } from '../Typography'\nimport { InputProps, InputStyle } from './Input.interface'\n\nconst StyledInputLabelWrapper = styled.div`\n  margin-right: ${({ theme }) => theme.spacing.base.lg};\n`\n\nconst StyledLabel = styled(CopyText)<{ shrink: boolean }>`\n  position: absolute;\n  margin-top: ${({ theme }) => theme.spacing.base.xxs};\n  transform-origin: top left;\n  transition: color ${({ theme }) => theme.transition.medium} cubic-bezier(0, 0, 0.2, 1) 0ms,\n    top ${({ theme }) => theme.transition.medium} cubic-bezier(0, 0, 0.2, 1) 0ms;\n\n  ${({ shrink, theme }) =>\n    shrink\n      ? css`\n          top: 0;\n          transform-origin: top left;\n        `\n      : css`\n          top: ${theme.font.lineHeight.sm};\n          transform-origin: top left;\n        `}\n`\n\nexport interface InputLabelProps {\n  children: ReactElement<InputProps | DropdownProps>\n  color: ThemeColors\n  htmlFor?: string\n  inputStyle: InputStyle\n  label: string\n  shrink: boolean\n}\n\nexport const InputLabel: FC<InputLabelProps> = props => {\n  const { children, color, htmlFor, inputStyle, label, shrink } = props\n\n  const fontSize = shrink ? 'xxs' : inputStyle === 'dense' ? 'xs' : 'sm'\n\n  return (\n    <StyledInputLabelWrapper>\n      <StyledLabel\n        tag=\"label\"\n        color={color}\n        fontSize={fontSize}\n        lineHeight=\"xs\"\n        shrink={shrink}\n        htmlFor={htmlFor}>\n        {label}\n      </StyledLabel>\n      {children}\n    </StyledInputLabelWrapper>\n  )\n}\n"],"file":"InputLabel.js"}
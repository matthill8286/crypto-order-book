{"version":3,"sources":["../../../../src/components/Atoms/Input/Input.test.tsx"],"names":["React","IconClose","mountWithTheme","renderWithTheme","CopyText","Input","describe","it","wrapper","expect","toMatchSnapshot","states","forEach","state","mask","inputStyles","style","events","onMouseEnter","jest","fn","onMouseLeave","onClick","onFocus","onBlur","onChange","onKeyDown","onKeyUp","onClickIcon","input","find","simulate","toBeCalledTimes","target","value","test","required","toHaveLength","inputProps","props","toBe","btn","btnProps"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { IconClose } from '@matthill8286/atomic-icon-library'\nimport { mountWithTheme, renderWithTheme } from '@/testRenderer'\nimport { CopyText } from '../Typography'\nimport { Input } from './Input'\nimport { InputEvents, InputState, InputStyle } from './Input.interface'\n\ndescribe('Input', () => {\n  it('should render', () => {\n    const wrapper = renderWithTheme(<Input />)\n    expect(wrapper).toMatchSnapshot()\n  })\n  it('should render with different states', () => {\n    const states: InputState[] = ['idle', 'valid', 'error', 'disabled']\n    states.forEach(state => {\n      const wrapper = renderWithTheme(<Input state={state} />)\n      expect(wrapper).toMatchSnapshot()\n    })\n  })\n  it('should render with helper component', () => {\n    const wrapper = renderWithTheme(<Input helper={<CopyText>help text</CopyText>} />)\n    expect(wrapper).toMatchSnapshot()\n  })\n  it('should render with errorMessage', () => {\n    const wrapper = renderWithTheme(<Input state=\"error\" errorMessage=\"error message\" />)\n    expect(wrapper).toMatchSnapshot()\n  })\n  it('should render with masked input', () => {\n    const wrapper = renderWithTheme(<Input inputMaskProps={{ mask: '11.11.1111' }} />)\n    expect(wrapper).toMatchSnapshot()\n  })\n  it('should render with dense inputStyle', () => {\n    const inputStyles: InputStyle[] = ['default', 'dense', 'large']\n    inputStyles.forEach(style => {\n      const wrapper = renderWithTheme(<Input inputStyle={style} />)\n      expect(wrapper).toMatchSnapshot()\n    })\n  })\n  it('should fire InputEvents', () => {\n    const events: InputEvents = {\n      onMouseEnter: jest.fn(),\n      onMouseLeave: jest.fn(),\n      onClick: jest.fn(),\n      onFocus: jest.fn(),\n      onBlur: jest.fn(),\n      onChange: jest.fn(),\n      onKeyDown: jest.fn(),\n      onKeyUp: jest.fn(),\n      onClickIcon: jest.fn(),\n    }\n    const wrapper = mountWithTheme(<Input {...events} />)\n    const input = wrapper.find('input')\n\n    input.simulate('mouseEnter')\n    expect(events.onMouseEnter).toBeCalledTimes(1)\n\n    input.simulate('mouseLeave')\n    expect(events.onMouseLeave).toBeCalledTimes(1)\n\n    input.simulate('click')\n    expect(events.onClick).toBeCalledTimes(1)\n\n    input.simulate('focus')\n    expect(events.onFocus).toBeCalledTimes(1)\n\n    input.simulate('blur')\n    expect(events.onBlur).toBeCalledTimes(1)\n\n    input.simulate('change', { target: { value: 'hallo!' } })\n    expect(events.onChange).toBeCalledTimes(1)\n\n    input.simulate('keyDown')\n    expect(events.onKeyDown).toBeCalledTimes(1)\n\n    input.simulate('keyUp')\n    expect(events.onKeyUp).toBeCalledTimes(1)\n  })\n\n  describe('a11y:', () => {\n    test('Input required attributes are set to true', () => {\n      const wrapper = mountWithTheme(<Input state=\"idle\" inputProps={{ required: true }} />)\n      const input = wrapper.find('input')\n      expect(input).toHaveLength(1)\n\n      const inputProps = input.props()\n      expect(inputProps['required']).toBe(true)\n      expect(inputProps['aria-required']).toBe(true)\n    })\n\n    test('Input required attributes are set to false', () => {\n      const wrapper = mountWithTheme(<Input state=\"idle\" />)\n      const input = wrapper.find('input')\n      expect(input).toHaveLength(1)\n\n      const inputProps = input.props()\n      expect(inputProps['required']).toBe(false)\n      expect(inputProps['aria-required']).toBe(false)\n    })\n\n    test('Input aria-invalid attribute is true if state = \"error\"', () => {\n      const wrapper = mountWithTheme(<Input state=\"error\" errorMessage=\"error message\" />)\n      const input = wrapper.find('input')\n      expect(input).toHaveLength(1)\n\n      const inputProps = input.props()\n      expect(inputProps['aria-invalid']).toBe(true)\n    })\n\n    test('Input aria-invalid attribute is false if state = \"error\"', () => {\n      const wrapper = mountWithTheme(<Input state=\"idle\" />)\n      const input = wrapper.find('input')\n      expect(input).toHaveLength(1)\n\n      const inputProps = input.props()\n      expect(inputProps['aria-invalid']).toBe(false)\n    })\n\n    test('Icon has aria-label attribute', () => {\n      const wrapper = mountWithTheme(\n        <Input\n          state=\"idle\"\n          iconLabel=\"Click me!\"\n          onClickIcon={() => null}\n          inputIcon={<IconClose />}\n        />\n      )\n      const btn = wrapper.find('button')\n      expect(btn).toHaveLength(1)\n\n      const btnProps = btn.props()\n      expect(btnProps['aria-label']).toBe('Click me!')\n    })\n  })\n})\n"],"file":"Input.test.js"}
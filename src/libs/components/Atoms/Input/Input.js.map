{"version":3,"sources":["../../../../src/components/Atoms/Input/Input.tsx"],"names":["React","useState","CopyText","StyledHelpWrapper","StyledInput","StyledInputMask","StyledInputWrapper","InputDivider","InputIcon","InputLabel","mapStateToColor","idle","valid","error","disabled","mapStateToIconState","Input","props","autofocus","className","errorMessage","helper","helpText","iconLabel","inputIcon","inputIconSize","inputMaskProps","inputMaskRef","inputProps","inputRef","inputStyle","inputType","label","margin","onBlur","onChange","onClick","onClickIcon","onFocus","onKeyDown","onKeyUp","onMouseEnter","onMouseLeave","padding","placeholder","state","value","shrink","changeShrink","isFocus","changeFocus","isHover","changeHover","useEffect","onMouseEnterHandler","ev","includes","onMouseLeaveHandler","onFocusHandler","onBlurHandler","onChangeHandler","onClickHandler","stopPropagation","onClickIconHandler","showError","showIcon","color","iconState","isRequired","required","combinedInputProps","autoFocus","type","isAriaInvalid","ariaAttrs","id","name","undefined","displayName"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { CopyText } from '../Typography'\nimport { InputProps, MapStateToColor } from './Input.interface'\nimport { StyledHelpWrapper, StyledInput, StyledInputMask, StyledInputWrapper } from './Input.styled'\nimport { InputDivider } from './InputDivider'\nimport { InputIcon, InputIconState } from './InputIcon'\nimport { InputLabel } from './InputLabel'\n\nconst mapStateToColor: MapStateToColor = {\n  idle: 'grey3',\n  valid: 'success',\n  error: 'error',\n  disabled: 'grey2',\n}\n\nconst mapStateToIconState = {\n  valid: 'valid',\n  error: 'error',\n}\n\nexport const Input: React.FC<InputProps> = props => {\n  const {\n    autofocus = false,\n    className,\n    errorMessage,\n    helper,\n    helpText,\n    iconLabel,\n    inputIcon,\n    inputIconSize,\n    inputMaskProps,\n    inputMaskRef,\n    inputProps,\n    inputRef,\n    inputStyle = 'default',\n    inputType = 'text',\n    label = '',\n    margin = '',\n    onBlur,\n    onChange,\n    onClick,\n    onClickIcon,\n    onFocus,\n    onKeyDown,\n    onKeyUp,\n    onMouseEnter,\n    onMouseLeave,\n    padding = '',\n    placeholder = '',\n    state = 'idle',\n    value,\n  } = props\n\n  const [shrink, changeShrink] = useState<boolean>(!!value)\n  const [isFocus, changeFocus] = useState<boolean>(autofocus)\n  const [isHover, changeHover] = useState<boolean>(false)\n\n  React.useEffect(() => {\n    changeShrink(isFocus || !!value)\n  }, [value])\n\n  const onMouseEnterHandler = (ev: React.MouseEvent<HTMLInputElement>) => {\n    if (!['error', 'disabled'].includes(state)) {\n      changeHover(true)\n    }\n    if (onMouseEnter) onMouseEnter(ev)\n  }\n\n  const onMouseLeaveHandler = (ev: React.MouseEvent<HTMLInputElement>) => {\n    if (onMouseLeave) onMouseLeave(ev)\n    changeHover(false)\n  }\n\n  const onFocusHandler = (ev: React.FocusEvent<HTMLInputElement>) => {\n    if (onFocus) onFocus(ev)\n    changeShrink(true)\n    changeFocus(true)\n  }\n\n  const onBlurHandler = (ev: React.FocusEvent<HTMLInputElement>) => {\n    if (onBlur) onBlur(ev)\n    if (!value) {\n      changeShrink(false)\n    }\n    changeFocus(false)\n  }\n\n  const onChangeHandler = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    if (onChange) onChange(ev)\n  }\n\n  const onClickHandler = (ev: React.MouseEvent<HTMLInputElement>) => {\n    ev.stopPropagation()\n    if (onClick) onClick(ev)\n  }\n\n  const onClickIconHandler = (ev: React.MouseEvent<HTMLInputElement>) => {\n    ev.stopPropagation()\n\n    if (onClickIcon) {\n      onClickIcon(ev)\n    }\n  }\n\n  const showError = state === 'error' && errorMessage\n  const showIcon = state === 'valid' || state === 'error' || inputIcon\n  const color = isFocus || isHover ? 'grey5' : mapStateToColor[state]\n  const iconState: InputIconState = mapStateToIconState[state] || 'default'\n  const isRequired = !!inputProps?.required\n\n  const combinedInputProps = {\n    ...inputProps,\n    placeholder: placeholder,\n    autoFocus: autofocus,\n    type: inputType,\n    value,\n    onMouseEnter: onMouseEnterHandler,\n    onMouseLeave: onMouseLeaveHandler,\n    onClick: onClickHandler,\n    onFocus: onFocusHandler,\n    onChange: onChangeHandler,\n    onKeyUp: onKeyUp,\n    onKeyDown: onKeyDown,\n    onBlur: onBlurHandler,\n    disabled: state === 'disabled',\n  }\n\n  const isAriaInvalid = state === 'error' ? true : false\n  const ariaAttrs = {\n    'aria-invalid': isAriaInvalid,\n    'aria-required': isRequired,\n    required: isRequired,\n  }\n\n  return (\n    <StyledInputWrapper className={className} margin={margin} padding={padding}>\n      <InputLabel\n        color={color}\n        htmlFor={inputProps?.id}\n        inputStyle={inputStyle}\n        label={label}\n        shrink={shrink}>\n        {inputMaskProps ? (\n          <StyledInputMask\n            {...inputMaskProps}\n            {...combinedInputProps}\n            {...ariaAttrs}\n            data-test={inputMaskProps?.name}\n            ref={inputMaskRef}\n          />\n        ) : (\n          <StyledInput\n            {...combinedInputProps}\n            {...ariaAttrs}\n            data-test={inputProps?.name}\n            ref={inputRef}\n          />\n        )}\n      </InputLabel>\n\n      {showIcon && (\n        <InputIcon\n          icon={inputIcon}\n          iconLabel={iconLabel}\n          iconSize={inputIconSize}\n          iconState={iconState}\n          onClick={onClickIcon ? onClickIconHandler : undefined}\n        />\n      )}\n\n      {showError && <InputDivider color={color} />}\n\n      {showError && (\n        <StyledHelpWrapper inputStyle={inputStyle}>\n          <CopyText tag=\"span\" color=\"error\" fontSize=\"xxs\">\n            {errorMessage}\n          </CopyText>\n        </StyledHelpWrapper>\n      )}\n\n      {helper && <StyledHelpWrapper inputStyle={inputStyle}>{helper}</StyledHelpWrapper>}\n\n      {helpText && (\n        <StyledHelpWrapper inputStyle={inputStyle}>\n          <CopyText tag=\"span\" fontSize=\"xxs\">\n            {helpText}\n          </CopyText>\n        </StyledHelpWrapper>\n      )}\n    </StyledInputWrapper>\n  )\n}\n\nInput.displayName = 'Input'\n"],"file":"Input.js"}
{"version":3,"sources":["../../../../src/components/Atoms/Like/Like.styled.ts"],"names":["CopyText","styled","StyledLike","div","isInline","theme","isDisabled","color","grey2","grey4","polished","inactive","cursor","spacing","base","xxs","xs","isUnderlined","getIconSize","isSmall","font","lineHeight","getIconMargin","StyledIconWrapper","span","hasIconRight","hasIconLeft","Text","props","Likes"],"mappings":"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","sourcesContent":["import { CopyText } from '@/components/Atoms/Typography'\nimport { styled } from '@/styles/styled'\nimport { Theme } from '@/types/theme'\nimport { StyledLikeProps } from './Like.interface'\n\nexport const StyledLike = styled.div<StyledLikeProps>`\n  display: ${({ isInline }) => (isInline ? `inline-flex` : 'flex')};\n  align-items: center;\n  width: fit-content;\n  color: ${({ theme, isDisabled, isInline }) =>\n    (isDisabled && theme.color.grey2) || (isInline && 'inherit') || theme.color.grey4};\n  opacity: ${({ theme, isDisabled }) => (isDisabled ? theme.polished.inactive : `1.0`)};\n  text-decoration: none;\n  cursor: ${({ isDisabled, cursor }) => (isDisabled ? 'initial' : cursor || 'pointer')};\n  position: relative;\n  padding: ${({ theme }) => `${theme.spacing.base.xxs} ${theme.spacing.base.xs}`};\n  border-bottom: ${({ isUnderlined, isInline, theme }) =>\n    isUnderlined && isInline ? `1px solid ${theme.color.grey2}` : ''};\n\n  ${({ isDisabled, isInline }) =>\n    !isDisabled &&\n    !isInline &&\n    `\n    :hover {\n      &::after {\n        transform-origin: left center;\n        transform: scale(1, 1);\n      }\n    }\n  `}\n`\n\n/**\n * Get the width/height of the icon depending if the Like is small or large.\n *\n * @param theme\n * @param isSmall\n */\nconst getIconSize = (theme: Theme, isSmall: boolean) => {\n  return isSmall ? theme.font.lineHeight.xxs : theme.font.lineHeight.xs\n}\n\nconst getIconMargin = (theme: Theme) => {\n  return theme.spacing.base.xxs\n}\n\nexport const StyledIconWrapper = styled.span<StyledLikeProps>`\n  margin-left: ${({ hasIconRight, theme }) => (hasIconRight ? getIconMargin(theme) : '0px')};\n  margin-right: ${({ hasIconLeft, theme }) => (hasIconLeft ? getIconMargin(theme) : '0px')};\n\n  & svg {\n    height: ${({ theme, isSmall }) => getIconSize(theme, isSmall)};\n    width: ${({ theme, isSmall }) => getIconSize(theme, isSmall)};\n  }\n`\n\nexport const Text = styled(CopyText)<{ isInline: boolean }>`\n  display: ${props => (props.isInline ? 'inline' : 'block')};\n`\n\nexport const Likes = styled(CopyText)<{ isInline: boolean }>`\n  display: ${props => (props.isInline ? 'inline' : 'block')};\n  margin-right: 5px;\n`\n"],"file":"Like.styled.js"}
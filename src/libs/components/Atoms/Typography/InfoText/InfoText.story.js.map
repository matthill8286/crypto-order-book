{"version":3,"sources":["../../../../../src/components/Atoms/Typography/InfoText/InfoText.story.tsx"],"names":["boolean","number","select","text","storiesOf","React","saiyanTheme","InfoText","module","add","sampleText","scaleOptions","scale","tagOptions","tagName","showColors","selectedColor","Object","keys","color","limitLines"],"mappings":";;AAAA,SAASA,OAAT,EAAkBC,MAAlB,EAA0BC,MAA1B,EAAkCC,IAAlC,QAA8C,wBAA9C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT;AAEA,SAASC,QAAT,QAAyB,IAAzB;AAGAH,SAAS,CAAC,gCAAD,EAAmCI,MAAnC,CAAT,CAAoDC,GAApD,CAAwD,UAAxD,EAAoE,YAAM;AACxE,MAAMC,UAAU,GAAGP,IAAI,CAAC,cAAD,sBAAvB;AACA,MAAMQ,YAAY,GAAG,CAAC,OAAD,EAAU,mBAAV,EAA+B,aAA/B,CAArB;AACA,MAAMC,KAAK,GAAGV,MAAM,CAAC,YAAD,EAAeS,YAAf,EAA6B,OAA7B,CAApB;AACA,MAAME,UAA2C,GAAG,CAAC,MAAD,EAAS,IAAT,EAAe,QAAf,EAAyB,KAAzB,CAApD;AACA,MAAMC,OAAO,GAAGZ,MAAM,CAAC,UAAD,EAAaW,UAAb,EAAyB,MAAzB,CAAtB;AACA,MAAME,UAAU,GAAGf,OAAO,CAAC,qBAAD,EAAwB,KAAxB,CAA1B;AACA,MAAMgB,aAAa,GAAGd,MAAM,CAAC,OAAD,EAAUe,MAAM,CAACC,IAAP,CAAYZ,WAAW,CAACa,KAAxB,CAAV,EAA0C,OAA1C,CAA5B;AACA,MAAMC,UAAU,GAAGnB,MAAM,CAAC,aAAD,EAAgB,CAAhB,CAAzB;AAEA,SACE,oBAAC,QAAD;AACE,IAAA,GAAG,EAAEa,OADP;AAEE,IAAA,KAAK,EAAEF;AAFT,KAGOG,UAAU,IAAI;AAAEI,IAAAA,KAAK,EAAEH;AAAT,GAHrB;AAIE,IAAA,UAAU,EAAEI;AAJd,MAKGV,UALH,CADF;AASD,CAnBD","sourcesContent":["import { boolean, number, select, text } from '@storybook/addon-knobs'\nimport { storiesOf } from '@storybook/react'\nimport * as React from 'react'\nimport { saiyanTheme } from '@/styles/sc-vars-saiyan'\nimport { ThemeColors } from '@/types/theme'\nimport { InfoText } from '..'\nimport { TypographyScaleInfo } from './InfoText.interface'\n\nstoriesOf('Design System/Atoms/Typography', module).add('InfoText', () => {\n  const sampleText = text('Example text', `Lorem ipsum dolor`)\n  const scaleOptions = ['small', 'small-highlighted', 'extra-small']\n  const scale = select('Type scale', scaleOptions, 'small') as TypographyScaleInfo\n  const tagOptions: (keyof JSX.IntrinsicElements)[] = ['span', 'em', 'strong', 'div']\n  const tagName = select('Tag name', tagOptions, 'span')\n  const showColors = boolean('Enable Custom Color', false)\n  const selectedColor = select('Color', Object.keys(saiyanTheme.color), 'black') as ThemeColors\n  const limitLines = number('Limit Lines', 0)\n\n  return (\n    <InfoText\n      tag={tagName}\n      scale={scale}\n      {...(showColors && { color: selectedColor })}\n      limitLines={limitLines}>\n      {sampleText}\n    </InfoText>\n  )\n})\n"],"file":"InfoText.story.js"}
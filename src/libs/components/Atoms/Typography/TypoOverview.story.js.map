{"version":3,"sources":["../../../../src/components/Atoms/Typography/TypoOverview.story.tsx"],"names":["boolean","text","storiesOf","React","TypeRhythm","TypoExampleBox","alternateTheme","saiyanTheme","StorybookWrapper","CopyText","Heading","HeadingPresets","InfoText","module","add","headingKeys","Object","keys","demoText","showRhythm","infoTextScales","getFontSizeString","fontName","separator","fontSizeString","font","size","exampleBoxes","map","k","fontSize","push","forEach","scale"],"mappings":"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","sourcesContent":["import { boolean, text } from '@storybook/addon-knobs'\nimport { storiesOf } from '@storybook/react'\nimport * as React from 'react'\nimport { TypeRhythm, TypoExampleBox } from '@/components/Atoms/Typography/utils'\nimport { alternateTheme } from '@/styles/sc-vars-alternate'\nimport { saiyanTheme } from '@/styles/sc-vars-saiyan'\nimport { StorybookWrapper } from '@/utils/StorybookWrapper'\nimport { CopyText } from './CopyText'\nimport { Heading } from './Heading'\nimport { TypographyScaleHeadline } from './Heading/Heading.interface'\nimport { HeadingPresets } from './Heading/HeadingPresets'\nimport { InfoText, TypographyScaleInfo } from './InfoText'\n\nstoriesOf('Design System/Atoms/Typography', module).add('Overview', () => {\n  const headingKeys = Object.keys(HeadingPresets)\n  const demoText = text('Text', 'AbBbCc, 12345')\n  const showRhythm = boolean('Show Rhythm', false)\n  const infoTextScales: TypographyScaleInfo[] = ['small', 'small-highlighted', 'extra-small']\n\n  const getFontSizeString = (fontName?: string): string => {\n    if (!fontName) {\n      return ''\n    }\n\n    const separator = '  â€¢  '\n\n    let fontSizeString = separator + fontName\n\n    // fontSize for saiyan\n    if (saiyanTheme.font.size[fontName]) {\n      fontSizeString = fontSizeString + separator + 'saiyan' + saiyanTheme.font.size[fontName]\n    }\n\n    // fontSize for Alternate\n    if (alternateTheme.font.size[fontName]) {\n      fontSizeString = fontSizeString + separator + 'alternate' + alternateTheme.font.size[fontName]\n    }\n\n    return fontSizeString\n  }\n  // headings\n  const exampleBoxes = headingKeys.map(k => (\n    <TypoExampleBox\n      key={k}\n      labelTop={'Headline' + getFontSizeString(HeadingPresets[k].fontSize)}\n      labelBottom={k}>\n      <TypeRhythm visible={showRhythm}>\n        <Heading scale={k as TypographyScaleHeadline}>{demoText}</Heading>\n      </TypeRhythm>\n    </TypoExampleBox>\n  ))\n\n  // copy text\n  exampleBoxes.push(\n    <TypoExampleBox labelTop=\"CopyText\" key={'CopyText'}>\n      <TypeRhythm visible={boolean('Show Rhythm', false)}>\n        <CopyText>{demoText}</CopyText>\n      </TypeRhythm>\n    </TypoExampleBox>\n  )\n\n  // info text\n  infoTextScales.forEach(scale => {\n    exampleBoxes.push(\n      <TypoExampleBox key={'InfoText_' + scale} labelTop=\"InfoText\" labelBottom={scale}>\n        <TypeRhythm visible={boolean('Show Rhythm', false)}>\n          <InfoText scale={scale}>{demoText}</InfoText>\n        </TypeRhythm>\n      </TypoExampleBox>\n    )\n  })\n\n  return <StorybookWrapper>{exampleBoxes}</StorybookWrapper>\n})\n"],"file":"TypoOverview.story.js"}
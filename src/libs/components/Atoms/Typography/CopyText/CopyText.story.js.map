{"version":3,"sources":["../../../../../src/components/Atoms/Typography/CopyText/CopyText.story.tsx"],"names":["boolean","number","select","text","storiesOf","React","saiyanTheme","CopyText","module","add","sampleText","fontSizeOptions","fontSize","tagOptions","tagName","withMargins","multiple","showColors","selectedColor","Object","keys","color","isBold","limitLines"],"mappings":";;AAAA,SAASA,OAAT,EAAkBC,MAAlB,EAA0BC,MAA1B,EAAkCC,IAAlC,QAA8C,wBAA9C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT;AAEA,SAASC,QAAT;AAEAH,SAAS,CAAC,gCAAD,EAAmCI,MAAnC,CAAT,CAAoDC,GAApD,CAAwD,UAAxD,EAAoE,YAAM;AACxE,MAAMC,UAAU,GAAGP,IAAI,CACrB,aADqB,oOAAvB;AAKA,MAAMQ,eAAe,GAAG,CAAC,KAAD,EAAQ,IAAR,EAAc,IAAd,EAAoB,IAApB,CAAxB;AACA,MAAMC,QAAQ,GAAGV,MAAM,CAAC,eAAD,EAAkBS,eAAlB,EAAmC,IAAnC,CAAvB;AACA,MAAME,UAA2C,GAAG,CAAC,GAAD,EAAM,MAAN,EAAc,KAAd,CAApD;AACA,MAAMC,OAAO,GAAGZ,MAAM,CAAC,UAAD,EAAaW,UAAb,EAAyB,GAAzB,CAAtB;AACA,MAAME,WAAW,GAAGf,OAAO,CAAC,cAAD,EAAiB,KAAjB,CAA3B;AACA,MAAMgB,QAAQ,GAAGhB,OAAO,CAAC,qBAAD,EAAwB,KAAxB,CAAxB;AACA,MAAMiB,UAAU,GAAGjB,OAAO,CAAC,qBAAD,EAAwB,KAAxB,CAA1B;AACA,MAAMkB,aAAa,GAAGhB,MAAM,CAAC,OAAD,EAAUiB,MAAM,CAACC,IAAP,CAAYd,WAAW,CAACe,KAAxB,CAAV,EAA0C,OAA1C,CAA5B;AACA,MAAMC,MAAM,GAAGtB,OAAO,CAAC,MAAD,EAAS,KAAT,CAAtB;AACA,MAAMuB,UAAU,GAAGtB,MAAM,CAAC,aAAD,EAAgB,CAAhB,CAAzB;AAEA,SACE,0CACE,oBAAC,QAAD;AACE,IAAA,GAAG,EAAEa,OADP;AAEE,IAAA,QAAQ,EAAEF,QAFZ;AAGE,IAAA,WAAW,EAAEG,WAHf;AAIE,IAAA,IAAI,EAAEO;AAJR,KAKOL,UAAU,IAAI;AAAEI,IAAAA,KAAK,EAAEH;AAAT,GALrB;AAME,IAAA,UAAU,EAAEK;AANd,MAOGb,UAPH,CADF,EAUGM,QAAQ,IACP,oBAAC,QAAD;AACE,IAAA,GAAG,EAAEF,OADP;AAEE,IAAA,QAAQ,EAAEF,QAFZ;AAGE,IAAA,WAAW,EAAEG,WAHf;AAIE,IAAA,IAAI,EAAEO;AAJR,KAKOL,UAAU,IAAI;AAAEI,IAAAA,KAAK,EAAEH;AAAT,GALrB;AAME,IAAA,UAAU,EAAEK;AANd,MAOGb,UAPH,CAXJ,EAqBGM,QAAQ,IACP,oBAAC,QAAD;AACE,IAAA,GAAG,EAAEF,OADP;AAEE,IAAA,QAAQ,EAAEF,QAFZ;AAGE,IAAA,WAAW,EAAEG,WAHf;AAIE,IAAA,IAAI,EAAEO;AAJR,KAKOL,UAAU,IAAI;AAAEI,IAAAA,KAAK,EAAEH;AAAT,GALrB;AAME,IAAA,UAAU,EAAEK;AANd,MAOGb,UAPH,CAtBJ,CADF;AAmCD,CApDD","sourcesContent":["import { boolean, number, select, text } from '@storybook/addon-knobs'\nimport { storiesOf } from '@storybook/react'\nimport * as React from 'react'\nimport { saiyanTheme } from '@/styles/sc-vars-saiyan'\nimport { ThemeColors, ThemeFontSizes } from '@/types/theme'\nimport { CopyText } from './CopyText'\n\nstoriesOf('Design System/Atoms/Typography', module).add('CopyText', () => {\n  const sampleText = text(\n    'Sample text',\n    `Lorem ipsum dolorsit amet consectetur adipisicing elit. Lorem ipsum dolorsit amet consectetur adipisicing elit. Lorem ipsum dolorsit amet consectetur adipisicing elit. Lorem ipsum dolorsit amet consectetur adipisicing elit.`\n  )\n\n  const fontSizeOptions = ['xxs', 'xs', 'sm', 'md']\n  const fontSize = select('Type fontSize', fontSizeOptions, 'xs') as ThemeFontSizes\n  const tagOptions: (keyof JSX.IntrinsicElements)[] = ['p', 'span', 'div']\n  const tagName = select('Tag name', tagOptions, 'p')\n  const withMargins = boolean('With margins', false)\n  const multiple = boolean('Multiple paragraphs', false)\n  const showColors = boolean('Enable Custom Color', false)\n  const selectedColor = select('Color', Object.keys(saiyanTheme.color), 'black') as ThemeColors\n  const isBold = boolean('Bold', false)\n  const limitLines = number('Limit Lines', 0)\n\n  return (\n    <>\n      <CopyText\n        tag={tagName}\n        fontSize={fontSize}\n        withMargins={withMargins}\n        bold={isBold}\n        {...(showColors && { color: selectedColor })}\n        limitLines={limitLines}>\n        {sampleText}\n      </CopyText>\n      {multiple && (\n        <CopyText\n          tag={tagName}\n          fontSize={fontSize}\n          withMargins={withMargins}\n          bold={isBold}\n          {...(showColors && { color: selectedColor })}\n          limitLines={limitLines}>\n          {sampleText}\n        </CopyText>\n      )}\n      {multiple && (\n        <CopyText\n          tag={tagName}\n          fontSize={fontSize}\n          withMargins={withMargins}\n          bold={isBold}\n          {...(showColors && { color: selectedColor })}\n          limitLines={limitLines}>\n          {sampleText}\n        </CopyText>\n      )}\n    </>\n  )\n})\n"],"file":"CopyText.story.js"}
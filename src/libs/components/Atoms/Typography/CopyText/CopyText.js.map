{"version":3,"sources":["../../../../../src/components/Atoms/Typography/CopyText/CopyText.tsx"],"names":["React","Typo","getMargins","fontSize","CopyText","tag","withMargins","bold","color","children","margin","restProps","mobile","displayName"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,IAAT;;AAIA,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,QAAD,EAA8C;AAC/D,MAAIA,QAAQ,KAAKA,QAAQ,KAAK,IAAb,IAAqBA,QAAQ,KAAK,IAAvC,CAAZ,EAA0D;AACxD,WAAO,SAAP;AACD,GAFD,MAEO;AACL,WAAO,EAAP;AACD;AACF,CAND;;AAQA,OAAO,IAAMC,QAAiC,GAAG,SAApCA,QAAoC;AAAA,sBAC/CC,GAD+C;AAAA,MAC/CA,GAD+C,yBACzC,GADyC;AAAA,8BAE/CC,WAF+C;AAAA,MAE/CA,WAF+C,iCAEjC,KAFiC;AAAA,uBAG/CC,IAH+C;AAAA,MAG/CA,IAH+C,0BAGxC,KAHwC;AAAA,wBAI/CC,KAJ+C;AAAA,MAI/CA,KAJ+C,2BAIvC,OAJuC;AAAA,2BAK/CL,QAL+C;AAAA,MAK/CA,QAL+C,8BAKpC,IALoC;AAAA,MAM/CM,QAN+C,QAM/CA,QAN+C;AAAA,MAO/CC,MAP+C,QAO/CA,MAP+C;AAAA,MAQ5CC,SAR4C;;AAAA,SAU/C,oBAAC,IAAD;AACE,IAAA,GAAG,EAAEN,GADP;AAEE,IAAA,KAAK,EAAEG,KAFT;AAGE,IAAA,QAAQ,EAAEL,QAHZ;AAIE,IAAA,MAAM,EAAEI,IAAI,GAAG,MAAH,GAAY,SAJ1B;AAKE,IAAA,MAAM,EACHD,WAAW,IACVH,QADD,KAEE,OAAOA,QAAP,KAAoB,QAApB,GACGD,UAAU,CAACC,QAAD,CADb,GAEGD,UAAU,CAAEC,QAAF,aAAEA,QAAF,uBAAEA,QAAD,CAA2BS,MAA5B,CAJf,CAAD,IAKAF;AAXJ,KAaMC,SAbN,GAcGF,QAdH,CAV+C;AAAA,CAA1C;AA4BPL,QAAQ,CAACS,WAAT,GAAuB,UAAvB","sourcesContent":["import React from 'react'\nimport { BoxDimensions, ThemeFontSizes } from '@/types/theme'\nimport { Typo } from '../Typo'\nimport { FontSizeMap } from '../Typo/Typo.interface'\nimport { CopyTextProps } from './CopyText.interface'\n\nconst getMargins = (fontSize?: ThemeFontSizes): BoxDimensions => {\n  if (fontSize && (fontSize === 'xs' || fontSize === 'sm')) {\n    return 'xs 0 md'\n  } else {\n    return ''\n  }\n}\n\nexport const CopyText: React.FC<CopyTextProps> = ({\n  tag = 'p',\n  withMargins = false,\n  bold = false,\n  color = 'grey5',\n  fontSize = 'xs',\n  children,\n  margin,\n  ...restProps\n}) => (\n  <Typo\n    tag={tag}\n    color={color}\n    fontSize={fontSize}\n    weight={bold ? 'bold' : 'regular'}\n    margin={\n      (withMargins &&\n        fontSize &&\n        (typeof fontSize === 'string'\n          ? getMargins(fontSize)\n          : getMargins((fontSize as FontSizeMap)?.mobile))) ||\n      margin\n    }\n    {...restProps}>\n    {children}\n  </Typo>\n)\n\nCopyText.displayName = 'CopyText'\n"],"file":"CopyText.js"}
{"version":3,"sources":["../../../../src/components/Atoms/Card/CardV2.tsx"],"names":["React","Badge","StyledBadgeLineWrapper","StyledCard","StyledCardWrapper","StyledDivider","StyledFeaturedAssetsContainer","StyledFeaturedAssetSpacing","StyledFeaturedAssetsPicture","FeaturedAsset","image","FeaturedAssetRow","floatingAssetRow","featuredAssetImages","length","featuredAssets","map","fa","index","Card","ariaLabel","ariaLabelledby","children","center","contentWidth","elevation","elevationHover","fullHeight","noBorder","borderColor","borderWidth","showDivider","dividerWidth","padding","margin","shape","surface","textColor","overflow","display","flexDirection","badges","badgeActionType","onClick","className","otherProps","a11yProps","tabIndex","card"],"mappings":";;;;;;;;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,KAAT;AAEA,SACEC,sBADF,EAEEC,UAFF,EAGEC,iBAHF,EAIEC,aAJF,EAKEC,6BALF,EAMEC,0BANF,EAOEC,2BAPF;;AAUA,IAAMC,aAA2C,GAAG,SAA9CA,aAA8C,OAAe;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACjE,SACE,oBAAC,0BAAD,QACE,oBAAC,IAAD;AACE,IAAA,MAAM,MADR;AAEE,IAAA,SAAS,EAAE,CAFb;AAGE,IAAA,OAAO,EAAC,MAHV;AAIE,IAAA,KAAK,EAAC,eAJR;AAKE,IAAA,OAAO,EAAC,IALV;AAME,IAAA,QAAQ,EAAE,CAAC,QAAD,EAAW,KAAX,EAAkB,OAAlB,EAA2B,MAA3B;AANZ,KAOE,oBAAC,2BAAD;AAA6B,IAAA,GAAG,EAAEA,KAAlC;AAAyC,IAAA,MAAM,EAAC,MAAhD;AAAuD,IAAA,SAAS,EAAC,SAAjE;AAA2E,IAAA,KAAK,EAAC;AAAjF,IAPF,CADF,CADF;AAaD,CAdD;;AAgBA,IAAMC,gBAAiD,GAAG,SAApDA,gBAAoD,QAGpD;AAAA,MAFJC,gBAEI,SAFJA,gBAEI;AAAA,MADJC,mBACI,SADJA,mBACI;;AACJ,MAAIA,mBAAmB,IAAIA,mBAAmB,CAACC,MAApB,GAA6B,CAAxD,EAA2D;AACzD,QAAMC,cAAc,GAAGF,mBAAmB,CAACG,GAApB,CAAwB,UAACC,EAAD,EAAKC,KAAL;AAAA,aAC7C,oBAAC,aAAD;AAAe,QAAA,GAAG,EAAE,mBAAmBD,EAAE,CAACP,KAAtB,GAA8BQ;AAAlD,SAA6DD,EAA7D,EAD6C;AAAA,KAAxB,CAAvB;AAGA,WAAO,oBAAC,6BAAD,QAAgCF,cAAhC,CAAP;AACD,GALD,MAKO;AACL,WAAO,IAAP;AACD;AACF,CAZD;;AAcA,OAAO,IAAMI,IAAyB,GAAG,SAA5BA,IAA4B,QA6BnC;AAAA,MA5BJC,SA4BI,SA5BJA,SA4BI;AAAA,MA3BJC,cA2BI,SA3BJA,cA2BI;AAAA,MA1BJC,QA0BI,SA1BJA,QA0BI;AAAA,2BAzBJC,MAyBI;AAAA,MAzBJA,MAyBI,6BAzBK,KAyBL;AAAA,MAxBJC,YAwBI,SAxBJA,YAwBI;AAAA,8BAvBJC,SAuBI;AAAA,MAvBJA,SAuBI,gCAvBQ,CAuBR;AAAA,MAtBJC,cAsBI,SAtBJA,cAsBI;AAAA,+BArBJC,UAqBI;AAAA,MArBJA,UAqBI,iCArBS,KAqBT;AAAA,6BApBJC,QAoBI;AAAA,MApBJA,QAoBI,+BApBO,EAoBP;AAAA,MAnBJC,WAmBI,SAnBJA,WAmBI;AAAA,gCAlBJC,WAkBI;AAAA,MAlBJA,WAkBI,kCAlBU,CAkBV;AAAA,gCAjBJC,WAiBI;AAAA,MAjBJA,WAiBI,kCAjBU,KAiBV;AAAA,oCAhBJnB,gBAgBI;AAAA,MAhBJA,gBAgBI,sCAhBe,KAgBf;AAAA,MAfJoB,YAeI,SAfJA,YAeI;AAAA,MAdJC,OAcI,SAdJA,OAcI;AAAA,MAbJC,MAaI,SAbJA,MAaI;AAAA,MAZJC,KAYI,SAZJA,KAYI;AAAA,4BAXJC,OAWI;AAAA,MAXJA,OAWI,8BAXM,OAWN;AAAA,8BAVJC,SAUI;AAAA,MAVJA,SAUI,gCAVQ,OAUR;AAAA,MATJC,QASI,SATJA,QASI;AAAA,4BARJC,OAQI;AAAA,MARJA,OAQI,8BARM,OAQN;AAAA,MAPJC,aAOI,SAPJA,aAOI;AAAA,2BANJC,MAMI;AAAA,MANJA,MAMI,6BANK,EAML;AAAA,oCALJC,eAKI;AAAA,MALJA,eAKI,sCALc,WAKd;AAAA,MAJJC,OAII,SAJJA,OAII;AAAA,MAHJC,SAGI,SAHJA,SAGI;AAAA,MAFJ/B,mBAEI,SAFJA,mBAEI;AAAA,MADDgC,UACC;;AACJ,MAAMC,SAAS,GAAG;AAChB,kBAAc1B,SADE;AAEhB,uBAAmBC,cAFH;AAGhB0B,IAAAA,QAAQ,EAAE;AAHM,GAAlB;AAMA,MAAMC,IAAI,GACR,oBAAC,UAAD;AACE,IAAA,WAAW,EAAEnB,WADf;AAEE,IAAA,WAAW,EAAEC,WAFf;AAGE,IAAA,MAAM,EAAEP,MAHV;AAIE,IAAA,OAAO,EAAEgB,OAJX;AAKE,IAAA,SAAS,EAAEd,SALb;AAME,IAAA,cAAc,EAAEC,cANlB;AAOE,IAAA,YAAY,EAAEF,YAPhB;AAQE,IAAA,aAAa,EAAEgB,aARjB;AASE,IAAA,MAAM,EAAEN,MATV;AAUE,IAAA,QAAQ,EAAEN,QAVZ;AAWE,IAAA,QAAQ,EAAEU,QAXZ;AAYE,IAAA,OAAO,EAAEL,OAZX;AAaE,IAAA,KAAK,EAAEE,KAbT;AAcE,IAAA,WAAW,EAAEJ,WAdf;AAeE,IAAA,OAAO,EAAEK,OAfX;AAgBE,IAAA,SAAS,EAAEC;AAhBb,KAiBOM,OAAO,qBAAQG,SAAR,IAAsB,EAjBpC,GAkBGxB,QAlBH,CADF;AAuBA,SACE,oBAAC,iBAAD;AACE,IAAA,SAAS,EAAEsB,SADb;AAEE,IAAA,cAAc,EAAElB,cAFlB;AAGE,IAAA,UAAU,EAAEC,UAHd;AAIE,IAAA,OAAO,EAAEgB;AAJX,KAKOA,OAAO,qBAAQG,SAAR,IAAsB,EALpC,EAMMD,UANN,GAOGJ,MAAM,IAAIA,MAAM,CAAC3B,MAAP,GAAgB,CAA1B,GACC,0CACE,oBAAC,sBAAD,QACE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAE2B,MAAf;AAAuB,IAAA,WAAW,MAAlC;AAAmC,IAAA,UAAU,EAAEC;AAA/C,IADF,CADF,EAIGM,IAJH,CADD,GAQCA,IAfJ,EAiBGjB,WAAW,IAAI,oBAAC,aAAD;AAAe,IAAA,YAAY,EAAEC;AAA7B,IAjBlB,EAkBE,oBAAC,gBAAD;AACE,IAAA,gBAAgB,EAAEpB,gBADpB;AAEE,IAAA,mBAAmB,EAAEC;AAFvB,IAlBF,CADF;AAyBD,CApFM","sourcesContent":["import * as React from 'react'\nimport { Badge } from '../Badge'\nimport { CardProps, FeaturedAssetProps, FeaturedAssetRowProps } from './Card.interface'\nimport {\n  StyledBadgeLineWrapper,\n  StyledCard,\n  StyledCardWrapper,\n  StyledDivider,\n  StyledFeaturedAssetsContainer,\n  StyledFeaturedAssetSpacing,\n  StyledFeaturedAssetsPicture,\n} from './Card.styled'\n\nconst FeaturedAsset: React.FC<FeaturedAssetProps> = ({ image }) => {\n  return (\n    <StyledFeaturedAssetSpacing>\n      <Card\n        center\n        elevation={1}\n        display=\"flex\"\n        shape=\"rounded-small\"\n        padding=\"xs\"\n        noBorder={['bottom', 'top', 'right', 'left']}>\n        <StyledFeaturedAssetsPicture src={image} height=\"32px\" objectFit=\"contain\" width=\"auto\" />\n      </Card>\n    </StyledFeaturedAssetSpacing>\n  )\n}\n\nconst FeaturedAssetRow: React.FC<FeaturedAssetRowProps> = ({\n  floatingAssetRow,\n  featuredAssetImages,\n}) => {\n  if (featuredAssetImages && featuredAssetImages.length > 0) {\n    const featuredAssets = featuredAssetImages.map((fa, index) => (\n      <FeaturedAsset key={'FeaturedAsset_' + fa.image + index} {...fa} />\n    ))\n    return <StyledFeaturedAssetsContainer>{featuredAssets}</StyledFeaturedAssetsContainer>\n  } else {\n    return null\n  }\n}\n\nexport const Card: React.FC<CardProps> = ({\n  ariaLabel,\n  ariaLabelledby,\n  children,\n  center = false,\n  contentWidth,\n  elevation = 0,\n  elevationHover,\n  fullHeight = false,\n  noBorder = [],\n  borderColor,\n  borderWidth = 1,\n  showDivider = false,\n  floatingAssetRow = false,\n  dividerWidth,\n  padding,\n  margin,\n  shape,\n  surface = 'white',\n  textColor = 'black',\n  overflow,\n  display = 'block',\n  flexDirection,\n  badges = [],\n  badgeActionType = 'prominent',\n  onClick,\n  className,\n  featuredAssetImages,\n  ...otherProps\n}) => {\n  const a11yProps = {\n    'aria-label': ariaLabel,\n    'aria-labelledby': ariaLabelledby,\n    tabIndex: 0,\n  }\n\n  const card = (\n    <StyledCard\n      borderColor={borderColor}\n      borderWidth={borderWidth}\n      center={center}\n      display={display}\n      elevation={elevation}\n      elevationHover={elevationHover}\n      contentWidth={contentWidth}\n      flexDirection={flexDirection}\n      margin={margin}\n      noBorder={noBorder}\n      overflow={overflow}\n      padding={padding}\n      shape={shape}\n      showDivider={showDivider}\n      surface={surface}\n      textColor={textColor}\n      {...(onClick ? { ...a11yProps } : {})}>\n      {children}\n    </StyledCard>\n  )\n\n  return (\n    <StyledCardWrapper\n      className={className}\n      elevationHover={elevationHover}\n      fullHeight={fullHeight}\n      onClick={onClick}\n      {...(onClick ? { ...a11yProps } : {})}\n      {...otherProps}>\n      {badges && badges.length > 0 ? (\n        <>\n          <StyledBadgeLineWrapper>\n            <Badge badges={badges} isBadgeLine actionType={badgeActionType} />\n          </StyledBadgeLineWrapper>\n          {card}\n        </>\n      ) : (\n        card\n      )}\n      {showDivider && <StyledDivider dividerWidth={dividerWidth} />}\n      <FeaturedAssetRow\n        floatingAssetRow={floatingAssetRow}\n        featuredAssetImages={featuredAssetImages}\n      />\n    </StyledCardWrapper>\n  )\n}\n"],"file":"CardV2.js"}
{"version":3,"sources":["../../../../src/components/Atoms/Card/Card.styled.ts"],"names":["darken","media","css","styled","Picture","StyledBadgeLineWrapper","div","maxMd","handleElevation","elevation","surface","theme","elevationAsStyleString","dimension","color","primary","handlePadding","baseSpacing","padding","paddingCss","responsivePaddingCss","top","right","bottom","left","overallPadding","mobile","tablet","desktop","handleMargin","margin","marginCss","responsiveMarginCss","overallMargin","handleBorder","borderWidth","borderColor","surfaces","white","grey2","clear","grey","black","grey5","selected","finalBorderColor","polished","handleColor","textColor","isCornersShape","shape","typedShape","bottomLeft","bottomRight","topLeft","topRight","handleShape","borders","sharp","borderRadius0","borderRadius1","borderRadius2","borderRadius3","handleSurface","grey4","grey6","handleNoBorder","noBorder","Array","isArray","map","position","join","handleElevationHover","elevationHover","StyledCard","center","display","overflow","cardHeight","flexDirection","spacing","base","StyledFeaturedAssetsPicture","StyledFeaturedAssetsContainer","StyledFeaturedAssetSpacing","xs","StyledDivider","dividerWidth","StyledCardWrapper","fullHeight"],"mappings":"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","sourcesContent":["import { darken } from 'polished'\nimport { media } from '@/styles'\nimport { css, styled } from '@/styles/styled'\nimport {\n  Elevation,\n  HorizontalMargin,\n  HorizontalPadding,\n  Margin,\n  Padding,\n  Position,\n  ThemeColors,\n  VerticalMargin,\n  VerticalMarginMap,\n  VerticalPadding,\n  VerticalPaddingMap,\n} from '@/types/theme'\nimport { Picture } from '../Picture'\nimport {\n  Corners,\n  Shape,\n  StyledBadgeWrapperProps,\n  StyledCardProps,\n  StyledDividerProps,\n  Surface,\n} from './Card.interface'\n\nexport const StyledBadgeLineWrapper = styled.div<StyledBadgeWrapperProps>`\n  position: absolute;\n  left: 0;\n  top: -14px;\n  max-width: 100%;\n  z-index: 1; /* required because transform interferes with z-order */\n\n  ${media.maxMd} {\n    > div > div:nth-child(n + 3) {\n      display: none;\n    }\n  }\n`\n\nconst handleElevation = (elevation: Elevation, surface: Surface = 'white') => {\n  return ({ theme }) => {\n    if (surface === 'selected') {\n      const elevationAsStyleString = elevation\n        ? `${theme.dimension[`elevationLevel${elevation}`]}, `\n        : ''\n      return `${elevationAsStyleString}inset 0px 0px 0px 2px ${theme.color.primary}`\n    }\n\n    return theme.dimension[`elevationLevel${elevation}`]\n  }\n}\n\nexport const handlePadding = (\n  baseSpacing: Record<string, unknown>,\n  padding: VerticalPadding | VerticalPaddingMap | Padding\n): string => {\n  let paddingCss = ''\n  let responsivePaddingCss = ''\n  const { top, right, bottom, left } = padding as Padding\n  const overallPadding = padding as HorizontalPadding\n  const { mobile, tablet, desktop } = padding as VerticalPaddingMap\n\n  // set a padding for all sides if prop e.g. padding=\"sm\"\n  if (overallPadding && baseSpacing[overallPadding]) {\n    paddingCss = `padding: ${baseSpacing[overallPadding]};`\n  }\n\n  // add padding for one side if prop has attribute: padding={{top: 'sm'}}\n  if (top) {\n    responsivePaddingCss = responsivePaddingCss + `padding-top: ${baseSpacing[top]};`\n  }\n\n  // add padding for one side if prop has attribute: padding={{right: 'lg'}}\n  if (right) {\n    responsivePaddingCss = responsivePaddingCss + `padding-right: ${baseSpacing[right]};`\n  }\n\n  // add padding for one side if prop has attribute: padding={{bottom: 'xxs'}}\n  if (bottom) {\n    responsivePaddingCss = responsivePaddingCss + `padding-bottom: ${baseSpacing[bottom]};`\n  }\n\n  // add padding for one side if prop has attribute: padding={{left: 'xl'}}\n  if (left) {\n    responsivePaddingCss = responsivePaddingCss + `padding-left: ${baseSpacing[left]};`\n  }\n\n  // add padding rule for mobile, if a single side was set above, only the other sides will be affected\n  if (mobile) {\n    paddingCss =\n      paddingCss + `${media.mobile} {padding: ${baseSpacing[mobile]}; ${responsivePaddingCss}};`\n  }\n\n  // add padding rule for tablet, if a single side was set above, only the other sides will be affected\n  if (tablet) {\n    paddingCss =\n      paddingCss + `${media.tablet} {padding: ${baseSpacing[tablet]}; ${responsivePaddingCss}};`\n  }\n\n  // add padding rule for desktop, if a single side was set above, only the other sides will be affected\n  if (desktop) {\n    paddingCss =\n      paddingCss + `${media.desktop} {padding: ${baseSpacing[desktop]}; ${responsivePaddingCss}};`\n  }\n\n  return paddingCss || responsivePaddingCss\n}\n\nexport const handleMargin = (\n  baseSpacing: Record<string, unknown>,\n  margin: VerticalMarginMap | VerticalMargin | Margin\n): string => {\n  let marginCss = ''\n  let responsiveMarginCss = ''\n  const { top, right, bottom, left } = margin as Margin\n  const overallMargin = margin as HorizontalMargin\n  const { mobile, tablet, desktop } = margin as VerticalMarginMap\n\n  // set a margin for all sides if prop e.g. margin=\"sm\"\n  if (overallMargin && baseSpacing[overallMargin]) {\n    marginCss = `margin: ${baseSpacing[overallMargin]};`\n  }\n\n  // add margin for one side if prop has attribute: margin={{top: 'sm'}}\n  if (top) {\n    responsiveMarginCss = responsiveMarginCss + `margin-top: ${baseSpacing[top]};`\n  }\n\n  // add margin for one side if prop has attribute: margin={{right: 'lg'}}\n  if (right) {\n    responsiveMarginCss = responsiveMarginCss + `margin-right: ${baseSpacing[right]};`\n  }\n\n  // add margin for one side if prop has attribute: margin={{bottom: 'xxs'}}\n  if (bottom) {\n    responsiveMarginCss = responsiveMarginCss + `margin-bottom: ${baseSpacing[bottom]};`\n  }\n\n  // add margin for one side if prop has attribute: margin={{left: 'xl'}}\n  if (left) {\n    responsiveMarginCss = responsiveMarginCss + `margin-left: ${baseSpacing[left]};`\n  }\n\n  // add margin rule for mobile, if a single side was set above, only the other sides will be affected\n  if (mobile) {\n    marginCss =\n      marginCss + `${media.mobile} {margin: ${baseSpacing[mobile]}; ${responsiveMarginCss}};`\n  }\n\n  // add margin rule for tablet, if a single side was set above, only the other sides will be affected\n  if (tablet) {\n    marginCss =\n      marginCss + `${media.tablet} {margin: ${baseSpacing[tablet]}; ${responsiveMarginCss}};`\n  }\n\n  // add margin rule for desktop, if a single side was set above, only the other sides will be affected\n  if (desktop) {\n    marginCss =\n      marginCss + `${media.desktop} {margin: ${baseSpacing[desktop]}; ${responsiveMarginCss}};`\n  }\n\n  return marginCss || responsiveMarginCss\n}\n\nconst handleBorder = (surface: Surface, borderWidth: number, borderColor?: ThemeColors) => {\n  return ({ theme }) => {\n    const surfaces = {\n      white: theme.color.grey2,\n      clear: theme.color.grey2,\n      grey: theme.color.grey2,\n      black: theme.color.grey5,\n      primary: theme.color.primary,\n      selected: theme.color.selected,\n    }\n\n    let finalBorderColor\n\n    if (borderColor) {\n      finalBorderColor = theme.color[borderColor]\n    } else if (surface === 'primary') {\n      finalBorderColor = darken(theme.polished.darken, theme.color.primary)\n    } else {\n      finalBorderColor = surfaces[surface]\n    }\n    return `${borderWidth}px solid ${finalBorderColor}`\n  }\n}\n\nconst handleColor = (textColor?: ThemeColors, surface?: Surface) => {\n  return ({ theme }) => {\n    switch (surface) {\n      case 'black':\n      case 'primary':\n        return theme.color.white\n      case 'selected':\n        return theme.color.black\n      default:\n        return theme.color[textColor || 'black']\n    }\n  }\n}\n\nconst isCornersShape = (shape: Shape | Corners<Shape>): shape is Corners<Shape> => {\n  const typedShape = shape as Corners<Shape>\n  return (\n    !!typedShape.bottomLeft ||\n    !!typedShape.bottomRight ||\n    !!typedShape.topLeft ||\n    !!typedShape.topRight\n  )\n}\n\nexport const handleShape = (shape: Shape | Corners<Shape>) => {\n  return ({ theme }) => {\n    const borders = {\n      sharp: theme.dimension.borderRadius0,\n      'rounded-small': theme.dimension.borderRadius1,\n      'rounded-big': theme.dimension.borderRadius2,\n      'rounded-xl': theme.dimension.borderRadius3,\n    }\n    if (isCornersShape(shape)) {\n      const { bottomRight, bottomLeft, topLeft, topRight } = shape\n      return `\n        ${topLeft && `border-top-left-radius: ${borders[topLeft]};`}\n        ${topRight && `border-top-right-radius: ${borders[topRight]};`}\n        ${bottomLeft && `border-bottom-left-radius: ${borders[bottomLeft]};`}\n        ${bottomRight && `border-bottom-right-radius: ${borders[bottomRight]};`}\n      `\n    } else {\n      return `border-radius: ${borders[shape]};`\n    }\n  }\n}\n\nconst handleSurface = (surface?: Surface) => {\n  return ({ theme }) => {\n    const surfaces = {\n      white: theme.color.white,\n      grey: theme.color.grey4,\n      black: theme.color.grey6,\n      primary: theme.color.primary,\n      selected: theme.color.white,\n    }\n    return 'background-color: ' + surfaces[surface ? surface : 'white'] + ';'\n  }\n}\n\nconst handleNoBorder = (noBorder: Position | Position[] | 'none'): string => {\n  if (noBorder === 'none') {\n    return `border: none;`\n  }\n\n  if (Array.isArray(noBorder)) {\n    return noBorder.map(position => `border-${position}-width: 0px;`).join('')\n  } else {\n    return `border-${noBorder}-width: 0px;`\n  }\n}\n\nconst handleElevationHover = (\n  elevationHover: Elevation,\n  elevation: Elevation,\n  surface?: Surface\n) => css<StyledCardProps>`\n  cursor: pointer;\n  transition-duration: 0.15s;\n  transition-timing-function: ease-in-out;\n  transition-property: border-color, box-shadow, transform;\n\n  ${media.tablet} {\n    &:hover {\n      transform: ${elevationHover > 0 && elevationHover !== elevation\n        ? 'translateY(-1px)'\n        : 'none'};\n      box-shadow: ${handleElevation(elevationHover, surface)};\n      border-color: rgba(0, 0, 0, 0);\n    }\n  }\n`\n\nexport const StyledCard = styled.div<StyledCardProps>(\n  ({\n    borderColor,\n    borderWidth,\n    center,\n    display,\n    elevation,\n    elevationHover,\n    margin,\n    noBorder,\n    overflow,\n    padding,\n    cardHeight,\n    flexDirection,\n    shape,\n    surface,\n    textColor,\n    theme,\n  }) => css<StyledCardProps>`\n    ${display && `display: ${display};`};\n    ${flexDirection && `flex-direction: ${flexDirection};`};\n    box-sizing: border-box;\n    line-height: 1.43;\n    overflow: ${overflow ? overflow : 'hidden'};\n    ${!!padding && handlePadding(theme.spacing.base, padding as VerticalPaddingMap)};\n    ${!!margin && handleMargin(theme.spacing.base, margin)};\n    box-shadow: ${handleElevation(elevation, surface)};\n    color: ${handleColor(textColor, surface)};\n    border: ${elevation === 0 && handleBorder(surface ?? 'white', borderWidth, borderColor)};\n    ${surface && handleSurface(surface)}\n    ${noBorder && handleNoBorder(noBorder)}\n    ${!!elevationHover && handleElevationHover(elevationHover, elevation, surface)}\n    ${shape && handleShape(shape)}\n    ${center && `text-align: center;`}\n    height: ${cardHeight ? cardHeight : '100%'};\n    width: 100%;\n\n    h1,\n    h2,\n    h3,\n    h4,\n    h5,\n    h6 {\n      color: ${(surface === 'grey' || surface === 'primary' || surface === 'black') &&\n        theme.color.white};\n    }\n  `\n)\n\nexport const StyledFeaturedAssetsPicture = styled(Picture)`\n  & img {\n    display: block;\n    /* Need to set max width on assets here because it's overwritten in multiple places by carousel styles :-() */\n    max-width: 128px !important;\n  }\n`\n\nexport const StyledFeaturedAssetsContainer = styled.div`\n  display: none;\n  ${media.tablet} {\n    position: absolute;\n    display: flex;\n    z-index: 1;\n    right: 0;\n    top: -24px;\n    justify-content: flex-end;\n  }\n`\n\nexport const StyledFeaturedAssetSpacing = styled.div(\n  ({ theme }) => css`\n    margin-left: ${theme.spacing.base.xs};\n  `\n)\n\nexport const StyledDivider = styled.div<StyledDividerProps>(\n  ({ dividerWidth, theme }) =>\n    css<StyledDividerProps>`\n      position: absolute;\n      bottom: 1px;\n      left: calc(calc(100% - ${dividerWidth}) / 2);\n      display: flex;\n      width: ${dividerWidth};\n      margin: 0 auto;\n      z-index: 1;\n      background: ${theme.color.grey2};\n      height: 1px;\n    `\n)\n\nexport const StyledCardWrapper = styled.div<{\n  fullHeight: boolean\n  elevationHover?: Elevation\n  cardHeight?: string\n}>`\n  position: relative;\n  outline: none;\n  width: 100%;\n\n  ${StyledBadgeLineWrapper} {\n    transition-duration: 0.15s;\n    transition-timing-function: ease-in-out;\n    transition-property: transform;\n  }\n\n  ${media.tablet} {\n    &:hover {\n      ${StyledBadgeLineWrapper}, ${StyledFeaturedAssetsContainer} {\n        transform: ${({ elevationHover }) =>\n          elevationHover && elevationHover > 0 ? 'translateY(-1px)' : 'none'};\n      }\n    }\n  }\n\n  ${({ fullHeight }) =>\n    fullHeight &&\n    css`\n      height: 100%;\n    `}\n\n  ${({ cardHeight }) =>\n    cardHeight &&\n    css`\n      height: ${cardHeight};\n    `}\n`\n"],"file":"Card.styled.js"}
{"version":3,"sources":["../../../../src/components/Atoms/Table/TableRow.tsx"],"names":["React","media","css","styled","StyledCollapsible","maxSm","StyledTableRow","tr","collapsible","disableHover","verticalAlign","theme","isReversed","hoverColor","textColor","color","md","StyledGhostRow","div","StyledGhostSprite","StyledColoredData","showPercentage","StyledSvgMarker","TableRow","children","className","backgroundColor"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT;AACA,SAASC,GAAT,EAAcC,MAAd;AAeA,IAAMC,iBAAiB,GAAGF,GAAH,4BACnBD,KAAK,CAACI,KADa,CAAvB;AAMA,IAAMC,cAAc,GAAGH,MAAM,CAACI,EAAV;AAAA;AAAA;AAAA,kBAChB;AAAA,MAAGC,WAAH,QAAGA,WAAH;AAAA,SAAqBA,WAAW,IAAIJ,iBAApC;AAAA,CADgB,EAEhB;AAAA,MAAGK,YAAH,SAAGA,YAAH;AAAA,MAAiBC,aAAjB,SAAiBA,aAAjB;AAAA,MAAgCC,KAAhC,SAAgCA,KAAhC;AAAA,MAAuCC,UAAvC,SAAuCA,UAAvC;AAAA,+BAAmDC,UAAnD;AAAA,MAAmDA,UAAnD,iCAAgE,OAAhE;AAAA,8HAKkBH,aALlB,uEASE;AAAA,QAAGI,SAAH,SAAGA,SAAH;AAAA,WAAmBA,SAAS,qBAAcH,KAAK,CAACI,KAAN,CAAYD,SAAZ,CAAd,MAA5B;AAAA,GATF,4BAWEb,KAAK,CAACe,EAXR,oDAeIJ,UAAU,4DAfd,8BAuBI,CAACH,YAAD,0EAGgBE,KAAK,CAACI,KAAN,CAAYF,UAAZ,CAHhB,oBAKI,EA5BR;AAAA,CAFgB,CAApB;AAoCA,OAAO,IAAMI,cAAc,GAAGd,MAAM,CAACe,GAAV;AAAA;AAAA;AAAA,oEAApB;AAOP,OAAO,IAAMC,iBAAiB,GAAGhB,MAAM,CAACe,GAAV;AAAA;AAAA;AAAA,kIAU1BjB,KAAK,CAACe,EAVoB,EAWxB;AAAA,MAAGJ,UAAH,SAAGA,UAAH;AAAA,SACAA,UAAU,4DADV;AAAA,CAXwB,CAAvB;AAoBP,OAAO,IAAMQ,iBAAiB,GAAGjB,MAAM,CAACe,GAAV;AAAA;AAAA;AAAA,sDACnB;AAAA,MAAGG,cAAH,SAAGA,cAAH;AAAA,SAAyBA,cAAc,aAAMA,cAAN,WAAvC;AAAA,CADmB,EAER;AAAA,MAAGV,KAAH,SAAGA,KAAH;AAAA,MAAUI,KAAV,SAAUA,KAAV;AAAA,SAAuBA,KAAK,GAAGJ,KAAK,CAACI,KAAN,CAAYA,KAAZ,CAAH,GAAwB,sBAApD;AAAA,CAFQ,CAAvB;AAMP,OAAO,IAAMO,eAAe,GAAGnB,MAAM,CAACe,GAAV;AAAA;AAAA;AAAA,0FAArB;AASP,OAAO,IAAMK,QAAiC,GAAG,SAApCA,QAAoC,QAS3C;AAAA,MARJC,QAQI,SARJA,QAQI;AAAA,gCAPJhB,WAOI;AAAA,MAPJA,WAOI,kCAPU,KAOV;AAAA,kCANJE,aAMI;AAAA,MANJA,aAMI,oCANY,QAMZ;AAAA,iCALJD,YAKI;AAAA,MALJA,YAKI,mCALW,KAKX;AAAA,MAJJgB,SAII,SAJJA,SAII;AAAA,MAHJZ,UAGI,SAHJA,UAGI;AAAA,MAFJa,eAEI,SAFJA,eAEI;AAAA,MADJd,UACI,SADJA,UACI;AACJ,SACE,oBAAC,cAAD;AACE,IAAA,WAAW,EAAEJ,WADf;AAEE,IAAA,aAAa,EAAEE,aAFjB;AAGE,IAAA,YAAY,EAAED,YAHhB;AAIE,IAAA,UAAU,EAAEG,UAJd;AAKE,IAAA,SAAS,EAAEa,SALb;AAME,IAAA,eAAe,EAAEC,eANnB;AAOE,IAAA,UAAU,EAAEb;AAPd,KAQGW,QARH,CADF;AAYD,CAtBM","sourcesContent":["import React from 'react'\nimport { media } from '@/styles'\nimport { css, styled } from '@/styles/styled'\nimport { ThemeColors } from '@/types'\n\nexport interface TableRowProps {\n  children?: React.ReactNode\n  collapsible?: boolean\n  isReversed?: boolean\n  verticalAlign?: 'top' | 'middle' | 'bottom'\n  disableHover?: boolean\n  className?: string\n  textColor?: ThemeColors\n  hoverColor?: ThemeColors\n  backgroundColor?: ThemeColors\n}\n\nconst StyledCollapsible = css`\n  ${media.maxSm} {\n    border-right: 0;\n  }\n`\n\nconst StyledTableRow = styled.tr<TableRowProps>`\n  ${({ collapsible }) => collapsible && StyledCollapsible}\n  ${({ disableHover, verticalAlign, theme, isReversed, hoverColor = 'grey1' }) => `\n    display: flex;\n    position: relative;\n    flex-direction: row;\n    flex: 1;\n    vertical-align: ${verticalAlign};\n    text-align: center;\n    border: none;\n     \n    ${({ textColor }) => textColor && `color: ${theme.color[textColor]};`};\n      \n    ${media.md} {\n      border: none;\n      \n      ${\n        isReversed\n          ? `\n            flex-direction: row-reverse;\n      `\n          : ``\n      };\n      \n      ${\n        !disableHover\n          ? `&:hover {\n          cursor: pointer;\n          background: ${theme.color[hoverColor]};\n        }`\n          : ''\n      };\n    }\n  `}\n`\n\nexport const StyledGhostRow = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n`\n\nexport const StyledGhostSprite = styled.div<{ isReversed?: boolean }>`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n  min-height: 52px;\n  padding: 2px 0;\n\n  ${media.md} {\n    ${({ isReversed }) =>\n      isReversed\n        ? `\n            flex-direction: row-reverse;\n      `\n        : ``};\n  }\n`\n\nexport const StyledColoredData = styled.div<{ showPercentage?: number; color?: ThemeColors }>`\n  width: ${({ showPercentage }) => (showPercentage ? `${showPercentage}%` : ``)};\n  background-color: ${({ theme, color }) => (color ? theme.color[color] : 'rgba(206,11,50, 0.3)')};\n  opacity: 0.3;\n`\n\nexport const StyledSvgMarker = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  right: 0;\n  display: flex;\n  flex-direction: column-reverse;\n`\n\nexport const TableRow: React.FC<TableRowProps> = ({\n  children,\n  collapsible = false,\n  verticalAlign = 'middle',\n  disableHover = false,\n  className,\n  hoverColor,\n  backgroundColor,\n  isReversed,\n}) => {\n  return (\n    <StyledTableRow\n      collapsible={collapsible}\n      verticalAlign={verticalAlign}\n      disableHover={disableHover}\n      isReversed={isReversed}\n      className={className}\n      backgroundColor={backgroundColor}\n      hoverColor={hoverColor}>\n      {children}\n    </StyledTableRow>\n  )\n}\n"],"file":"TableRow.js"}
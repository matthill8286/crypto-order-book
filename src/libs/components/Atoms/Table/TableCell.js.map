{"version":3,"sources":["../../../../src/components/Atoms/Table/TableCell.tsx"],"names":["React","Typo","media","css","styled","isSaiyanTheme","StyledCollapsible","maxSm","mobileHeadline","theme","noPadding","spacing","base","sm","color","grey4","undefined","borderProperty","grey2","grey3","StyledCellBorder","noBorder","borderDirection","dimension","borderRadius0","StyledDataCell","td","collapsible","cellWidth","textAlign","cellColor","TableCell","children","cellType","fullBorder","colSpan","className"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Typo } from '@/components/Atoms/Typography'\nimport { media } from '@/styles'\nimport { css, styled } from '@/styles/styled'\nimport { Theme, ThemeColors } from '@/types'\nimport { isSaiyanTheme } from '@/utils/helper'\n\nexport interface TableCellProps {\n  children?: React.ReactNode\n  cellType?: 'td' | 'th'\n  borderDirection?: 'bottom' | 'right'\n  noBorder?: boolean\n  cellWidth?: number\n  mobileHeadline?: boolean\n  noPadding?: boolean\n  collapsible?: boolean\n  textAlign?: 'left' | 'right' | 'center'\n  fullBorder?: boolean\n  colSpan?: number\n  className?: string\n  cellColor?: ThemeColors\n}\n\nconst StyledCollapsible = css<TableCellProps>`\n  ${media.maxSm} {\n    ${({ mobileHeadline, theme, noPadding }) => `\n      display: block;\n      padding-bottom: ${mobileHeadline || noPadding ? 0 : theme.spacing.base.sm};\n      width: 100%;\n      color: ${mobileHeadline ? theme.color.grey4 : undefined};\n      border: none;\n    `}\n  }\n`\n\nconst borderProperty = (theme: Theme) =>\n  isSaiyanTheme() ? `1px solid ${theme.color.grey2}` : `1px solid ${theme.color.grey3}`\n\nconst StyledCellBorder = css<TableCellProps>`\n  ${({ theme, noBorder, borderDirection }) => `\n    border-radius: ${theme.dimension.borderRadius0};\n    border-right: \n      ${noBorder || borderDirection === 'bottom' ? 'none' : borderProperty(theme)};\n    border-bottom: \n      ${noBorder || borderDirection === 'right' ? 'none' : borderProperty(theme)};\n  `}\n`\n\nconst StyledDataCell = styled.td<TableCellProps>`\n  ${({ collapsible }) => collapsible && StyledCollapsible}\n  ${StyledCellBorder}\n  ${({ cellWidth, textAlign, theme, noPadding, cellColor }) => `\n    position: relative;\n    display: flex;\n    flex: 1;\n    color: ${cellColor ? theme.color[cellColor] : ''};\n    text-align: ${textAlign};\n    width: ${cellWidth ? `${cellWidth}%` : ''};\n    padding: ${noPadding ? 0 : theme.spacing.base.sm};\n  `}\n`\n\nexport const TableCell: React.FC<TableCellProps> = ({\n  children,\n  cellWidth,\n  cellType = 'td',\n  borderDirection = 'bottom',\n  noBorder = true,\n  mobileHeadline,\n  noPadding,\n  collapsible = true,\n  textAlign = 'left',\n  fullBorder = false,\n  colSpan,\n  className,\n  cellColor,\n}) => {\n  return (\n    <StyledDataCell\n      as={cellType}\n      noBorder={noBorder}\n      borderDirection={borderDirection}\n      cellWidth={cellWidth}\n      mobileHeadline={mobileHeadline}\n      noPadding={noPadding}\n      collapsible={collapsible}\n      textAlign={textAlign}\n      cellColor={cellColor}\n      fullBorder={fullBorder}\n      colSpan={colSpan}\n      className={className}>\n      {typeof children === 'string' ? (\n        <Typo weight={cellType === 'th' ? 'semibold' : 'regular'} fontSize={'sm'}>\n          {children}\n        </Typo>\n      ) : (\n        children\n      )}\n    </StyledDataCell>\n  )\n}\n"],"file":"TableCell.js"}
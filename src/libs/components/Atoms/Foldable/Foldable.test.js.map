{"version":3,"sources":["../../../../src/components/Atoms/Foldable/Foldable.test.tsx"],"names":["mount","React","renderWithThemeAndRouter","Foldable","StyledFoldable","assertHeightIsCorrect","wrapper","height","expect","find","prop","toBe","describe","beforeAll","Object","defineProperty","HTMLElement","prototype","configurable","value","it","tree","toMatchSnapshot","props","isOpen","state","node","instance","spy","jest","spyOn","toHaveBeenCalledTimes","setProps","childAt","simulate","calls","mock","call1Arg1","call2Arg1","mockClear"],"mappings":"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","sourcesContent":["import { mount } from 'enzyme'\nimport React from 'react'\nimport { renderWithThemeAndRouter } from '@/testRenderer'\nimport { Foldable, StyledFoldable } from './Foldable'\n\nconst assertHeightIsCorrect = (wrapper, height) => {\n  expect(wrapper.find(StyledFoldable).prop('style').height).toBe(height)\n}\n\ndescribe('Foldable', () => {\n  beforeAll(() => {\n    Object.defineProperty(HTMLElement.prototype, 'clientHeight', { configurable: true, value: 50 })\n  })\n\n  it('should render', () => {\n    const tree = renderWithThemeAndRouter(\n      <Foldable isOpen>\n        <div>HIDDEN</div>\n      </Foldable>\n    )\n    expect(tree).toMatchSnapshot()\n  })\n  it('should have a height of auto if initially opened', () => {\n    const props = {\n      isOpen: true,\n    }\n    const wrapper = mount(\n      <Foldable {...props}>\n        <div>HIDDEN</div>\n      </Foldable>\n    )\n    expect(wrapper.state('height')).toBe(50)\n    assertHeightIsCorrect(wrapper, 50)\n  })\n\n  it('should have a height of 0 if initially closed', () => {\n    const props = {\n      isOpen: false,\n    }\n    const wrapper = mount(\n      <Foldable {...props}>\n        <div>HIDDEN</div>\n      </Foldable>\n    )\n    expect(wrapper.state('height')).toBe(0)\n    assertHeightIsCorrect(wrapper, 0)\n  })\n\n  it('should update the height two times when opened', () => {\n    const props = {\n      isOpen: false,\n    }\n    const wrapper = mount<Foldable>(\n      <Foldable {...props}>\n        <div>HIDDEN</div>\n      </Foldable>\n    )\n    const node = wrapper.find('[data-test=\"inner-foldable\"]').instance()\n    Object.defineProperty(node, 'clientHeight', { value: 100 })\n\n    const spy = jest.spyOn(wrapper.instance(), 'setState')\n\n    expect(wrapper.state('height')).toBe(0)\n    assertHeightIsCorrect(wrapper, 0)\n    expect(spy).toHaveBeenCalledTimes(0)\n\n    wrapper.setProps({ isOpen: true })\n    wrapper.childAt(0).simulate('transitionEnd')\n\n    expect(spy).toHaveBeenCalledTimes(2)\n    const calls = spy.mock.calls\n    const call1Arg1 = calls && calls[0] && calls[0][0]\n    const call2Arg1 = calls && calls[1] && calls[1][0]\n    if (call1Arg1 && 'height' in call1Arg1) {\n      expect(call1Arg1.height).toBe(100)\n    }\n    if (call2Arg1 && 'height' in call2Arg1) {\n      expect(call2Arg1.height).toBe('auto')\n    }\n    spy.mockClear()\n  })\n\n  it('should update the height two times when closed', () => {\n    const props = {\n      isOpen: true,\n    }\n    const wrapper = mount<Foldable>(\n      <Foldable {...props}>\n        <div>HIDDEN</div>\n      </Foldable>\n    )\n    const node = wrapper.find('[data-test=\"inner-foldable\"]').instance()\n    Object.defineProperty(node, 'clientHeight', { value: 100 })\n\n    const spy = jest.spyOn(wrapper.instance(), 'setState')\n\n    expect(wrapper.state('height')).toBe(50)\n    assertHeightIsCorrect(wrapper, 50)\n    expect(spy).toHaveBeenCalledTimes(0)\n\n    wrapper.setProps({ isOpen: false })\n\n    expect(spy).toHaveBeenCalledTimes(2)\n    const calls = spy.mock.calls\n    const call1Arg1 = calls && calls[0] && calls[0][0]\n    const call2Arg1 = calls && calls[1] && calls[1][0]\n\n    if (call1Arg1 && 'height' in call1Arg1) {\n      expect(call1Arg1.height).toBe(100)\n    }\n    if (call2Arg1 && 'height' in call2Arg1) {\n      expect(call2Arg1.height).toBe(0)\n    }\n    spy.mockClear()\n  })\n})\n"],"file":"Foldable.test.js"}
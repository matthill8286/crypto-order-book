{"version":3,"sources":["../../../../src/components/Atoms/Foldable/Foldable.tsx"],"names":["React","styled","StyledFoldable","div","looksOpenFromBreakpoint","Foldable","props","isOpen","setState","height","entryRef","createRef","standardDuration","maxDuration","state","_getHeight","transition","looksOpenInitiallyFromBreakpoint","_updateHeightBeforeTransition","prevProps","_isOpen","rest","_applyTransition","_afterTransition","className","children","duration","currentElement","current","setTimeout","rect","getBoundingClientRect","top","window","scrollTo","rectUpdate","isTransitionCancelled","calculatedDuration","_getDuration","animationType","_getAnimationType","clientHeight","undefined","_updateTransition","_scrollToElement","calcDuration","Component"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { styled } from '@/styles/styled'\nimport { FoldableProps, FoldableState } from './Foldable.interface'\n\nexport const StyledFoldable = styled.div<{ looksOpenFromBreakpoint?: number }>`\n  overflow: hidden;\n\n  ${({ looksOpenFromBreakpoint }) =>\n    looksOpenFromBreakpoint &&\n    `\n    @media (min-width: ${looksOpenFromBreakpoint}px) {\n      height: auto !important;\n    }\n  `}\n`\n\nexport class Foldable extends React.Component<FoldableProps, FoldableState> {\n  private entryRef: React.RefObject<HTMLDivElement>\n  private standardDuration: number\n  private maxDuration: number\n\n  constructor(props: FoldableProps) {\n    super(props)\n    this.entryRef = React.createRef()\n    this.standardDuration = 300\n    this.maxDuration = 1000\n\n    this.state = {\n      height: this._getHeight(),\n      transition: `height ${this.standardDuration}ms linear`,\n      looksOpenFromBreakpoint: props.looksOpenInitiallyFromBreakpoint,\n    }\n  }\n\n  public componentDidMount() {\n    if (this.props.isOpen) {\n      this._updateHeightBeforeTransition()\n    }\n  }\n\n  public componentDidUpdate(prevProps: FoldableProps) {\n    if (this.props.isOpen !== prevProps.isOpen) {\n      this._updateHeightBeforeTransition()\n    }\n  }\n\n  public render() {\n    const { isOpen: _isOpen, ...rest } = this.props\n    const { looksOpenFromBreakpoint } = this.state\n    return (\n      <StyledFoldable\n        data-test={'foldable'}\n        style={this._applyTransition()}\n        onTransitionEnd={this._afterTransition}\n        className={this.props.className}\n        looksOpenFromBreakpoint={looksOpenFromBreakpoint}\n        {...rest}>\n        <div data-test=\"inner-foldable\" ref={this.entryRef}>\n          {this.props.children}\n        </div>\n      </StyledFoldable>\n    )\n  }\n\n  private _afterTransition = () => {\n    const { isOpen } = this.props\n    if (isOpen) {\n      this.setState({\n        height: 'auto',\n      })\n    }\n  }\n\n  private _scrollToElement(duration: number) {\n    const currentElement = this.entryRef.current\n\n    setTimeout(() => {\n      const rect = currentElement?.getBoundingClientRect() || { top: 0 }\n      if (rect.top < 0) {\n        // reset viewport to calculate the right position\n        window.scrollTo(0, 0)\n        const rectUpdate = currentElement?.getBoundingClientRect() || { top: 0, height: 0 }\n        window.scrollTo(0, rectUpdate.top - rectUpdate.height)\n      }\n    }, duration)\n  }\n\n  private _updateHeightBeforeTransition() {\n    const { looksOpenFromBreakpoint } = this.state\n    const isTransitionCancelled = !!looksOpenFromBreakpoint\n    const currentElement = this.entryRef.current\n    const calculatedDuration = this._getDuration()\n    const animationType = this._getAnimationType(calculatedDuration)\n\n    const height = isTransitionCancelled ? 'auto' : currentElement?.clientHeight ?? 'auto'\n    const transition = isTransitionCancelled\n      ? ''\n      : `height ${calculatedDuration}ms ${animationType}`\n\n    this.setState(\n      {\n        height,\n        transition,\n        looksOpenFromBreakpoint: undefined,\n      },\n      () => {\n        if (!this.props.isOpen) {\n          this._updateTransition()\n        } else {\n          this._scrollToElement(calculatedDuration)\n        }\n      }\n    )\n  }\n\n  private _getDuration() {\n    const { isOpen } = this.props\n    const currentElement = this.entryRef.current\n    const calcDuration = !!currentElement && currentElement.clientHeight / 2\n\n    if (calcDuration) {\n      if (!isOpen) {\n        return this.standardDuration\n      } else if (calcDuration > this.maxDuration) {\n        return this.maxDuration\n      } else if (calcDuration < this.standardDuration) {\n        return this.standardDuration\n      } else {\n        return calcDuration\n      }\n    } else {\n      return this.standardDuration\n    }\n  }\n\n  private _getAnimationType(calculatedDuration: number) {\n    const { isOpen } = this.props\n    return calculatedDuration === this.standardDuration ? 'linear' : isOpen ? 'ease-in' : 'ease-out'\n  }\n\n  private _updateTransition() {\n    const calculatedDuration = this._getDuration()\n    const animationType = this._getAnimationType(calculatedDuration)\n    this.setState({\n      height: this._getHeight(),\n      transition: `height ${calculatedDuration}ms ${animationType}`,\n    })\n  }\n\n  private _applyTransition() {\n    return {\n      height: this.state.height,\n      transition: this.state.transition,\n    }\n  }\n\n  private _getHeight() {\n    const { isOpen } = this.props\n    return isOpen ? 'auto' : 0\n  }\n}\n"],"file":"Foldable.js"}
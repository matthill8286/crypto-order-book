{"version":3,"sources":["../../../../src/components/Atoms/LoadingIndicator/LoadingIndicator.tsx"],"names":["React","rotateForward","styled","StyledLoadingWrapper","div","size","isVisible","theme","color","StyledLoadingWrapperAlternate","ul","barWidth","LoadingIndicator","otherProps"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT;AACA,SAASC,MAAT;AAkBA,IAAMC,oBAAoB,GAAGD,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,0aACf;AAAA,MAAGC,IAAH,QAAGA,IAAH;AAAA,SAAcA,IAAd;AAAA,CADe,EAEd;AAAA,MAAGA,IAAH,SAAGA,IAAH;AAAA,SAAcA,IAAd;AAAA,CAFc,EAGb;AAAA,MAAGC,SAAH,SAAGA,SAAH;AAAA,SAAoBA,SAAS,GAAG,OAAH,GAAa,MAA1C;AAAA,CAHa,EAYZ;AAAA,MAAGD,IAAH,SAAGA,IAAH;AAAA,SAAcA,IAAI,GAAG,GAArB;AAAA,CAZY,EAcTJ,aAdS,EAeN;AAAA,MAAGM,KAAH,SAAGA,KAAH;AAAA,MAAUC,KAAV,SAAUA,KAAV;AAAA,SAAsBD,KAAK,CAACC,KAAN,CAAYA,KAAZ,CAAtB;AAAA,CAfM,CAA1B;AA+BA,OAAO,IAAMC,6BAA6B,GAAGP,MAAM,CAACQ,EAAV;AAAA;AAAA;AAAA,wbAE7B;AAAA,MAAGJ,SAAH,SAAGA,SAAH;AAAA,SAAoBA,SAAS,GAAG,MAAH,GAAY,MAAzC;AAAA,CAF6B,EAM9B;AAAA,MAAGD,IAAH,SAAGA,IAAH;AAAA,SAAcA,IAAI,GAAG,GAArB;AAAA,CAN8B,EAS7B;AAAA,MAAGM,QAAH,SAAGA,QAAH;AAAA,SAAkBA,QAAQ,GAAG,IAA7B;AAAA,CAT6B,EAU5B;AAAA,MAAGN,IAAH,SAAGA,IAAH;AAAA,SAAcA,IAAI,GAAG,GAArB;AAAA,CAV4B,EAaxB;AAAA,MAAGE,KAAH,UAAGA,KAAH;AAAA,MAAUC,KAAV,UAAUA,KAAV;AAAA,SAAsBD,KAAK,CAACC,KAAN,CAAYA,KAAZ,CAAtB;AAAA,CAbwB,CAAnC;AA0CP,OAAO,IAAMI,gBAAiD,GAAG,SAApDA,gBAAoD,SAM3D;AAAA,MALJN,SAKI,UALJA,SAKI;AAAA,2BAJJD,IAII;AAAA,MAJJA,IAII,4BAJG,EAIH;AAAA,+BAHJM,QAGI;AAAA,MAHJA,QAGI,gCAHO,EAGP;AAAA,4BAFJH,KAEI;AAAA,MAFJA,KAEI,6BAFI,SAEJ;AAAA,MADDK,UACC;;AACJ,SACE,oBAAC,oBAAD;AACE,IAAA,SAAS,EAAEP,SADb;AAEE,IAAA,IAAI,EAAED,IAFR;AAGE,IAAA,QAAQ,EAAEM,QAHZ;AAIE,IAAA,KAAK,EAAEH;AAJT,KAKMK,UALN,GAME,gCANF,EAOE,gCAPF,EAQE,gCARF,EASE,gCATF,CADF;AAaD,CApBM","sourcesContent":["import React from 'react'\nimport { rotateForward } from '@/styles/animation'\nimport { styled } from '@/styles/styled'\n\nexport type LoadingIndicatorColor = 'white' | 'black' | 'primary'\n\nexport interface StyledLoadingIndicatorProps {\n  isVisible: boolean\n  size: number\n  barWidth: number\n  color: LoadingIndicatorColor\n}\n\nexport interface LoadingIndicatorProps {\n  isVisible: boolean\n  size?: number\n  barWidth?: number\n  color?: LoadingIndicatorColor\n}\n\nconst StyledLoadingWrapper = styled.div<StyledLoadingIndicatorProps>`\n  width: ${({ size }) => size}px;\n  height: ${({ size }) => size}px;\n  display: ${({ isVisible }) => (isVisible ? 'block' : 'none')};\n  position: absolute;\n\n  & div {\n    box-sizing: border-box;\n    display: block;\n    position: absolute;\n    width: 100%;\n    height: 100%;\n    border: ${({ size }) => size * 0.1}px solid;\n    border-radius: 50%;\n    animation: ${rotateForward} 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n    border-color: ${({ theme, color }) => theme.color[color]} transparent transparent transparent;\n  }\n\n  & div:nth-child(1) {\n    animation-delay: -0.45s;\n  }\n\n  & div:nth-child(2) {\n    animation-delay: -0.3s;\n  }\n\n  & div:nth-child(3) {\n    animation-delay: -0.15s;\n  }\n`\n\nexport const StyledLoadingWrapperAlternate = styled.ul<StyledLoadingIndicatorProps>`\n  position: absolute;\n  display: ${({ isVisible }) => (isVisible ? 'flex' : 'none')};\n  margin: 0 auto;\n  padding: 0;\n  justify-content: center;\n  height: ${({ size }) => size * 0.3}px;\n  li {\n    list-style: none;\n    width: ${({ barWidth }) => barWidth * 0.05}px;\n    height: ${({ size }) => size * 0.3}px;\n    margin: 0 3px;\n    animation: animate 0.4s infinite alternate;\n    background: ${({ theme, color }) => theme.color[color]};\n\n    &:nth-child(2) {\n      animation-delay: 0.1s;\n    }\n    &:nth-child(3) {\n      animation-delay: 0.2s;\n    }\n  }\n\n  @keyframes animate {\n    0% {\n      transform: scaleY(1);\n    }\n    25% {\n      transform: scaleY(1);\n    }\n    50% {\n      transform: scaleY(1);\n    }\n    75% {\n      transform: scaleY(1);\n    }\n    100% {\n      transform: scaleY(1.7);\n    }\n  }\n`\n\nexport const LoadingIndicator: React.FC<LoadingIndicatorProps> = ({\n  isVisible,\n  size = 50,\n  barWidth = 15,\n  color = 'primary',\n  ...otherProps\n}) => {\n  return (\n    <StyledLoadingWrapper\n      isVisible={isVisible}\n      size={size}\n      barWidth={barWidth}\n      color={color}\n      {...otherProps}>\n      <div />\n      <div />\n      <div />\n      <div />\n    </StyledLoadingWrapper>\n  )\n}\n"],"file":"LoadingIndicator.js"}
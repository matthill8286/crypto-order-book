{"version":3,"sources":["../../../../src/components/Atoms/Button/IconButton.tsx"],"names":["React","styled","Button","StyledIconButton","width","theme","spacing","base","height","xs","IconButton","actionType","color","isLoading","isFlat","onClick","rest","displayName"],"mappings":";;;;;;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,MAAT;AACA,SAASC,MAAT;AAgBA,OAAO,IAAMC,gBAAgB,GAAGF,MAAM,CAACC,MAAD,CAAT;AAAA;AAAA;AAAA,mDACd;AAAA,MAAGE,KAAH,QAAGA,KAAH;AAAA,MAAUC,KAAV,QAAUA,KAAV;AAAA,SACX,OAAOD,KAAP,KAAiB,QAAjB,aAA+BA,KAA/B,UAA2CC,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBH,KAAnB,KAA6BA,KAD7D;AAAA,CADc,EAGjB;AAAA,MAAGI,MAAH,SAAGA,MAAH;AAAA,MAAWH,KAAX,SAAWA,KAAX;AAAA,SACR,OAAOG,MAAP,KAAkB,QAAlB,aAAgCA,MAAhC,UAA6CH,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBC,MAAnB,KAA8BA,MADnE;AAAA,CAHiB,EAKd;AAAA,MAAGH,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBE,EAAlC;AAAA,CALc,CAAtB;AAQP,OAAO,IAAMC,UAAqC,GAAG,SAAxCA,UAAwC,QAS/C;AAAA,+BARJC,UAQI;AAAA,MARJA,UAQI,iCARS,UAQT;AAAA,2BAPJH,MAOI;AAAA,MAPJA,MAOI,6BAPK,EAOL;AAAA,MANJJ,KAMI,SANJA,KAMI;AAAA,MALJQ,KAKI,SALJA,KAKI;AAAA,MAJJC,SAII,SAJJA,SAII;AAAA,MAHJC,MAGI,SAHJA,MAGI;AAAA,MAFJC,OAEI,SAFJA,OAEI;AAAA,MADDC,IACC;;AACJ,SACE,oBAAC,gBAAD;AACE,IAAA,KAAK,EAAEJ,KADT;AAEE,IAAA,UAAU,EAAED,UAFd;AAGE,IAAA,KAAK,EAAEP,KAAK,IAAII,MAHlB;AAIE,IAAA,MAAM,EAAEA,MAJV;AAKE,IAAA,MAAM,EAAEM,MALV;AAME,IAAA,SAAS,EAAED,SANb;AAOE,IAAA,OAAO,EAAEE;AAPX,KAQMC,IARN,EADF;AAYD,CAtBM;AAwBPN,UAAU,CAACO,WAAX,GAAyB,YAAzB","sourcesContent":["import * as React from 'react'\nimport { styled } from '@/styles/styled'\nimport { Button } from './Button'\nimport { ButtonProps } from './Button.interface'\n\nexport interface IconButtonProps extends ButtonProps {\n  width?: number | string\n  height?: number | string\n  isInputIcon?: boolean\n  isFlat?: boolean\n}\n\nexport interface StyledIconButtonProps extends IconButtonProps {\n  width: number | string\n  height: number | string\n  isFlat?: boolean\n}\n\nexport const StyledIconButton = styled(Button)<StyledIconButtonProps>`\n  min-width: ${({ width, theme }) =>\n    typeof width === 'number' ? `${width}px` : theme.spacing.base[width] || width};\n  height: ${({ height, theme }) =>\n    typeof height === 'number' ? `${height}px` : theme.spacing.base[height] || height};\n  padding: 0 ${({ theme }) => theme.spacing.base.xs};\n`\n\nexport const IconButton: React.FC<IconButtonProps> = ({\n  actionType = 'outlined',\n  height = 40,\n  width,\n  color,\n  isLoading,\n  isFlat,\n  onClick,\n  ...rest\n}) => {\n  return (\n    <StyledIconButton\n      color={color}\n      actionType={actionType}\n      width={width || height}\n      height={height}\n      isFlat={isFlat}\n      isLoading={isLoading}\n      onClick={onClick}\n      {...rest}\n    />\n  )\n}\n\nIconButton.displayName = 'IconButton'\n"],"file":"IconButton.js"}
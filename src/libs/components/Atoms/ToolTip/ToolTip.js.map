{"version":3,"sources":["../../../../src/components/Atoms/ToolTip/ToolTip.tsx"],"names":["React","useState","InfoText","StyledToolTip","StyledToolTipContent","StyledToolTipWrapper","ToolTip","props","children","content","primary","limitLines","otherProps","tooltipVisible","setState"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,QAAT;AAEA,SAASC,aAAT,EAAwBC,oBAAxB,EAA8CC,oBAA9C;AAEA,OAAO,IAAMC,OAA+B,GAAG,SAAlCA,OAAkC,CAAAC,KAAK,EAAI;AAAA,MAC9CC,QAD8C,GACwBD,KADxB,CAC9CC,QAD8C;AAAA,MACpCC,OADoC,GACwBF,KADxB,CACpCE,OADoC;AAAA,uBACwBF,KADxB,CAC3BG,OAD2B;AAAA,MAC3BA,OAD2B,+BACjB,KADiB;AAAA,0BACwBH,KADxB,CACVI,UADU;AAAA,MACVA,UADU,kCACG,CADH;AAAA,MACSC,UADT,4BACwBL,KADxB;;AAAA,kBAEnBN,QAAQ,CAAC,KAAD,CAFW;AAAA;AAAA,MAE/CY,cAF+C;AAAA,MAE/BC,QAF+B;;AAItD,SACE,oBAAC,oBAAD;AACE,IAAA,YAAY,EAAE;AAAA,aAAMA,QAAQ,CAAC,IAAD,CAAd;AAAA,KADhB;AAEE,IAAA,YAAY,EAAE;AAAA,aAAMA,QAAQ,CAAC,KAAD,CAAd;AAAA,KAFhB;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMA,QAAQ,CAAC,CAACD,cAAF,CAAd;AAAA;AAHX,KAIMD,UAJN,GAKGJ,QALH,EAMGK,cAAc,IAAIJ,OAAlB,IACC,oBAAC,aAAD;AAAe,IAAA,OAAO,EAAEC;AAAxB,KACE,oBAAC,oBAAD;AAAsB,IAAA,OAAO,EAAEA;AAA/B,KACE,oBAAC,QAAD;AACE,IAAA,KAAK,EAAEA,OAAO,GAAG,OAAH,GAAa,OAD7B;AAEE,IAAA,UAAU,EAAEC,UAFd;AAGE,IAAA,SAAS,EAAE;AAHb,KAIGF,OAJH,CADF,CADF,CAPJ,CADF;AAqBD,CAzBM","sourcesContent":["import React, { useState } from 'react'\nimport { InfoText } from '../Typography'\nimport { ToolTipProps } from './ToolTip.interface'\nimport { StyledToolTip, StyledToolTipContent, StyledToolTipWrapper } from './ToolTip.styled'\n\nexport const ToolTip: React.FC<ToolTipProps> = props => {\n  const { children, content, primary = false, limitLines = 5, ...otherProps } = props\n  const [tooltipVisible, setState] = useState(false)\n\n  return (\n    <StyledToolTipWrapper\n      onMouseEnter={() => setState(true)}\n      onMouseLeave={() => setState(false)}\n      onClick={() => setState(!tooltipVisible)}\n      {...otherProps}>\n      {children}\n      {tooltipVisible && content && (\n        <StyledToolTip primary={primary}>\n          <StyledToolTipContent primary={primary}>\n            <InfoText\n              color={primary ? 'white' : 'grey4'}\n              limitLines={limitLines}\n              textAlign={'center'}>\n              {content}\n            </InfoText>\n          </StyledToolTipContent>\n        </StyledToolTip>\n      )}\n    </StyledToolTipWrapper>\n  )\n}\n"],"file":"ToolTip.js"}
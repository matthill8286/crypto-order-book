{"version":3,"sources":["../../../../src/components/Atoms/Badge/Badge.test.tsx"],"names":["React","Badge","renderWithTheme","mockedBadges","id","name","describe","it","tree","expect","toMatchSnapshot"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT;AACA,SAASC,eAAT;AAEA,IAAMC,YAAY,GAAG,CACnB;AACEC,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CADmB,EAKnB;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CALmB,EASnB;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CATmB,EAanB;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CAbmB,EAiBnB;AACED,EAAAA,EAAE,EAAE,CADN;AAEEC,EAAAA,IAAI,EAAE;AAFR,CAjBmB,CAArB;AAuBAC,QAAQ,CAAC,OAAD,EAAU,YAAM;AACtBC,EAAAA,EAAE,CAAC,eAAD,EAAkB,YAAM;AACxB,QAAMC,IAAI,GAAGN,eAAe,CAAC,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAEC;AAAf,MAAD,CAA5B;AACAM,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHC,CAAF;AAKAH,EAAAA,EAAE,CAAC,kCAAD,EAAqC,YAAM;AAC3C,QAAMC,IAAI,GAAGN,eAAe,CAAC,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAEC,YAAf;AAA6B,MAAA,UAAU,EAAC;AAAxC,MAAD,CAA5B;AACAM,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHC,CAAF;AAKAH,EAAAA,EAAE,CAAC,oCAAD,EAAuC,YAAM;AAC7C,QAAMC,IAAI,GAAGN,eAAe,CAAC,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAEC,YAAf;AAA6B,MAAA,UAAU,EAAC;AAAxC,MAAD,CAA5B;AACAM,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHC,CAAF;AAKAH,EAAAA,EAAE,CAAC,4BAAD,EAA+B,YAAM;AACrC,QAAMC,IAAI,GAAGN,eAAe,CAAC,oBAAC,KAAD;AAAO,MAAA,WAAW,MAAlB;AAAmB,MAAA,MAAM,EAAEC;AAA3B,MAAD,CAA5B;AACAM,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHC,CAAF;AAKAH,EAAAA,EAAE,CAAC,sCAAD,EAAyC,YAAM;AAC/C,QAAMC,IAAI,GAAGN,eAAe,CAAC,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAEC,YAAf;AAA6B,MAAA,WAAW,MAAxC;AAAyC,MAAA,UAAU,EAAC;AAApD,MAAD,CAA5B;AACAM,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHC,CAAF;AAKAH,EAAAA,EAAE,CAAC,qCAAD,EAAwC,YAAM;AAC9C,QAAMC,IAAI,GAAGN,eAAe,CAAC,oBAAC,KAAD;AAAO,MAAA,MAAM,EAAEC,YAAf;AAA6B,MAAA,WAAW,MAAxC;AAAyC,MAAA,UAAU,EAAC;AAApD,MAAD,CAA5B;AACAM,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHC,CAAF;AAID,CA9BO,CAAR","sourcesContent":["import React from 'react'\nimport { Badge } from '@/components/Atoms/Badge/Badge'\nimport { renderWithTheme } from '@/testRenderer'\n\nconst mockedBadges = [\n  {\n    id: 0,\n    name: 'Badge No.1',\n  },\n  {\n    id: 1,\n    name: 'Some other label',\n  },\n  {\n    id: 2,\n    name: 'Free shipping',\n  },\n  {\n    id: 3,\n    name: 'Hot Hot Hot',\n  },\n  {\n    id: 4,\n    name: 'Last one',\n  },\n]\n\ndescribe('Badge', () => {\n  it('should render', () => {\n    const tree = renderWithTheme(<Badge badges={mockedBadges} />)\n    expect(tree).toMatchSnapshot()\n  })\n\n  it('should render with primary color', () => {\n    const tree = renderWithTheme(<Badge badges={mockedBadges} actionType=\"prominent\" />)\n    expect(tree).toMatchSnapshot()\n  })\n\n  it('should render with secondary color', () => {\n    const tree = renderWithTheme(<Badge badges={mockedBadges} actionType=\"secondary\" />)\n    expect(tree).toMatchSnapshot()\n  })\n\n  it('should render a badge line', () => {\n    const tree = renderWithTheme(<Badge isBadgeLine badges={mockedBadges} />)\n    expect(tree).toMatchSnapshot()\n  })\n\n  it('should render a badge line secondary', () => {\n    const tree = renderWithTheme(<Badge badges={mockedBadges} isBadgeLine actionType=\"secondary\" />)\n    expect(tree).toMatchSnapshot()\n  })\n\n  it('should render a badge line disabled', () => {\n    const tree = renderWithTheme(<Badge badges={mockedBadges} isBadgeLine actionType=\"disabled\" />)\n    expect(tree).toMatchSnapshot()\n  })\n})\n"],"file":"Badge.test.js"}
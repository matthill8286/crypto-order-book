{"version":3,"sources":["../../../../src/components/Atoms/Badge/Badge.styled.tsx"],"names":["math","css","styled","Typo","skewFactor","tailWidth","resolveColor","actionType","theme","color","black","primary","skewLeft","font","size","xl","dimension","borderRadius1","white","skewRight","StyledTypo","grey6","spacing","base","md","StyledBadgeLineWrapper","div","isBadgeLine","StyledBadgeWrapper","xs","StyledOverflow"],"mappings":"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","sourcesContent":["import { math } from 'polished'\nimport { css, styled, ThemedStyledProps } from '@/styles/styled'\nimport { Theme } from '@/types/theme'\nimport { Typo } from '../Typography'\nimport { StyledBadgeProps } from './Badge.interface'\n\ntype ThemedBadgeProps = ThemedStyledProps<StyledBadgeProps, Theme>\n\nconst skewFactor = 10\nconst tailWidth = 10\n\nconst resolveColor = ({ actionType, theme }: ThemedBadgeProps) =>\n  actionType === 'disabled' ? theme.color.black : theme.color.primary\n\nexport const skewLeft = ({ actionType, theme }: ThemedBadgeProps) => css`\n  &:before {\n    content: '';\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: ${tailWidth + 2}px;\n    height: ${math(theme.font.size.xl + '+ 2px')}; /* theme font xl plus the border */\n    bottom: 0;\n    border-radius: ${theme.dimension.borderRadius1};\n    border-top-right-radius: 0;\n    border-bottom-right-radius: 0;\n    transform: skewX(-${skewFactor}deg);\n    transform-origin: bottom left;\n\n    ${actionType === 'prominent'\n      ? css`\n          background-color: ${theme.color.primary};\n          border: 1px solid ${theme.color.primary};\n        `\n      : css`\n          background-color: ${theme.color.white};\n          border-left: 1px solid ${resolveColor};\n          border-top: 1px solid ${resolveColor};\n          border-bottom: 1px solid ${resolveColor};\n        `}\n  }\n`\nexport const skewRight = ({ actionType, theme }: ThemedBadgeProps) => css`\n  &:after {\n    content: '';\n    position: absolute;\n    top: 0;\n    right: 2px;\n    width: ${tailWidth + 2}px;\n    height: ${math(theme.font.size.xl + '+ 2px')}; /* theme font xl plus the border */\n    bottom: 0;\n    border-radius: ${theme.dimension.borderRadius1};\n    border-top-left-radius: 0;\n    border-bottom-left-radius: 0;\n    transform: skewX(-${skewFactor}deg);\n    border: 1px solid ${resolveColor};\n\n    ${actionType === 'prominent'\n      ? css`\n          background-color: ${theme.color.primary};\n        `\n      : css`\n          background-color: ${theme.color.white};\n          border-left: none;\n        `}\n  }\n`\n\nexport const StyledTypo = styled(Typo)<StyledBadgeProps>(\n  ({ actionType, theme }) => css`\n    ${actionType === 'prominent'\n      ? css`\n          background-color: ${theme.color.primary};\n          color: ${theme.color.white};\n        `\n      : css`\n          background-color: ${theme.color.white};\n          color: ${resolveColor};\n        `}\n    ${actionType === 'inverted' &&\n      css`\n        background-color: ${theme.color.grey6};\n        color: ${theme.color.white};\n      `}\n    text-align: center;\n    display: flex;\n    align-items: center;\n    padding-left: ${theme.spacing.base.md};\n    padding-right: ${theme.spacing.base.md};\n    margin-left: 0;\n    margin-right: ${tailWidth - 1}px;\n    box-sizing: content-box;\n    height: ${math(theme.font.size.xl + ' + 2px')}; /* theme font xl plus the border */\n    overflow: auto;\n  `\n)\n\nexport const StyledBadgeLineWrapper = styled.div<StyledBadgeProps>`\n  ${({ isBadgeLine, theme }) =>\n    isBadgeLine\n      ? css`\n          display: flex;\n          flex-direction: row;\n          flex-wrap: wrap;\n          overflow: hidden;\n          height: ${math(theme.font.size.xl + ' + 4px')};\n        `\n      : `display: block`};\n`\n\nexport const StyledBadgeWrapper = styled.div<StyledBadgeProps>(\n  ({ theme }) => css`\n    display: inline-block;\n    position: relative;\n    margin-right: ${theme.spacing.base.xs};\n    max-width: 100%;\n  `\n)\n\nexport const StyledOverflow = styled.div`\n  display: inline-block;\n  text-overflow: ellipsis;\n  overflow: hidden;\n`\n"],"file":"Badge.styled.js"}
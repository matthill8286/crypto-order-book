{"version":3,"sources":["../../../../src/components/Atoms/Tag/Tag.styled.tsx"],"names":["css","styled","handlePadding","StyledTagWrapper","div","theme","hasLink","marginRight","color","padding","grey5","spacing","base","grey2","dimension","borderRadius6","sm","xs","hoverStyle","grey1","StyledAnchorTag","a"],"mappings":"AAAA,SAASA,GAAT,EAAcC,MAAd;AAGA,SAASC,aAAT;AAEA,OAAO,IAAMC,gBAAgB,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,GAC3B;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,OAAV,QAAUA,OAAV;AAAA,MAAmBC,WAAnB,QAAmBA,WAAnB;AAAA,MAAgCC,KAAhC,QAAgCA,KAAhC;AAAA,MAAuCC,OAAvC,QAAuCA,OAAvC;AAAA,SAAqDT,GAArD,4JACWK,KAAK,CAACG,KAAN,CAAYE,KADvB,EAEI,CAAC,CAACD,OAAF,IAAaP,aAAa,CAACG,KAAK,CAACM,OAAN,CAAcC,IAAf,EAAqBH,OAArB,CAF9B,EAGkB,CAACD,KAAD,GAASH,KAAK,CAACG,KAAN,CAAYK,KAArB,GAA6BR,KAAK,CAACG,KAAN,CAAYA,KAAZ,CAH/C,EAKmBH,KAAK,CAACS,SAAN,CAAgBC,aALnC,EAQkBR,WAAW,IAAIF,KAAK,CAACM,OAAN,CAAcC,IAAd,CAAmBI,EARpD,EASmBT,WAAW,IAAIF,KAAK,CAACM,OAAN,CAAcC,IAAd,CAAmBK,EATrD,EAUIX,OAAO,IAAIY,UAAU,CAACb,KAAD,CAVzB;AAAA,CAD2B,CAAtB;;AAcP,IAAMa,UAAU,GAAG,SAAbA,UAAa,CAACb,KAAD;AAAA,SAAkBL,GAAlB,qDAEKK,KAAK,CAACG,KAAN,CAAYW,KAFjB;AAAA,CAAnB;;AAOA,OAAO,IAAMC,eAAe,GAAGnB,MAAM,CAACoB,CAAV;AAAA;AAAA;AAAA,yCAEjB;AAAA,MAAGhB,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACG,KAAN,CAAYE,KAA3B;AAAA,CAFiB,CAArB","sourcesContent":["import { css, styled } from '@/styles/styled'\nimport { Padding, Theme } from '@/types'\nimport { StyledTagWrapperProps } from './Tag.interface'\nimport { handlePadding } from '@/components/Atoms/Card/Card.styled'\n\nexport const StyledTagWrapper = styled.div<StyledTagWrapperProps>(\n  ({ theme, hasLink, marginRight, color, padding }) => css`\n    color: ${theme.color.grey5};\n    ${!!padding && handlePadding(theme.spacing.base, padding as Padding)};\n    border-color: ${!color ? theme.color.grey2 : theme.color[color]};\n    border-width: 1px;\n    border-radius: ${theme.dimension.borderRadius6};\n    border-style: solid;\n    width: fit-content;\n    margin-right: ${marginRight && theme.spacing.base.sm};\n    margin-bottom: ${marginRight && theme.spacing.base.xs};\n    ${hasLink && hoverStyle(theme)};\n  `\n)\nconst hoverStyle = (theme: Theme) => css`\n  &:hover {\n    background-color: ${theme.color.grey1};\n    cursor: pointer;\n  }\n`\n\nexport const StyledAnchorTag = styled.a`\n  text-decoration: none;\n  color: ${({ theme }) => theme.color.grey5};\n`\n"],"file":"Tag.styled.js"}
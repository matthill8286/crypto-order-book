{"version":3,"sources":["../../../../src/components/Atoms/Tag/Tag.tsx"],"names":["React","Typo","StyledAnchorTag","StyledTagWrapper","TagText","color","children","weight","Tag","text","href","targetBlank","marginBottom","marginRight","padding","className","undefined"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT;AAEA,SAASC,eAAT,EAA0BC,gBAA1B;;AAEA,IAAMC,OAA+B,GAAG,SAAlCA,OAAkC,OAA8C;AAAA,MAA3CC,KAA2C,QAA3CA,KAA2C;AAAA,MAApCC,QAAoC,QAApCA,QAAoC;AAAA,MAA1BC,MAA0B,QAA1BA,MAA0B;AACpF,SACE,oBAAC,IAAD;AAAM,IAAA,MAAM,EAAEA,MAAd;AAAsB,IAAA,KAAK,EAAE,CAACF,KAAD,GAAS,OAAT,GAAmBA,KAAhD;AAAuD,IAAA,QAAQ,EAAE,IAAjE;AAAuE,IAAA,UAAU,EAAC;AAAlF,KACGC,QADH,CADF;AAKD,CAND;;AAQA,OAAO,IAAME,GAAuB,GAAG,SAA1BA,GAA0B,QAUpB;AAAA,MATjBC,IASiB,SATjBA,IASiB;AAAA,MARjBC,IAQiB,SARjBA,IAQiB;AAAA,MAPjBC,WAOiB,SAPjBA,WAOiB;AAAA,MANjBC,YAMiB,SANjBA,YAMiB;AAAA,MALjBC,WAKiB,SALjBA,WAKiB;AAAA,MAJjBR,KAIiB,SAJjBA,KAIiB;AAAA,MAHjBE,MAGiB,SAHjBA,MAGiB;AAAA,MAFjBO,OAEiB,SAFjBA,OAEiB;AAAA,MADjBC,SACiB,SADjBA,SACiB;AACjB,SACE,oBAAC,gBAAD;AACE,IAAA,SAAS,EAAEA,SADb;AAEE,IAAA,YAAY,EAAEH,YAFhB;AAGE,IAAA,WAAW,EAAEC,WAHf;AAIE,IAAA,OAAO,EAAE,CAAC,CAACH,IAJb;AAKE,IAAA,OAAO,EAAEI,OALX;AAME,IAAA,KAAK,EAAET;AANT,KAOGK,IAAI,GACH,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEA,IAAvB;AAA6B,IAAA,MAAM,EAAEC,WAAW,GAAG,QAAH,GAAcK;AAA9D,KACE,oBAAC,OAAD;AAAS,IAAA,MAAM,EAAET,MAAjB;AAAyB,IAAA,KAAK,EAAEF;AAAhC,KACGI,IADH,CADF,CADG,GAOH,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAEJ;AAAhB,KAAwBI,IAAxB,CAdJ,CADF;AAmBD,CA9BM","sourcesContent":["import * as React from 'react'\nimport { Typo } from '../Typography'\nimport { TagProps, TagTextProps } from './Tag.interface'\nimport { StyledAnchorTag, StyledTagWrapper } from './Tag.styled'\n\nconst TagText: React.FC<TagTextProps> = ({ color, children, weight }): JSX.Element => {\n  return (\n    <Typo weight={weight} color={!color ? 'grey3' : color} fontSize={'xs'} lineHeight=\"xxs\">\n      {children}\n    </Typo>\n  )\n}\n\nexport const Tag: React.FC<TagProps> = ({\n  text,\n  href,\n  targetBlank,\n  marginBottom,\n  marginRight,\n  color,\n  weight,\n  padding,\n  className,\n}): JSX.Element => {\n  return (\n    <StyledTagWrapper\n      className={className}\n      marginBottom={marginBottom}\n      marginRight={marginRight}\n      hasLink={!!href}\n      padding={padding}\n      color={color}>\n      {href ? (\n        <StyledAnchorTag href={href} target={targetBlank ? '_blank' : undefined}>\n          <TagText weight={weight} color={color}>\n            {text}\n          </TagText>\n        </StyledAnchorTag>\n      ) : (\n        <TagText color={color}>{text}</TagText>\n      )}\n    </StyledTagWrapper>\n  )\n}\n"],"file":"Tag.js"}
{"version":3,"sources":["../../../../src/components/Molecules/Steps/Steps.story.tsx"],"names":["withState","button","radios","select","text","storiesOf","React","Icon","styled","IconCheckmarkCircleOutlined","Step","StepConnectorRoot","Steps","readme","withVariableArrayReadme","withConnectorReadme","withIconReadme","stories","module","variants","prominent","uniform","simple","colors","add","steps","title","stepsIndex","map","el","index","knobs","color","activeStep","completedStep","variant","description","info","store","stepsProps","state","handleChange","step","set","CustomIcon","active","completed","props","CustomConnectorLine","span","theme","elementPosition","grey2","borderWidth","dimension","borderRadius1","CustomConnector","increment","decrement","length","slice","reset"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,0BAA1B;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,MAAzB,EAAiCC,IAAjC,QAA6C,wBAA7C;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAA0B,OAA1B;AACA,SAASC,IAAT;AACA,SAASC,MAAT;AACA,SAAsBC,2BAAtB,QAAyD,mCAAzD;AAEA,SAASC,IAAT;AACA,SAASC,iBAAT;AACA,SAASC,KAAT;AAQA,OAAOC,MAAP;AACA,OAAOC,uBAAP;AACA,OAAOC,mBAAP;AACA,OAAOC,cAAP;AAEA,IAAMC,OAAO,GAAGZ,SAAS,CAAC,+BAAD,EAAkCa,MAAlC,CAAzB;AAEA,IAAMC,QAAyC,GAAG;AAChDC,EAAAA,SAAS,EAAE,WADqC;AAEhDC,EAAAA,OAAO,EAAE,SAFuC;AAGhDC,EAAAA,MAAM,EAAE;AAHwC,CAAlD;AAMA,IAAMC,MAAqB,GAAG,CAAC,SAAD,EAAY,WAAZ,EAAyB,OAAzB,CAA9B;AAEAN,OAAO,CAACO,GAAR,CACE,SADF,EAEE,YAAM;AACJ,MAAMC,KAAK,GAAG,CAAC;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAD,EAAmB;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAAnB,EAAqC;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAArC,EAAyD;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAAzD,CAAd;AACA,MAAMC,UAAoB,GAAGF,KAAK,CAACG,GAAN,CAAU,UAACC,EAAD,EAAKC,KAAL;AAAA,WAAeA,KAAf;AAAA,GAAV,CAA7B;AAEA,MAAMC,KAAiB,GAAG;AACxBC,IAAAA,KAAK,EAAE7B,MAAM,CAAC,OAAD,EAAUoB,MAAV,EAAkB,SAAlB,CADW;AAExBU,IAAAA,UAAU,EAAE9B,MAAM,CAAC,YAAD,EAAewB,UAAf,EAA2B,CAA3B,CAFM;AAGxBO,IAAAA,aAAa,EAAE/B,MAAM,CAAC,eAAD,GAAmB,CAAC,CAApB,4BAA0BwB,UAA1B,IAAuC,CAAvC,CAHG;AAIxBQ,IAAAA,OAAO,EAAEjC,MAAM,CAAC,SAAD,EAAYiB,QAAZ,EAAsB,SAAtB;AAJS,GAA1B;AAOA,MAAMiB,WAAW,GAAGhC,IAAI,CAAC,aAAD,EAAgB,uBAAhB,CAAxB;AAEA,SACE,oBAAC,KAAD,EAAW2B,KAAX,EACGN,KAAK,CAACG,GAAN,CAAU,gBAAYE,KAAZ;AAAA,QAAGJ,KAAH,QAAGA,KAAH;AAAA,WACT,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEI,KAAX;AAAkB,MAAA,KAAK,EAAEJ,KAAzB;AAAgC,MAAA,WAAW,EAAEU;AAA7C,MADS;AAAA,GAAV,CADH,CADF;AAOD,CAtBH,EAuBE;AACEC,EAAAA,IAAI,EAAExB;AADR,CAvBF;AA4BAI,OAAO,CAACO,GAAR,CACE,qBADF,EAEExB,SAAS,CAAC;AAAEiC,EAAAA,UAAU,EAAE,CAAd;AAAiBC,EAAAA,aAAa,EAAE;AAAhC,CAAD,EAAsC,UAAAI,KAAK,EAAI;AACtD,MAAMC,UAAsB,GAAG;AAC7BP,IAAAA,KAAK,EAAE,SADsB;AAE7BC,IAAAA,UAAU,EAAEK,KAAK,CAACE,KAAN,CAAYP,UAFK;AAG7BC,IAAAA,aAAa,EAAEI,KAAK,CAACE,KAAN,CAAYN;AAHE,GAA/B;;AAMA,MAAMO,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAkB;AACrCJ,IAAAA,KAAK,CAACK,GAAN,CAAU;AAAEV,MAAAA,UAAU,EAAES,IAAd;AAAoBR,MAAAA,aAAa,EAAEQ,IAAI,GAAG;AAA1C,KAAV;AACD,GAFD;;AAIA,SACE,oBAAC,KAAD,eAAWH,UAAX;AAAuB,IAAA,QAAQ,EAAEE;AAAjC,MACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,SAAZ;AAAsB,IAAA,WAAW,EAAC;AAAlC,IADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,SAAZ;AAAsB,IAAA,WAAW,EAAC;AAAlC,IAFF,EAGE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,SAAZ;AAAsB,IAAA,WAAW,EAAC;AAAlC,IAHF,EAIE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAC,SAAZ;AAAsB,IAAA,WAAW,EAAC;AAAlC,IAJF,CADF;AAQD,CAnBQ,CAFX,EAsBE;AACEJ,EAAAA,IAAI,EAAExB;AADR,CAtBF;AA2BAI,OAAO,CAACO,GAAR,CACE,WADF,EAEE,YAAM;AACJ,MAAMC,KAAK,GAAG,CACZ;AAAEC,IAAAA,KAAK,EAAE;AAAT,GADY,EAEZ;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAFY,EAGZ;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAHY,EAIZ;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAJY,CAAd;AAMA,MAAMC,UAAoB,GAAGF,KAAK,CAACG,GAAN,CAAU,UAACC,EAAD,EAAKC,KAAL;AAAA,WAAeA,KAAf;AAAA,GAAV,CAA7B;AAEA,MAAMC,KAAiB,GAAG;AACxBC,IAAAA,KAAK,EAAE7B,MAAM,CAAC,OAAD,EAAUoB,MAAV,EAAkB,SAAlB,CADW;AAExBU,IAAAA,UAAU,EAAE9B,MAAM,CAAC,YAAD,EAAewB,UAAf,EAA2B,CAA3B,CAFM;AAGxBO,IAAAA,aAAa,EAAE/B,MAAM,CAAC,eAAD,GAAmB,CAAC,CAApB,4BAA0BwB,UAA1B,IAAuC,CAAvC;AAHG,GAA1B;AAMA,MAAMS,WAAW,GAAGhC,IAAI,CAAC,aAAD,EAAgB,uBAAhB,CAAxB;;AAEA,MAAMwC,UAA+B,GAAG,SAAlCA,UAAkC;AAAA,6BACtCC,MADsC;AAAA,QACtCA,MADsC,6BAC7B,KAD6B;AAAA,gCAEtCC,SAFsC;AAAA,QAEtCA,SAFsC,gCAE1B,KAF0B;AAAA,4BAGtCd,KAHsC;AAAA,QAGtCA,KAHsC,4BAG9B,SAH8B;AAAA,QAInCe,KAJmC;;AAAA,WAMtC,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,MAAM,GAAG,OAAH,GAAaC,SAAS,GAAGd,KAAH,GAAW;AAApD,OAAiEe,KAAjE,GACE,oBAAC,2BAAD,OADF,CANsC;AAAA,GAAxC;;AAWA,SACE,oBAAC,KAAD,EAAWhB,KAAX,EACGN,KAAK,CAACG,GAAN,CAAU,iBAAYE,KAAZ;AAAA,QAAGJ,KAAH,SAAGA,KAAH;AAAA,WACT,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEI,KAAX;AAAkB,MAAA,KAAK,EAAEJ,KAAzB;AAAgC,MAAA,WAAW,EAAEU,WAA7C;AAA0D,MAAA,IAAI,EAAE,oBAAC,UAAD;AAAhE,MADS;AAAA,GAAV,CADH,CADF;AAOD,CArCH,EAsCE;AACEC,EAAAA,IAAI,EAAErB;AADR,CAtCF;AA2CAC,OAAO,CAACO,GAAR,CACE,gBADF,EAEE,YAAM;AACJ,MAAMC,KAAK,GAAG,CACZ;AAAEC,IAAAA,KAAK,EAAE;AAAT,GADY,EAEZ;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAFY,EAGZ;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAHY,EAIZ;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAJY,CAAd;AAMA,MAAMC,UAAoB,GAAGF,KAAK,CAACG,GAAN,CAAU,UAACC,EAAD,EAAKC,KAAL;AAAA,WAAeA,KAAf;AAAA,GAAV,CAA7B;AAEA,MAAMC,KAAiB,GAAG;AACxBC,IAAAA,KAAK,EAAE7B,MAAM,CAAC,OAAD,EAAUoB,MAAV,EAAkB,SAAlB,CADW;AAExBU,IAAAA,UAAU,EAAE9B,MAAM,CAAC,YAAD,EAAewB,UAAf,EAA2B,CAA3B,CAFM;AAGxBO,IAAAA,aAAa,EAAE/B,MAAM,CAAC,eAAD,GAAmB,CAAC,CAApB,4BAA0BwB,UAA1B,IAAuC,CAAvC;AAHG,GAA1B;AAMA,MAAMS,WAAW,GAAGhC,IAAI,CAAC,aAAD,EAAgB,uBAAhB,CAAxB;AAEA,MAAM4C,mBAAmB,GAAGxC,MAAM,CAACyC,IAAV;AAAA;AAAA;AAAA,gIACP;AAAA,QACdC,KADc,SACdA,KADc;AAAA,4BAEdlB,KAFc;AAAA,QAEdA,KAFc,4BAEN,SAFM;AAAA,QAGda,MAHc,SAGdA,MAHc;AAAA,QAIdC,SAJc,SAIdA,SAJc;AAAA,sCAKdK,eALc;AAAA,QAKdA,eALc,sCAKI,SALJ;AAAA,WAOdL,SAAS,IAAID,MAAb,IAAuBM,eAAe,KAAK,OAA3C,GACID,KAAK,CAAClB,KAAN,CAAYA,KAAZ,CADJ,GAEIkB,KAAK,CAAClB,KAAN,CAAYoB,KATF;AAAA,GADO,EAYH;AAAA,QAAGC,WAAH,SAAGA,WAAH;AAAA,WAAqBA,WAArB;AAAA,GAZG,EAaA;AAAA,QAAGA,WAAH,SAAGA,WAAH;AAAA,WAAqBA,WAArB;AAAA,GAbA,EAcN;AAAA,QAAGH,KAAH,SAAGA,KAAH;AAAA,WAAeA,KAAK,CAACI,SAAN,CAAgBC,aAA/B;AAAA,GAdM,CAAzB;;AAkBA,MAAMC,eAAuC,GAAG,SAA1CA,eAA0C,CAAAT,KAAK;AAAA,WACnD,oBAAC,iBAAD,EAAuBA,KAAvB,EACE,oBAAC,mBAAD,eAAyBA,KAAzB;AAAgC,MAAA,WAAW,EAAEA,KAAK,CAACZ,OAAN,KAAkB,QAAlB,GAA6B,KAA7B,GAAqC;AAAlF,OADF,CADmD;AAAA,GAArD;;AAMA,SACE,oBAAC,KAAD,eAAWJ,KAAX;AAAkB,IAAA,SAAS,EAAE,oBAAC,eAAD;AAAiB,MAAA,KAAK,EAAC;AAAvB;AAA7B,MACGN,KAAK,CAACG,GAAN,CAAU,iBAAYE,KAAZ;AAAA,QAAGJ,KAAH,SAAGA,KAAH;AAAA,WACT,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEI,KAAX;AAAkB,MAAA,KAAK,EAAEJ,KAAzB;AAAgC,MAAA,WAAW,EAAEU;AAA7C,MADS;AAAA,GAAV,CADH,CADF;AAOD,CAlDH,EAmDE;AACEC,EAAAA,IAAI,EAAEtB;AADR,CAnDF;AAwDAE,OAAO,CAACO,GAAR,CACE,SADF,EAEE,YAAM;AACJ,MAAMC,KAAK,GAAG,CAAC;AAAEC,IAAAA,KAAK,EAAE;AAAT,GAAD,EAAmB;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAAnB,EAAqC;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAArC,EAAyD;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAAzD,CAAd;AACA,MAAMC,UAAoB,GAAGF,KAAK,CAACG,GAAN,CAAU,UAACC,EAAD,EAAKC,KAAL;AAAA,WAAeA,KAAf;AAAA,GAAV,CAA7B;AAEA,MAAMC,KAAiB,GAAG;AACxBC,IAAAA,KAAK,EAAE7B,MAAM,CAAC,OAAD,EAAUoB,MAAV,EAAkB,SAAlB,CADW;AAExBU,IAAAA,UAAU,EAAE9B,MAAM,CAAC,YAAD,EAAewB,UAAf,EAA2B,CAA3B,CAFM;AAGxBO,IAAAA,aAAa,EAAE/B,MAAM,CAAC,eAAD,GAAmB,CAAC,CAApB,4BAA0BwB,UAA1B,IAAuC,CAAvC,CAHG;AAIxBQ,IAAAA,OAAO,EAAEjC,MAAM,CAAC,SAAD,EAAYiB,QAAZ,EAAsB,SAAtB;AAJS,GAA1B;AAOA,MAAMiB,WAAW,GAAGhC,IAAI,CAAC,aAAD,EAAgB,uBAAhB,CAAxB;AAEA,SACE,oBAAC,KAAD,EAAW2B,KAAX,EACGN,KAAK,CAACG,GAAN,CAAU,iBAAYE,KAAZ;AAAA,QAAGJ,KAAH,SAAGA,KAAH;AAAA,WACT,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEI,KAAX;AAAkB,MAAA,KAAK,EAAEJ,KAAzB;AAAgC,MAAA,WAAW,EAAEU;AAA7C,MADS;AAAA,GAAV,CADH,CADF;AAOD,CAtBH,EAuBE;AACEC,EAAAA,IAAI,EAAExB;AADR,CAvBF;AA4BAI,OAAO,CAACO,GAAR,CACE,iBADF,EAEExB,SAAS,CACP;AACEyB,EAAAA,KAAK,EAAE,CACL;AAAEC,IAAAA,KAAK,EAAE;AAAT,GADK,EAEL;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAFK,EAGL;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAHK,EAIL;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAJK,CADT;AAOEO,EAAAA,UAAU,EAAE,CAPd;AAQEC,EAAAA,aAAa,EAAE;AARjB,CADO,EAWP,UAAAI,KAAK,EAAI;AAAA,qBAGHA,KAHG,CAELE,KAFK;AAAA,MAEIf,KAFJ,gBAEIA,KAFJ;AAAA,MAEWQ,UAFX,gBAEWA,UAFX;AAAA,MAEuBC,aAFvB,gBAEuBA,aAFvB;AAKP,MAAMH,KAAiB,GAAG;AACxBE,IAAAA,UAAU,EAAVA,UADwB;AAExBC,IAAAA,aAAa,EAAbA,aAFwB;AAGxBF,IAAAA,KAAK,EAAE7B,MAAM,CAAC,OAAD,EAAUoB,MAAV,EAAkB,SAAlB,CAHW;AAIxBY,IAAAA,OAAO,EAAEjC,MAAM,CAAC,SAAD,EAAYiB,QAAZ,EAAsB,WAAtB;AAJS,GAA1B;AAOA,MAAMsC,SAAS,GAAGxD,MAAM,CAAC,gBAAD,EAAmB,YAAM;AAC/CqC,IAAAA,KAAK,CAACK,GAAN,CAAU;AACRlB,MAAAA,KAAK,+BAAMA,KAAN,IAAa;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAb;AADG,KAAV;AAGD,GAJuB,CAAxB;AAMA,MAAMgC,SAAS,GAAGzD,MAAM,CAAC,mBAAD,EAAsB,YAAM;AAClD,QAAIwB,KAAK,CAACkC,MAAN,GAAe,CAAnB,EAAsB;AACpBrB,MAAAA,KAAK,CAACK,GAAN,CAAU;AAAElB,QAAAA,KAAK,EAAEA,KAAK,CAACmC,KAAN,CAAY,CAAZ,EAAe,CAAC,CAAhB;AAAT,OAAV;AACD,KAFD,MAEO;AACLtB,MAAAA,KAAK,CAACK,GAAN,CAAU;AAAElB,QAAAA,KAAK,EAALA;AAAF,OAAV;AACD;AACF,GANuB,CAAxB;AAQA,MAAMoC,KAAK,GAAG5D,MAAM,CAAC,wBAAD,EAA2B,YAAM;AACnDqC,IAAAA,KAAK,CAACuB,KAAN;AACD,GAFmB,CAApB;;AAIA,MAAMpB,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAkB;AACrCJ,IAAAA,KAAK,CAACK,GAAN,CAAU;AAAEV,MAAAA,UAAU,EAAES,IAAd;AAAoBR,MAAAA,aAAa,EAAEQ,IAAI,GAAG;AAA1C,KAAV;AACD,GAFD;;AAIA,SACE,oBAAC,KAAD,eAAWX,KAAX;AAAkB,IAAA,QAAQ,EAAEU;AAA5B,MACGhB,KAAK,CAACG,GAAN,CAAU,kBAAYE,KAAZ;AAAA,QAAGJ,KAAH,UAAGA,KAAH;AAAA,WACT,oBAAC,IAAD;AAAM,MAAA,GAAG,EAAEI;AAAX,MADS;AAAA,GAAV,CADH,CADF;AAOD,CApDM,CAFX,EAwDE;AACEO,EAAAA,IAAI,EAAEvB;AADR,CAxDF","sourcesContent":["import { withState } from '@dump247/storybook-state'\nimport { button, radios, select, text } from '@storybook/addon-knobs'\nimport { storiesOf } from '@storybook/react'\nimport React, { FC } from 'react'\nimport { Icon } from '@/components/Atoms/Icon'\nimport { styled } from '@/styles/styled'\nimport { IconArticle, IconCheckmarkCircleOutlined } from '@matthill8286/atomic-icon-library'\nimport { ThemeColors } from '@/types/theme'\nimport { Step } from './Step'\nimport { StepConnectorRoot } from './StepConnector'\nimport { Steps } from './Steps'\nimport {\n  CustomIconProps,\n  StepConnectorLineProps,\n  StepConnectorProps,\n  StepsProps,\n  StepsVariant,\n} from './Steps.interface'\nimport readme from './Steps.readme.md'\nimport withVariableArrayReadme from './StepsVariableArray.readme.md'\nimport withConnectorReadme from './StepsWithConnector.readme.md'\nimport withIconReadme from './StepsWithIcon.readme.md'\n\nconst stories = storiesOf('Design System/Molecules/Steps', module)\n\nconst variants: { [key: string]: StepsVariant } = {\n  prominent: 'prominent',\n  uniform: 'uniform',\n  simple: 'simple',\n}\n\nconst colors: ThemeColors[] = ['primary', 'secondary', 'black']\n\nstories.add(\n  'Default',\n  () => {\n    const steps = [{ title: 'One' }, { title: 'Two' }, { title: 'Three' }, { title: 'Four' }]\n    const stepsIndex: number[] = steps.map((el, index) => index)\n\n    const knobs: StepsProps = {\n      color: select('color', colors, 'primary'),\n      activeStep: select('activeStep', stepsIndex, 2),\n      completedStep: select('completedStep', [-1, ...stepsIndex], 1),\n      variant: radios('variant', variants, 'uniform'),\n    }\n\n    const description = text('description', 'This is a description')\n\n    return (\n      <Steps {...knobs}>\n        {steps.map(({ title }, index) => (\n          <Step key={index} title={title} description={description} />\n        ))}\n      </Steps>\n    )\n  },\n  {\n    info: readme,\n  }\n)\n\nstories.add(\n  'onChange activeStep',\n  withState({ activeStep: 2, completedStep: 1 }, store => {\n    const stepsProps: StepsProps = {\n      color: 'primary',\n      activeStep: store.state.activeStep,\n      completedStep: store.state.completedStep,\n    }\n\n    const handleChange = (step: number) => {\n      store.set({ activeStep: step, completedStep: step - 1 })\n    }\n\n    return (\n      <Steps {...stepsProps} onChange={handleChange}>\n        <Step title=\"Sign In\" description=\"This is a description\" />\n        <Step title=\"Address\" description=\"This is a description\" />\n        <Step title=\"Payment\" description=\"This is a description\" />\n        <Step title=\"Summary\" description=\"This is a description\" />\n      </Steps>\n    )\n  }),\n  {\n    info: readme,\n  }\n)\n\nstories.add(\n  'with icon',\n  () => {\n    const steps = [\n      { title: 'Sig In' },\n      { title: 'Address' },\n      { title: 'Payment' },\n      { title: 'Summary' },\n    ]\n    const stepsIndex: number[] = steps.map((el, index) => index)\n\n    const knobs: StepsProps = {\n      color: select('color', colors, 'primary'),\n      activeStep: select('activeStep', stepsIndex, 2),\n      completedStep: select('completedStep', [-1, ...stepsIndex], 1),\n    }\n\n    const description = text('description', 'This is a description')\n\n    const CustomIcon: FC<CustomIconProps> = ({\n      active = false,\n      completed = false,\n      color = 'primary',\n      ...props\n    }) => (\n      <Icon color={active ? 'white' : completed ? color : 'grey2'} {...props}>\n        <IconCheckmarkCircleOutlined />\n      </Icon>\n    )\n\n    return (\n      <Steps {...knobs}>\n        {steps.map(({ title }, index) => (\n          <Step key={index} title={title} description={description} icon={<CustomIcon />} />\n        ))}\n      </Steps>\n    )\n  },\n  {\n    info: withIconReadme,\n  }\n)\n\nstories.add(\n  'with connector',\n  () => {\n    const steps = [\n      { title: 'Sig In' },\n      { title: 'Address' },\n      { title: 'Payment' },\n      { title: 'Summary' },\n    ]\n    const stepsIndex: number[] = steps.map((el, index) => index)\n\n    const knobs: StepsProps = {\n      color: select('color', colors, 'primary'),\n      activeStep: select('activeStep', stepsIndex, 2),\n      completedStep: select('completedStep', [-1, ...stepsIndex], 1),\n    }\n\n    const description = text('description', 'This is a description')\n\n    const CustomConnectorLine = styled.span<StepConnectorLineProps>`\n      border-color: ${({\n        theme,\n        color = 'primary',\n        active,\n        completed,\n        elementPosition = 'default',\n      }) =>\n        completed || active || elementPosition === 'first'\n          ? theme.color[color]\n          : theme.color.grey2};\n      border-style: solid;\n      border-top-width: ${({ borderWidth }) => borderWidth};\n      border-bottom-width: ${({ borderWidth }) => borderWidth};\n      border-radius: ${({ theme }) => theme.dimension.borderRadius1};\n      display: block;\n    `\n\n    const CustomConnector: FC<StepConnectorProps> = props => (\n      <StepConnectorRoot {...props}>\n        <CustomConnectorLine {...props} borderWidth={props.variant === 'simple' ? '2px' : '4px'} />\n      </StepConnectorRoot>\n    )\n\n    return (\n      <Steps {...knobs} connector={<CustomConnector color=\"black\" />}>\n        {steps.map(({ title }, index) => (\n          <Step key={index} title={title} description={description} />\n        ))}\n      </Steps>\n    )\n  },\n  {\n    info: withConnectorReadme,\n  }\n)\n\nstories.add(\n  'Uniform',\n  () => {\n    const steps = [{ title: 'One' }, { title: 'Two' }, { title: 'Three' }, { title: 'Four' }]\n    const stepsIndex: number[] = steps.map((el, index) => index)\n\n    const knobs: StepsProps = {\n      color: select('color', colors, 'primary'),\n      activeStep: select('activeStep', stepsIndex, 2),\n      completedStep: select('completedStep', [-1, ...stepsIndex], 1),\n      variant: radios('variant', variants, 'uniform'),\n    }\n\n    const description = text('description', 'This is a description')\n\n    return (\n      <Steps {...knobs}>\n        {steps.map(({ title }, index) => (\n          <Step key={index} title={title} description={description} />\n        ))}\n      </Steps>\n    )\n  },\n  {\n    info: readme,\n  }\n)\n\nstories.add(\n  'variable arrays',\n  withState(\n    {\n      steps: [\n        { title: 'Sign In' },\n        { title: 'Address' },\n        { title: 'Payment' },\n        { title: 'Summary' },\n      ],\n      activeStep: 2,\n      completedStep: 1,\n    },\n    store => {\n      const {\n        state: { steps, activeStep, completedStep },\n      } = store\n\n      const knobs: StepsProps = {\n        activeStep,\n        completedStep,\n        color: select('color', colors, 'primary'),\n        variant: radios('variant', variants, 'prominent'),\n      }\n\n      const increment = button('Add an element', () => {\n        store.set({\n          steps: [...steps, { title: 'Added' }],\n        })\n      })\n\n      const decrement = button('Remove an element', () => {\n        if (steps.length > 3) {\n          store.set({ steps: steps.slice(0, -1) })\n        } else {\n          store.set({ steps })\n        }\n      })\n\n      const reset = button('Reset to initial state', () => {\n        store.reset()\n      })\n\n      const handleChange = (step: number) => {\n        store.set({ activeStep: step, completedStep: step - 1 })\n      }\n\n      return (\n        <Steps {...knobs} onChange={handleChange}>\n          {steps.map(({ title }, index) => (\n            <Step key={index} />\n          ))}\n        </Steps>\n      )\n    }\n  ),\n  {\n    info: withVariableArrayReadme,\n  }\n)\n"],"file":"Steps.story.js"}
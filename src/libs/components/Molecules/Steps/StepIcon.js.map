{"version":3,"sources":["../../../../src/components/Molecules/Steps/StepIcon.tsx"],"names":["React","cloneElement","isValidElement","Typo","css","styled","FlexCenter","StepIconRoot","div","theme","variant","active","defaultSpacing","Circle","completed","color","Checkmark","spacing","base","lg","Point","backgroundColor","border","borderRadius","width","height","StepIcon","props","customIcon","other","renderIcon","displayName"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,YAAhB,EAAkCC,cAAlC,QAAwD,OAAxD;AACA,SAASC,IAAT;AACA,SAASC,GAAT,EAAcC,MAAd;AAIA,IAAMC,UAAU,GAAGF,GAAH,2EAAhB;AAOA,IAAMG,YAAY,GAAGF,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,4EACF;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,MAAUC,OAAV,QAAUA,OAAV;AAAA,MAAmBC,MAAnB,QAAmBA,MAAnB;AAAA,SACZD,OAAO,KAAK,QAAZ,IAAwB,CAACC,MAAzB,GAAkC,MAAlC,aAA8CF,KAAK,CAACG,cAApD,OADY;AAAA,CADE,EAGC;AAAA,MAAGF,OAAH,SAAGA,OAAH;AAAA,MAAYC,MAAZ,SAAYA,MAAZ;AAAA,SAA0BD,OAAO,KAAK,QAAZ,IAAwB,CAACC,MAAzB,GAAkC,KAAlC,GAA0C,GAApE;AAAA,CAHD,EAMdL,UANc,CAAlB;AASA,IAAMO,MAAM,GAAGR,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,wHACA;AAAA,MAAGG,MAAH,SAAGA,MAAH;AAAA,MAAWG,SAAX,SAAWA,SAAX;AAAA,SAA4BA,SAAS,GAAG,KAAH,GAAWH,MAAM,GAAG,KAAH,GAAW,KAAjE;AAAA,CADA,EAEN;AAAA,MAAGF,KAAH,SAAGA,KAAH;AAAA,MAAUE,MAAV,SAAUA,MAAV;AAAA,MAAkBG,SAAlB,SAAkBA,SAAlB;AAAA,MAA6BC,KAA7B,SAA6BA,KAA7B;AAAA,SACAN,KAAK,CAACM,KAAN,CAAYJ,MAAM,GAAGI,KAAH,GAAWD,SAAS,GAAG,OAAH,UAAtC,CADA;AAAA,CAFM,EAKD;AAAA,MAAGA,SAAH,SAAGA,SAAH;AAAA,SAAoBA,SAAS,GAAG,MAAH,GAAY,MAAzC;AAAA,CALC,EAMA;AAAA,MAAGA,SAAH,SAAGA,SAAH;AAAA,SAAoBA,SAAS,GAAG,MAAH,GAAY,MAAzC;AAAA,CANA,EAOU;AAAA,MAAGL,KAAH,SAAGA,KAAH;AAAA,MAAUE,MAAV,SAAUA,MAAV;AAAA,MAAkBG,SAAlB,SAAkBA,SAAlB;AAAA,MAA6BC,KAA7B,SAA6BA,KAA7B;AAAA,SAClBN,KAAK,CAACM,KAAN,CAAYJ,MAAM,aAAaG,SAAS,GAAGC,KAAH,GAAW,OAAnD,CADkB;AAAA,CAPV,EASI;AAAA,MAAGJ,MAAH,SAAGA,MAAH;AAAA,MAAWG,SAAX,SAAWA,SAAX;AAAA,SAA4BH,MAAM,IAAIG,SAAV,GAAsB,aAAtB,GAAsC,OAAlE;AAAA,CATJ,EAUN;AAAA,MAAGL,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACM,KAAN,CAAY,OAAZ,CAAf;AAAA,CAVM,EAWRT,UAXQ,CAAZ;AAcA,IAAMU,SAAS,GAAGX,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,0ZAGJ;AAAA,MAAGC,KAAH,UAAGA,KAAH;AAAA,SAAeA,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBC,EAAlC;AAAA,CAHI,EAIH;AAAA,MAAGV,KAAH,UAAGA,KAAH;AAAA,SAAeA,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBC,EAAlC;AAAA,CAJG,EAYS;AAAA,MAAGV,KAAH,UAAGA,KAAH;AAAA,SAAeA,KAAK,CAACM,KAAN,CAAY,OAAZ,CAAf;AAAA,CAZT,EAwBS;AAAA,MAAGN,KAAH,UAAGA,KAAH;AAAA,SAAeA,KAAK,CAACM,KAAN,CAAY,OAAZ,CAAf;AAAA,CAxBT,CAAf;AA+BA,IAAMK,KAAK,GAAGf,MAAM,CAACG,GAAV;AAAA;AAAA;AAAA,GACT;AAAA,MAAGC,KAAH,UAAGA,KAAH;AAAA,MAAUE,MAAV,UAAUA,MAAV;AAAA,MAAkBU,eAAlB,UAAkBA,eAAlB;AAAA,SAAyC;AACvCC,IAAAA,MAAM,sBAAeb,KAAK,CAACM,KAAN,CAAYM,eAAZ,CAAf,CADiC;AAEvCA,IAAAA,eAAe,EAAEZ,KAAK,CAACM,KAAN,CAAYM,eAAZ,CAFsB;AAGvCE,IAAAA,YAAY,EAAE,KAHyB;AAIvCC,IAAAA,KAAK,EAAEb,MAAM,GAAG,EAAH,GAAQ,CAJkB;AAKvCc,IAAAA,MAAM,EAAEd,MAAM,GAAG,EAAH,GAAQ;AALiB,GAAzC;AAAA,CADS,CAAX;AAUA,OAAO,IAAMe,QAA2B,GAAG,SAA9BA,QAA8B,CAAAC,KAAK,EAAI;AAAA,sBAQ9CA,KAR8C,CAEhDhB,MAFgD;AAAA,MAEhDA,MAFgD,8BAEvC,KAFuC;AAAA,yBAQ9CgB,KAR8C,CAGhDb,SAHgD;AAAA,MAGhDA,SAHgD,iCAGpC,KAHoC;AAAA,qBAQ9Ca,KAR8C,CAIhDZ,KAJgD;AAAA,MAIhDA,KAJgD,6BAIxC,SAJwC;AAAA,uBAQ9CY,KAR8C,CAKhDjB,OALgD;AAAA,MAKhDA,OALgD,+BAKtC,WALsC;AAAA,MAMhDkB,UANgD,GAQ9CD,KAR8C,CAMhDC,UANgD;AAAA,MAO7CC,KAP6C,4BAQ9CF,KAR8C;;AAUlD,MAAMG,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,QAAIF,UAAU,IAAI1B,cAAc,CAAC0B,UAAD,CAAhC,EAA8C;AAC5C,aACE,oBAAC,MAAD;AAAQ,QAAA,MAAM,EAAEjB,MAAhB;AAAwB,QAAA,SAAS,EAAEG,SAAnC;AAA8C,QAAA,KAAK,EAAEC;AAArD,SACGd,YAAY,CAAC2B,UAAD,EAAa;AAAEjB,QAAAA,MAAM,EAANA,MAAF;AAAUG,QAAAA,SAAS,EAATA,SAAV;AAAqBC,QAAAA,KAAK,EAALA;AAArB,OAAb,CADf,CADF;AAKD;;AAED,QAAIL,OAAO,KAAK,QAAhB,EAA0B;AACxB,aAAO,oBAAC,KAAD;AAAO,QAAA,eAAe,EAAEC,MAAM,IAAIG,SAAV,GAAsBC,KAAtB,GAA8B,OAAtD;AAA+D,QAAA,MAAM,EAAEJ;AAAvE,QAAP;AACD;;AAED,WACE,oBAAC,MAAD;AAAQ,MAAA,MAAM,EAAEA,MAAhB;AAAwB,MAAA,SAAS,EAAEG,SAAnC;AAA8C,MAAA,KAAK,EAAEC;AAArD,OACGD,SAAS,GACR,oBAAC,SAAD;AAAW,MAAA,MAAM,EAAEH,MAAnB;AAA2B,MAAA,KAAK,EAAEI;AAAlC,MADQ,GAGR,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEJ,MAAM,GAAG,OAAH,GAAaI;AAAhC,MAJJ,CADF;AASD,GAtBD;;AAwBA,SACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEL,OAAvB;AAAgC,IAAA,MAAM,EAAEC;AAAxC,KAAoDkB,KAApD,GACGC,UAAU,EADb,CADF;AAKD,CAvCM;AAyCPJ,QAAQ,CAACK,WAAT,GAAuB,UAAvB","sourcesContent":["import React, { cloneElement, FC, isValidElement } from 'react'\nimport { Typo } from '@/components/Atoms/Typography'\nimport { css, styled } from '@/styles/styled'\nimport { ThemeColors } from '@/types/theme'\nimport { StepIconProps, StepsVariant } from './Steps.interface'\n\nconst FlexCenter = css`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-shrink: 0;\n`\n\nconst StepIconRoot = styled.div<{ variant: StepsVariant; active: boolean }>`\n  margin-top: ${({ theme, variant, active }) =>\n    variant === 'simple' && !active ? '12px' : `${theme.defaultSpacing}px`};\n  margin-bottom: ${({ variant, active }) => (variant === 'simple' && !active ? '2px' : '0')};\n  position: relative;\n  z-index: 1;\n  ${FlexCenter}\n`\n\nconst Circle = styled.div<{ active: boolean; completed: boolean; color: ThemeColors }>`\n  border: ${({ active, completed }) => (completed ? '6px' : active ? '4px' : '4px')} solid\n    ${({ theme, active, completed, color }) =>\n      theme.color[active ? color : completed ? 'white' : `grey2`]};\n  border-radius: 50%;\n  width: ${({ completed }) => (completed ? '40px' : '24px')};\n  height: ${({ completed }) => (completed ? '40px' : '24px')};\n  background-color: ${({ theme, active, completed, color }) =>\n    theme.color[active ? `white` : completed ? color : 'grey2']};\n  box-shadow: ${({ active, completed }) => (active || completed ? '2px 2px 4px' : '0 0 0')}\n    ${({ theme }) => theme.color['grey2']};\n  ${FlexCenter}\n`\n\nconst Checkmark = styled.div<{ active: boolean; color: ThemeColors }>`\n  position: relative;\n  display: inline-block;\n  width: ${({ theme }) => theme.spacing.base.lg};\n  height: ${({ theme }) => theme.spacing.base.lg};\n\n  ::before {\n    position: absolute;\n    left: 0;\n    top: 13px;\n    height: 31%;\n    width: 2px;\n    background-color: ${({ theme }) => theme.color['white']};\n    content: '';\n    transform: translateX(12px) rotate(-45deg);\n    transform-origin: left bottom;\n  }\n\n  ::after {\n    position: absolute;\n    left: 0;\n    bottom: 9px;\n    height: 2px;\n    width: 55%;\n    background-color: ${({ theme }) => theme.color['white']};\n    content: '';\n    transform: translateX(12px) rotate(-45deg);\n    transform-origin: left bottom;\n  }\n`\n\nconst Point = styled.div<{ backgroundColor: ThemeColors; active: boolean }>(\n  ({ theme, active, backgroundColor }) => ({\n    border: `2px solid ${theme.color[backgroundColor]}`,\n    backgroundColor: theme.color[backgroundColor],\n    borderRadius: '50%',\n    width: active ? 12 : 6,\n    height: active ? 12 : 6,\n  })\n)\n\nexport const StepIcon: FC<StepIconProps> = props => {\n  const {\n    active = false,\n    completed = false,\n    color = 'primary',\n    variant = 'prominent',\n    customIcon,\n    ...other\n  } = props\n\n  const renderIcon = () => {\n    if (customIcon && isValidElement(customIcon)) {\n      return (\n        <Circle active={active} completed={completed} color={color}>\n          {cloneElement(customIcon, { active, completed, color })}\n        </Circle>\n      )\n    }\n\n    if (variant === 'simple') {\n      return <Point backgroundColor={active || completed ? color : 'grey2'} active={active} />\n    }\n\n    return (\n      <Circle active={active} completed={completed} color={color}>\n        {completed ? (\n          <Checkmark active={active} color={color} />\n        ) : (\n          <Typo color={active ? 'white' : color}></Typo>\n        )}\n      </Circle>\n    )\n  }\n\n  return (\n    <StepIconRoot variant={variant} active={active} {...other}>\n      {renderIcon()}\n    </StepIconRoot>\n  )\n}\n\nStepIcon.displayName = 'StepIcon'\n"],"file":"StepIcon.js"}
{"version":3,"sources":["../../../../src/components/Molecules/Steps/StepConnector.tsx"],"names":["React","css","styled","getStepConnectorPositions","theme","variant","elementPosition","rightMargin","leftMargin","positions","uniform","first","second","last","default","prominent","spacing","base","md","simple","BottomPositions","completed","StepConnectorRoot","div","active","prevActive","currentPosition","bottomPosition","StepConnectorLine","span","color","grey2","borderWidth","dimension","borderRadius1","StepConnector","props","displayName"],"mappings":"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","sourcesContent":["import React, { FC } from 'react'\nimport { css, styled } from '@/styles/styled'\nimport {\n  StepConnectorLineProps,\n  StepConnectorPositions,\n  StepConnectorProps,\n} from './Steps.interface'\n\nconst getStepConnectorPositions = ({\n  theme,\n  variant,\n  elementPosition,\n  rightMargin,\n  leftMargin,\n}): StepConnectorPositions => {\n  const positions: StepConnectorPositions = {\n    uniform: {\n      first: css`\n        left: 50%;\n        right: 0;\n      `,\n      second: css`\n        left: -50%;\n        right: 50%;\n      `,\n      last: css`\n        left: -50%;\n        right: 50%;\n      `,\n      default: css`\n        left: -50%;\n        right: 50%;\n      `,\n    },\n    prominent: {\n      first: css`\n        left: 10px;\n        right: calc(100% - ${theme.spacing.base.md});\n      `,\n      second: css`\n        left: calc(-100% + ${theme.spacing.base.md});\n        right: 50%;\n      `,\n      last: css`\n        left: -50%;\n        right: 10px;\n      `,\n      default: css`\n        left: -50%;\n        right: 50%;\n      `,\n    },\n    simple: {\n      first: css`\n        display: none;\n      `,\n      second: css`\n        left: calc(-100% + ${42 + leftMargin}px);\n        right: calc(50% + ${28 + rightMargin}px);\n      `,\n      last: css`\n        left: calc(-50% + ${28 + leftMargin}px);\n        right: calc(0% + ${42 + rightMargin}px);\n      `,\n      default: css`\n        left: calc(-50% + ${28 + leftMargin}px);\n        right: calc(50% + ${28 + rightMargin}px);\n      `,\n    },\n  }\n\n  return positions[variant][elementPosition]\n}\n\nconst BottomPositions = {\n  uniform: {\n    completed: '16px',\n    default: '8px',\n  },\n  prominent: {\n    completed: '16px',\n    default: '8px',\n  },\n  simple: {\n    completed: '5px',\n    default: '5px',\n  },\n}\n\nexport const StepConnectorRoot = styled.div<StepConnectorProps>(\n  ({\n    theme,\n    elementPosition = 'default',\n    active,\n    completed,\n    prevActive,\n    variant = 'prominent',\n  }) => {\n    const leftMargin = active ? 4 : 0\n    const rightMargin = prevActive ? 4 : 0\n\n    const currentPosition = getStepConnectorPositions({\n      theme,\n      variant,\n      elementPosition,\n      leftMargin,\n      rightMargin,\n    })\n\n    const bottomPosition = completed\n      ? BottomPositions[variant]['completed']\n      : BottomPositions[variant]['default']\n\n    return css`\n      position: absolute;\n      bottom: ${bottomPosition};\n      ${currentPosition};\n    `\n  }\n)\n\nexport const StepConnectorLine = styled.span<StepConnectorLineProps>`\n  border-color: ${({ theme, color = 'primary', active, completed, elementPosition = 'default' }) =>\n    completed || active || elementPosition === 'first' ? theme.color[color] : theme.color.grey2};\n  border-style: solid;\n  border-top-width: ${({ borderWidth }) => borderWidth};\n  border-bottom-width: ${({ borderWidth }) => borderWidth};\n  border-radius: ${({ theme }) => theme.dimension.borderRadius1};\n  display: block;\n`\n\nexport const StepConnector: FC<StepConnectorProps> = props => (\n  <StepConnectorRoot {...props}>\n    <StepConnectorLine {...props} borderWidth={props.variant === 'simple' ? '2px' : '4px'} />\n  </StepConnectorRoot>\n)\n\nStepConnector.displayName = 'StepConnector'\n"],"file":"StepConnector.js"}
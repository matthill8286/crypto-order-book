{"version":3,"sources":["../../../../src/components/Molecules/FilterList/FilterList.story.tsx"],"names":["withState","storiesOf","React","Filters","props","initialState","items","knobs","store","onChange","isChecked","id","newItems","state","map","item","selected","set","module","add"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA,SAAgBA,SAAhB,QAAiC,0BAAjC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,OAAT;AAEA,SAASC,KAAT;AAMA,IAAMC,YAA0B,GAAG;AACjCC,EAAAA,KAAK,qBAAMF,KAAK,CAACE,KAAZ;AAD4B,CAAnC;;AAIA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAACC,KAAD,EAAuC;AACnD,SAAO;AACLC,IAAAA,QAAQ,EAAE,kBAACC,SAAD,EAAqBC,EAArB,EAAgD;AACxD,UAAMC,QAAsB,GAAGJ,KAAK,CAACK,KAAN,CAAYP,KAAZ,CAAkBQ,GAAlB,CAC7B,UAACC,IAAD,EAAkC;AAChC,YAAIA,IAAI,CAACJ,EAAL,KAAYA,EAAhB,EAAoB;AAClB,iDAAYI,IAAZ;AAAkBC,YAAAA,QAAQ,EAAE,CAACD,IAAI,CAACC;AAAlC;AACD;;AAED,eAAOD,IAAP;AACD,OAP4B,CAA/B;AASAP,MAAAA,KAAK,CAACS,GAAN,CAAU;AAAEX,QAAAA,KAAK,EAAEM;AAAT,OAAV;AACD;AAZI,GAAP;AAcD,CAfD;;AAiBAX,SAAS,CAAC,oCAAD,EAAuCiB,MAAvC,CAAT,CACGC,GADH,CAEI,SAFJ,EAGInB,SAAS,mBAAMK,YAAN,GAAsB,UAACG,KAAD,EAAgC;AAC7D,SAAO,oBAAC,OAAD,eAAaJ,KAAb;AAAoB,IAAA,KAAK,EAAEI,KAAK,CAACK,KAAN,CAAYP;AAAvC,KAAkDC,KAAK,CAACC,KAAD,CAAvD,EAAP;AACD,CAFQ,CAHb,EAOGW,GAPH,CAQI,UARJ,EASInB,SAAS,mBAAMK,YAAN,GAAsB,UAACG,KAAD,EAAgC;AAC7D,SAAO,oBAAC,OAAD,eAAaJ,KAAb;AAAoB,IAAA,cAAc,MAAlC;AAAmC,IAAA,KAAK,EAAEI,KAAK,CAACK,KAAN,CAAYP;AAAtD,KAAiEC,KAAK,CAACC,KAAD,CAAtE,EAAP;AACD,CAFQ,CATb,EAaGW,GAbH,CAcI,SAdJ,EAeInB,SAAS,mBAAMK,YAAN,GAAsB,UAACG,KAAD,EAAgC;AAC7D,SAAO,oBAAC,OAAD,eAAaJ,KAAb;AAAoB,IAAA,KAAK,EAAEI,KAAK,CAACK,KAAN,CAAYP;AAAvC,KAAkDC,KAAK,CAACC,KAAD,CAAvD;AAAgE,IAAA,OAAO;AAAvE,KAAP;AACD,CAFQ,CAfb","sourcesContent":["import { Store, withState } from '@dump247/storybook-state'\nimport { storiesOf } from '@storybook/react'\nimport * as React from 'react'\nimport { Filters } from './FilterList'\nimport { Knobs, FilterType } from './FilterList.interface'\nimport { props } from './FilterList.mocks'\n\ninterface InitialState {\n  items: FilterType[]\n}\n\nconst initialState: InitialState = {\n  items: [...props.items],\n}\n\nconst knobs = (store: Store<InitialState>): Knobs => {\n  return {\n    onChange: (isChecked: boolean, id: string | undefined) => {\n      const newItems: FilterType[] = store.state.items.map(\n        (item: FilterType): FilterType => {\n          if (item.id === id) {\n            return { ...item, selected: !item.selected }\n          }\n\n          return item\n        }\n      )\n      store.set({ items: newItems })\n    },\n  }\n}\n\nstoriesOf('Design System/Molecules/FilterList', module)\n  .add(\n    'Default',\n    withState({ ...initialState }, (store: Store<InitialState>) => {\n      return <Filters {...props} items={store.state.items} {...knobs(store)} />\n    })\n  )\n  .add(\n    'Disabled',\n    withState({ ...initialState }, (store: Store<InitialState>) => {\n      return <Filters {...props} filterDisabled items={store.state.items} {...knobs(store)} />\n    })\n  )\n  .add(\n    'Loading',\n    withState({ ...initialState }, (store: Store<InitialState>) => {\n      return <Filters {...props} items={store.state.items} {...knobs(store)} loading />\n    })\n  )\n"],"file":"FilterList.story.js"}
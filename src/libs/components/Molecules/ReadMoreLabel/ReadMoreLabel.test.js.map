{"version":3,"sources":["../../../../src/components/Molecules/ReadMoreLabel/ReadMoreLabel.test.tsx"],"names":["React","mountWithTheme","Collapse","CopyText","ReadMoreLabel","describe","test","wrapper","expect","find","prop","toEqual","mockClickHandler","jest","fn","simulate","toHaveBeenCalledTimes","mockChangeHandler","toHaveBeenCalledWith"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT;AACA,SAASC,QAAT;AACA,SAASC,QAAT;AACA,SAASC,aAAT;AAEAC,QAAQ,CAAC,sBAAD,EAAyB,YAAM;AACrCC,EAAAA,IAAI,CAAC,4BAAD,EAA+B,YAAM;AACvC,QAAMC,OAAO,GAAGN,cAAc,CAC5B,oBAAC,aAAD;AAAe,MAAA,OAAO,EAAC,IAAvB;AAA4B,MAAA,MAAM,MAAlC;AAAmC,MAAA,aAAa,EAAC,WAAjD;AAA6D,MAAA,aAAa,EAAC;AAA3E,iBAD4B,CAA9B;AAKAO,IAAAA,MAAM,CAACD,OAAO,CAACE,IAAR,CAAaL,aAAb,EAA4BM,IAA5B,CAAiC,QAAjC,CAAD,CAAN,CAAmDC,OAAnD,CAA2D,IAA3D;AACD,GAPG,CAAJ;AASAL,EAAAA,IAAI,CAAC,iCAAD,EAAoC,YAAM;AAC5C,QAAMC,OAAO,GAAGN,cAAc,CAC5B,oBAAC,aAAD;AACE,MAAA,OAAO,EAAC,IADV;AAEE,MAAA,MAAM,EAAE,KAFV;AAGE,MAAA,eAAe,EAAE,EAHnB;AAIE,MAAA,aAAa,EAAC,WAJhB;AAKE,MAAA,aAAa,EAAC;AALhB,iBAD4B,CAA9B;AAUAO,IAAAA,MAAM,CAACD,OAAO,CAACE,IAAR,CAAaL,aAAb,EAA4BM,IAA5B,CAAiC,QAAjC,CAAD,CAAN,CAAmDC,OAAnD,CAA2D,KAA3D;AACAH,IAAAA,MAAM,CAACD,OAAO,CAACE,IAAR,CAAaL,aAAb,EAA4BM,IAA5B,CAAiC,iBAAjC,CAAD,CAAN,CAA4DC,OAA5D,CAAoE,EAApE;AACD,GAbG,CAAJ;AAeAL,EAAAA,IAAI,CAAC,sBAAD,EAAyB,YAAM;AACjC,QAAMM,gBAAgB,GAAGC,IAAI,CAACC,EAAL,EAAzB;AACA,QAAMP,OAAO,GAAGN,cAAc,CAC5B,oBAAC,aAAD;AACE,MAAA,OAAO,EAAC,IADV;AAEE,MAAA,MAAM,EAAE,KAFV;AAGE,MAAA,OAAO,EAAEW,gBAHX;AAIE,MAAA,aAAa,EAAC,WAJhB;AAKE,MAAA,aAAa,EAAC;AALhB,iBAD4B,CAA9B;AAUAL,IAAAA,OAAO,CAACE,IAAR,CAAaP,QAAb,EAAuBa,QAAvB,CAAgC,OAAhC;AACAP,IAAAA,MAAM,CAACI,gBAAD,CAAN,CAAyBI,qBAAzB,CAA+C,CAA/C;AACD,GAdG,CAAJ;AAgBAV,EAAAA,IAAI,CAAC,uBAAD,EAA0B,YAAM;AAClC,QAAMW,iBAAiB,GAAGJ,IAAI,CAACC,EAAL,EAA1B;AACA,QAAMP,OAAO,GAAGN,cAAc,CAC5B,oBAAC,aAAD;AACE,MAAA,OAAO,EAAC,IADV;AAEE,MAAA,MAAM,EAAE,KAFV;AAGE,MAAA,QAAQ,EAAEgB,iBAHZ;AAIE,MAAA,aAAa,EAAC,WAJhB;AAKE,MAAA,aAAa,EAAC;AALhB,iBAD4B,CAA9B;AAWAV,IAAAA,OAAO,CAACE,IAAR,CAAaN,QAAb,EAAuBY,QAAvB,CAAgC,OAAhC;AACAP,IAAAA,MAAM,CAACS,iBAAD,CAAN,CAA0BD,qBAA1B,CAAgD,CAAhD;AACAR,IAAAA,MAAM,CAACS,iBAAD,CAAN,CAA0BC,oBAA1B,CAA+C,KAA/C;AAEAX,IAAAA,OAAO,CAACE,IAAR,CAAaN,QAAb,EAAuBY,QAAvB,CAAgC,OAAhC;AACAP,IAAAA,MAAM,CAACS,iBAAD,CAAN,CAA0BD,qBAA1B,CAAgD,CAAhD;AACAR,IAAAA,MAAM,CAACS,iBAAD,CAAN,CAA0BC,oBAA1B,CAA+C,IAA/C;AACD,GApBG,CAAJ;AAqBD,CA9DO,CAAR","sourcesContent":["import React from 'react'\nimport { mountWithTheme } from '@/testRenderer'\nimport { Collapse } from '@/components/Atoms/Collapse/Collapse'\nimport { CopyText } from '@/components/Atoms/Typography'\nimport { ReadMoreLabel } from './ReadMoreLabel'\n\ndescribe('<ReadMoreLabel> Atom', () => {\n  test('renders correct open state', () => {\n    const wrapper = mountWithTheme(\n      <ReadMoreLabel htmlFor=\"id\" isOpen showMoreLabel=\"more more\" showLessLabel=\"less less\">\n        A label\n      </ReadMoreLabel>\n    )\n    expect(wrapper.find(ReadMoreLabel).prop('isOpen')).toEqual(true)\n  })\n\n  test('renders correct collapsed state', () => {\n    const wrapper = mountWithTheme(\n      <ReadMoreLabel\n        htmlFor=\"id\"\n        isOpen={false}\n        collapsedHeight={24}\n        showMoreLabel=\"show more\"\n        showLessLabel=\"show less\">\n        A label\n      </ReadMoreLabel>\n    )\n    expect(wrapper.find(ReadMoreLabel).prop('isOpen')).toEqual(false)\n    expect(wrapper.find(ReadMoreLabel).prop('collapsedHeight')).toEqual(24)\n  })\n\n  test('emits onClick events', () => {\n    const mockClickHandler = jest.fn()\n    const wrapper = mountWithTheme(\n      <ReadMoreLabel\n        htmlFor=\"id\"\n        isOpen={false}\n        onClick={mockClickHandler}\n        showMoreLabel=\"show more\"\n        showLessLabel=\"show less\">\n        A label\n      </ReadMoreLabel>\n    )\n    wrapper.find(Collapse).simulate('click')\n    expect(mockClickHandler).toHaveBeenCalledTimes(1)\n  })\n\n  test('emits onChange events', () => {\n    const mockChangeHandler = jest.fn()\n    const wrapper = mountWithTheme(\n      <ReadMoreLabel\n        htmlFor=\"id\"\n        isOpen={false}\n        onChange={mockChangeHandler}\n        showMoreLabel=\"show more\"\n        showLessLabel=\"show less\">\n        A label\n      </ReadMoreLabel>\n    )\n\n    wrapper.find(CopyText).simulate('click')\n    expect(mockChangeHandler).toHaveBeenCalledTimes(1)\n    expect(mockChangeHandler).toHaveBeenCalledWith(false)\n\n    wrapper.find(CopyText).simulate('click')\n    expect(mockChangeHandler).toHaveBeenCalledTimes(2)\n    expect(mockChangeHandler).toHaveBeenCalledWith(true)\n  })\n})\n"],"file":"ReadMoreLabel.test.js"}
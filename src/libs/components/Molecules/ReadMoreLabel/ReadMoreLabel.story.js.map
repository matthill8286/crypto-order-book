{"version":3,"sources":["../../../../src/components/Molecules/ReadMoreLabel/ReadMoreLabel.story.tsx"],"names":["React","storiesOf","CopyText","styled","ReadMoreLabel","Checkbox","boolean","number","text","props","Filters","StyledCopyText","knobs","isOpen","showMoreLabel","showLessLabel","collapsedHeight","baseArgs","htmlFor","Default","args","useState","setIsOpen","collapsed","initialState","items","CheckboxTemplate","isChecked","setIsChecked","Template","checked","module","add"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { CopyText } from '@/components/Atoms/Typography'\nimport { styled } from '@/styles/styled'\nimport {\n  ReadMoreLabel,\n  ReadMoreLabelProps,\n} from '@/components/Molecules/ReadMoreLabel/ReadMoreLabel'\nimport { Checkbox } from '@/components/Atoms/Checkbox/Checkbox'\nimport { NotificationBox, NotificationBoxProps } from '@/components/Molecules/NotificationBox'\nimport { boolean, number, select, text } from '@storybook/addon-knobs'\nimport { props } from '@/components/Molecules/FilterList/FilterList.mocks'\nimport { Filters, FilterType } from '@/components/Molecules/FilterList'\n\nconst StyledCopyText = styled(CopyText)`\n  margin: 0;\n`\n\nconst knobs = (): Partial<ReadMoreLabelProps> => {\n  return {\n    isOpen: boolean('Is Open', false),\n    showMoreLabel: text('Show More', 'Show'),\n    showLessLabel: text('Show Less', 'Less'),\n    collapsedHeight: number('Collapse Height', 40),\n  }\n}\n\nconst baseArgs: Partial<ReadMoreLabelProps> = {\n  isOpen: false,\n  collapsedHeight: 40,\n  htmlFor: 'id',\n  showMoreLabel: 'Show More',\n  showLessLabel: 'Show Less',\n}\n\nconst Default = ({ ...args }: ReadMoreLabelProps) => {\n  const [isOpen, setIsOpen] = React.useState<boolean>(!!args.isOpen)\n\n  return (\n    <ReadMoreLabel\n      {...args}\n      isOpen={isOpen}\n      onChange={collapsed => {\n        setIsOpen(!collapsed)\n      }}>\n      <StyledCopyText bold withMargins margin=\"0\">\n        Lorem Ipsum is simply dummy text\n      </StyledCopyText>\n      <StyledCopyText>\n        Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an unknown\n        unknown printer took a galley of type and scrambled it to make a type specimen book. It has\n        survived not only five centuries, but also the leap into electronic typesetting, remaining\n        essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets\n        containing Lorem Ipsum passages, and more recently with desktop publishing software like\n        Aldus PageMaker including versions of Lorem Ipsum.\n      </StyledCopyText>\n    </ReadMoreLabel>\n  )\n}\n\ninterface InitialState {\n  items: FilterType[]\n}\n\nconst initialState: InitialState = {\n  items: [...props.items],\n}\n\nconst CheckboxTemplate = ({ ...args }: ReadMoreLabelProps) => {\n  const [isOpen, setIsOpen] = React.useState<boolean>(!!args.isOpen)\n  const [isChecked, setIsChecked] = React.useState<boolean>(false)\n\n  return (\n    <ReadMoreLabel\n      {...args}\n      isOpen={isOpen}\n      onChange={collapsed => {\n        setIsOpen(!collapsed)\n      }}>\n      <Filters {...props} items={initialState.items} onChange={() => setIsChecked(true)} />\n    </ReadMoreLabel>\n  )\n}\n\nconst Template = ({ ...args }: ReadMoreLabelProps) => {\n  const [isChecked, setIsChecked] = React.useState<boolean>(false)\n  const [isOpen, setIsOpen] = React.useState<boolean>(!!args.isOpen)\n\n  return (\n    <Checkbox\n      name=\"checkbox\"\n      selectableId=\"selectableId\"\n      onChangeValue={checked => {\n        setIsChecked(checked)\n      }}\n      isChecked={isChecked}\n      label={\n        <ReadMoreLabel\n          {...args}\n          isOpen={isOpen}\n          onClick={() => {\n            setIsChecked(!isChecked)\n          }}\n          onChange={collapsed => {\n            setIsOpen(!collapsed)\n          }}>\n          <StyledCopyText bold withMargins margin=\"0\">\n            Lorem Ipsum is simply dummy text\n          </StyledCopyText>\n          <StyledCopyText>\n            Lorem Ipsum has been the industrys standard dummy text ever since the 1500s, when an\n            unknown unknown printer took a galley of type and scrambled it to make a type specimen\n            book. It has survived not only five centuries, but also the leap into electronic\n            typesetting, remaining essentially unchanged. It was popularised in the 1960s with the\n            release of Letraset sheets containing Lorem Ipsum passages, and more recently with\n            desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.\n          </StyledCopyText>\n        </ReadMoreLabel>\n      }\n    />\n  )\n}\n\nstoriesOf('Design System/Molecules/Read More Label', module)\n  .add('Default', () => (\n    <Default\n      htmlFor=\"id\"\n      collapsedHeight={40}\n      showLessLabel={'Show Less'}\n      showMoreLabel={'Show More'}\n    />\n  ))\n  .add('Template', () => (\n    <Template\n      htmlFor=\"id\"\n      collapsedHeight={40}\n      showLessLabel={'Show Less'}\n      showMoreLabel={'Show More'}\n    />\n  ))\n  .add('Filter Template', () => (\n    <CheckboxTemplate\n      htmlFor=\"id\"\n      collapsedHeight={80}\n      showLessLabel={'Show Less'}\n      showMoreLabel={'Show More'}\n    />\n  ))\n"],"file":"ReadMoreLabel.story.js"}
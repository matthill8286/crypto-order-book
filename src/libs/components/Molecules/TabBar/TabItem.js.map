{"version":3,"sources":["../../../../src/components/Molecules/TabBar/TabItem.tsx"],"names":["React","useRef","CopyText","StyledTabBarItemContainer","TabItem","props","id","label","data","className","tabGroupName","enableSemanticTheme","surfaceColor","isDisabled","isSelected","onClick","ref","handleTabClick","e","preventDefault","current","rect","getBoundingClientRect","right","left","window","innerWidth","scrollIntoView","behavior","inline","block","displayName"],"mappings":"AAAA,OAAOA,KAAP,IAAyBC,MAAzB,QAAmD,OAAnD;AACA,SAASC,QAAT;AAEA,SAASC,yBAAT;AAEA,OAAO,IAAMC,OAAyB,GAAG,SAA5BA,OAA4B,CAAAC,KAAK,EAAI;AAAA,MAE9CC,EAF8C,GAY5CD,KAZ4C,CAE9CC,EAF8C;AAAA,MAG9CC,KAH8C,GAY5CF,KAZ4C,CAG9CE,KAH8C;AAAA,MAI9CC,IAJ8C,GAY5CH,KAZ4C,CAI9CG,IAJ8C;AAAA,MAK9CC,SAL8C,GAY5CJ,KAZ4C,CAK9CI,SAL8C;AAAA,MAM9CC,YAN8C,GAY5CL,KAZ4C,CAM9CK,YAN8C;AAAA,8BAY5CL,KAZ4C,CAO9CM,mBAP8C;AAAA,MAO9CA,mBAP8C,sCAOxB,KAPwB;AAAA,4BAY5CN,KAZ4C,CAQ9CO,YAR8C;AAAA,MAQ9CA,YAR8C,oCAQ/B,cAR+B;AAAA,0BAY5CP,KAZ4C,CAS9CQ,UAT8C;AAAA,MAS9CA,UAT8C,kCASjC,KATiC;AAAA,0BAY5CR,KAZ4C,CAU9CS,UAV8C;AAAA,MAU9CA,UAV8C,kCAUjC,KAViC;AAAA,MAW9CC,OAX8C,GAY5CV,KAZ4C,CAW9CU,OAX8C;AAahD,MAAMC,GAAwB,GAAGf,MAAM,CAAC,IAAD,CAAvC;;AAEA,MAAMgB,cAAc,GAAG,SAAjBA,cAAiB,CAACC,CAAD,EAAmB;AACxCA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAI,CAACN,UAAD,IAAeE,OAAnB,EAA4B;AAC1BA,MAAAA,OAAO,CAACT,EAAD,EAAKE,IAAL,CAAP;AACD;AACF,GALD;;AAOA,MAAIM,UAAU,IAAIE,GAAG,CAACI,OAAtB,EAA+B;AAC7B,QAAMC,IAAI,GAAGL,GAAG,CAACI,OAAJ,CAAYE,qBAAZ,EAAb;;AACA,QAAID,IAAI,CAACE,KAAL,GAAa,CAAb,IAAkBF,IAAI,CAACG,IAAL,GAAYC,MAAM,CAACC,UAAzC,EAAqD;AACnDV,MAAAA,GAAG,CAACI,OAAJ,CAAYO,cAAZ,CAA2B;AAAEC,QAAAA,QAAQ,EAAE,QAAZ;AAAsBC,QAAAA,MAAM,EAAE,QAA9B;AAAwCC,QAAAA,KAAK,EAAE;AAA/C,OAA3B;AACD;AACF;;AAED,SACE,oBAAC,yBAAD;AACE,IAAA,OAAO,EAAEb,cADX;AAEE,IAAA,GAAG,EAAED,GAFP;AAGE,IAAA,SAAS,EAAEP,SAHb;AAIE,IAAA,YAAY,EAAEG,YAJhB;AAKE,IAAA,mBAAmB,EAAED;AALvB,KAME;AACE,IAAA,EAAE,EAAEL,EADN;AAEE,IAAA,IAAI,EAAEI,YAFR;AAGE,IAAA,IAAI,EAAC,OAHP;AAIE,IAAA,OAAO,EAAEI,UAJX;AAKE,IAAA,QAAQ,EAAED,UALZ;AAME,IAAA,QAAQ;AANV,IANF,EAcE,oBAAC,QAAD;AAAU,IAAA,GAAG,EAAC,OAAd;AAAsB,IAAA,OAAO,EAAEP,EAA/B;AAAmC,IAAA,QAAQ,EAAEO;AAA7C,KACGN,KADH,CAdF,CADF;AAoBD,CAjDM;AAmDPH,OAAO,CAAC2B,WAAR,GAAsB,SAAtB","sourcesContent":["import React, { FC, Ref, useRef, MouseEvent } from 'react'\nimport { CopyText } from '@/components/Atoms/Typography'\nimport { TabItemProps } from './TabBar.interface'\nimport { StyledTabBarItemContainer } from './TabBar.styled'\n\nexport const TabItem: FC<TabItemProps> = props => {\n  const {\n    id,\n    label,\n    data,\n    className,\n    tabGroupName,\n    enableSemanticTheme = false,\n    surfaceColor = 'surfaceColor',\n    isDisabled = false,\n    isSelected = false,\n    onClick,\n  } = props\n  const ref: Ref<HTMLDivElement> = useRef(null)\n\n  const handleTabClick = (e: MouseEvent) => {\n    e.preventDefault()\n    if (!isDisabled && onClick) {\n      onClick(id, data)\n    }\n  }\n\n  if (isSelected && ref.current) {\n    const rect = ref.current.getBoundingClientRect()\n    if (rect.right < 0 || rect.left > window.innerWidth) {\n      ref.current.scrollIntoView({ behavior: 'smooth', inline: 'center', block: 'nearest' })\n    }\n  }\n\n  return (\n    <StyledTabBarItemContainer\n      onClick={handleTabClick}\n      ref={ref}\n      className={className}\n      surfaceColor={surfaceColor}\n      enableSemanticTheme={enableSemanticTheme}>\n      <input\n        id={id}\n        name={tabGroupName}\n        type=\"radio\"\n        checked={isSelected}\n        disabled={isDisabled}\n        readOnly\n      />\n      <CopyText tag=\"label\" htmlFor={id} disabled={isDisabled}>\n        {label}\n      </CopyText>\n    </StyledTabBarItemContainer>\n  )\n}\n\nTabItem.displayName = 'TabItem'\n"],"file":"TabItem.js"}
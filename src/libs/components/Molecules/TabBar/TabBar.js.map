{"version":3,"sources":["../../../../src/components/Molecules/TabBar/TabBar.tsx"],"names":["React","useEffect","useRef","useState","Icon","useWindowDimensions","StyleguideArrow","StyledArrowButton","StyledTabBar","StyledTabsContainer","StyledTabBarCard","TabItem","TabBar","props","onChange","selected","tabs","tabGroupName","enableSemanticTheme","surfaceColor","elevation","noBorder","isFixed","changeDelay","flexDirection","otherProps","tab","setTab","hasOverflow","setHasOverflow","ref","width","handleTabClick","id","data","handler","setTimeout","clearTimeout","current","offsetWidth","scrollWidth","hasWidthOverflow","handlePrevClick","scrollBy","behavior","left","handleNextClick","map","label","isDisabled","displayName"],"mappings":"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","sourcesContent":["import React, { FC, Ref, useEffect, useRef, useState } from 'react'\nimport { Icon } from '@/components/Atoms/Icon'\nimport { useWindowDimensions } from '@/components/Helper/useWindowDimensions'\nimport { StyleguideArrow } from '@matthill8286/atomic-icon-library'\nimport { TabBarProps, TabData, TabId } from './TabBar.interface'\nimport {\n  StyledArrowButton,\n  StyledTabBar,\n  StyledTabsContainer,\n  StyledTabBarCard,\n} from './TabBar.styled'\nimport { TabItem } from './TabItem'\n\nexport const TabBar: FC<TabBarProps> = props => {\n  const {\n    onChange,\n    selected,\n    tabs,\n    tabGroupName,\n    enableSemanticTheme = false,\n    surfaceColor = 'surfaceColor',\n    elevation = 0,\n    noBorder = false,\n    isFixed = false,\n    changeDelay = 1000,\n    flexDirection,\n    ...otherProps\n  } = props\n\n  const [tab, setTab] = useState(selected || null)\n  const [hasOverflow, setHasOverflow] = useState(false)\n  const ref: Ref<HTMLDivElement> = useRef<HTMLDivElement>(null)\n  const { width } = useWindowDimensions()\n\n  const handleTabClick = (id: TabId, data?: TabData) => {\n    setTab(id)\n    if (onChange) {\n      onChange(id, data)\n    }\n  }\n\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      if (tab !== selected && selected) {\n        setTab(selected)\n      }\n    }, changeDelay)\n\n    return () => {\n      clearTimeout(handler)\n    }\n  }, [selected, changeDelay])\n\n  useEffect(() => {\n    if (ref.current) {\n      const { offsetWidth, scrollWidth } = ref.current\n      const hasWidthOverflow = offsetWidth < scrollWidth\n\n      if (hasOverflow !== hasWidthOverflow) {\n        setHasOverflow(hasWidthOverflow)\n      }\n    }\n  }, [tabs, width])\n\n  const handlePrevClick = () => {\n    if (ref.current) {\n      ref.current.scrollBy({\n        behavior: 'smooth',\n        left: -200,\n      })\n    }\n  }\n\n  const handleNextClick = () => {\n    if (ref.current) {\n      ref.current.scrollBy({\n        behavior: 'smooth',\n        left: 200,\n      })\n    }\n  }\n\n  return (\n    <StyledTabBar isFixed={isFixed}>\n      <StyledTabBarCard\n        elevation={elevation}\n        shape=\"rounded-small\"\n        noBorder={noBorder ? ['top', 'right', 'bottom', 'left'] : []}\n        display=\"flex\"\n        surfaceColor={surfaceColor}\n        enableSemanticTheme={enableSemanticTheme}\n        {...otherProps}>\n        {hasOverflow && (\n          <StyledArrowButton\n            actionType=\"ghost\"\n            onClick={handlePrevClick}\n            surfaceColor={surfaceColor}\n            enableSemanticTheme={enableSemanticTheme}>\n            <Icon height={16} width={16} rotate={180}>\n              <StyleguideArrow />\n            </Icon>\n          </StyledArrowButton>\n        )}\n        <StyledTabsContainer flexDirection={flexDirection} ref={ref}>\n          {tabs.map(({ id, label, data, isDisabled = false }) => (\n            <TabItem\n              key={id}\n              id={id}\n              label={label}\n              data={data}\n              tabGroupName={tabGroupName}\n              isSelected={tab === id}\n              isDisabled={isDisabled}\n              onClick={handleTabClick}\n              enableSemanticTheme={enableSemanticTheme}\n              surfaceColor={surfaceColor}\n            />\n          ))}\n        </StyledTabsContainer>\n        {hasOverflow && (\n          <StyledArrowButton\n            actionType=\"ghost\"\n            onClick={handleNextClick}\n            enableSemanticTheme={enableSemanticTheme}\n            surfaceColor={surfaceColor}>\n            <Icon height={16} width={16}>\n              <StyleguideArrow />\n            </Icon>\n          </StyledArrowButton>\n        )}\n      </StyledTabBarCard>\n    </StyledTabBar>\n  )\n}\n\nTabBar.displayName = 'TabBar'\n"],"file":"TabBar.js"}
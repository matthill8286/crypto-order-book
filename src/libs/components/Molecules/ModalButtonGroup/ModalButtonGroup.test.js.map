{"version":3,"sources":["../../../../src/components/Molecules/ModalButtonGroup/ModalButtonGroup.test.tsx"],"names":["React","renderWithTheme","ModalButtonGroup","describe","props","primaryButtonProps","buttonLabel","actionType","onClick","jest","fn","secondaryButtonProps","it","tree","expect","toMatchSnapshot"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,eAAT;AACA,SAASC,gBAAT;AAGAC,QAAQ,CAAC,kBAAD,EAAqB,YAAM;AACjC,MAAMC,KAAqC,GAAG;AAC5CC,IAAAA,kBAAkB,EAAE;AAClBC,MAAAA,WAAW,EAAE,gBADK;AAElBC,MAAAA,UAAU,EAAE,SAFM;AAGlBC,MAAAA,OAAO,EAAEC,IAAI,CAACC,EAAL;AAHS,KADwB;AAM5CC,IAAAA,oBAAoB,EAAE;AACpBL,MAAAA,WAAW,EAAE,UADO;AAEpBC,MAAAA,UAAU,EAAE,UAFQ;AAGpBC,MAAAA,OAAO,EAAEC,IAAI,CAACC,EAAL;AAHW;AANsB,GAA9C;AAaAE,EAAAA,EAAE,CAAC,kCAAD,EAAqC,YAAM;AAC3C,QAAMC,IAAI,GAAGZ,eAAe,CAAC,oBAAC,gBAAD,EAAsBG,KAAtB,CAAD,CAA5B;AACAU,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHC,CAAF;AAIAH,EAAAA,EAAE,CAAC,+BAAD,EAAkC,YAAM;AACxC,QAAMC,IAAI,GAAGZ,eAAe,CAAC,oBAAC,gBAAD;AAAkB,MAAA,eAAe,EAAC;AAAlC,OAA8CG,KAA9C,EAAD,CAA5B;AACAU,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHC,CAAF;AAKAH,EAAAA,EAAE,CAAC,kCAAD,EAAqC,YAAM;AAC3C,QAAMC,IAAI,GAAGZ,eAAe,CAAC,oBAAC,gBAAD,OAAD,CAA5B;AACAa,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHC,CAAF;AAID,CA3BO,CAAR","sourcesContent":["import * as React from 'react'\nimport { renderWithTheme } from '@/testRenderer'\nimport { ModalButtonGroup } from './ModalButtonGroup'\nimport { ModalButtonGroupProps } from './ModalButtonGroup.interface'\n\ndescribe('ModalButtonGroup', () => {\n  const props: Partial<ModalButtonGroupProps> = {\n    primaryButtonProps: {\n      buttonLabel: 'Call to action',\n      actionType: 'primary',\n      onClick: jest.fn(),\n    },\n    secondaryButtonProps: {\n      buttonLabel: 'Bookmark',\n      actionType: 'outlined',\n      onClick: jest.fn(),\n    },\n  }\n\n  it('Should render a ModalButtonGroup', () => {\n    const tree = renderWithTheme(<ModalButtonGroup {...props} />)\n    expect(tree).toMatchSnapshot()\n  })\n  it('Should render with alignment.', () => {\n    const tree = renderWithTheme(<ModalButtonGroup buttonAlignment=\"right\" {...props} />)\n    expect(tree).toMatchSnapshot()\n  })\n\n  it('Should not render with no Button', () => {\n    const tree = renderWithTheme(<ModalButtonGroup />)\n    expect(tree).toMatchSnapshot()\n  })\n})\n"],"file":"ModalButtonGroup.test.js"}
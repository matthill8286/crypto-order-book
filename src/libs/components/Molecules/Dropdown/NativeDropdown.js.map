{"version":3,"sources":["../../../../src/components/Molecules/Dropdown/NativeDropdown.tsx"],"names":["React","Icon","CopyText","media","css","styled","IconArticle","StyledLabel","theme","spacing","base","md","xxl","noBorder","color","grey5","dimension","borderRadius3","elevationLevel2","mobile","lg","StyledSelect","select","xs","black","IconCss","StyledIcon","withBgColor","white","hasMobileIcon","StyledMobileIcon","NativeDropdown","props","className","children","icon","iconMobile","iconRotate","iconMobileRotate","margin","padding","onChange","value","displayName"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Icon, RotationValues } from '@/components/Atoms/Icon'\nimport { CopyText } from '@/components/Atoms/Typography/CopyText'\nimport { media } from '@/styles'\nimport { css, styled } from '@/styles/styled'\nimport { IconArticle } from '@matthill8286/atomic-icon-library'\n\nexport interface NativeDropdownProps {\n  className?: string\n  children?: HTMLOptionElement[] | React.ReactElement<HTMLOptionElement>[]\n  margin?: string\n  padding?: string\n  icon?: React.ReactElement\n  iconMobile?: React.ReactElement\n  iconRotate?: RotationValues\n  iconMobileRotate?: RotationValues\n  noBorder?: boolean\n  withBgColor?: boolean\n  value: string\n  onChange: React.ChangeEventHandler<HTMLSelectElement>\n}\n\ninterface StyledIconProps {\n  hasMobileIcon?: boolean\n  withBgColor?: boolean\n}\n\nconst StyledLabel = styled(CopyText)<{ noBorder: boolean }>`\n  position: relative;\n  display: block;\n  width: calc(100% - ${({ theme }) => theme.spacing.base.md});\n  height: ${({ theme }) => theme.spacing.base.xxl};\n  padding: 0 12px;\n  ${({ theme, noBorder }) => !noBorder && `border: 2px solid ${theme.color.grey5};`}\n  border-radius: ${({ theme }) => theme.dimension.borderRadius3};\n  box-shadow:  ${({ theme }) => theme.dimension.elevationLevel2};\n\n  ${media.mobile} {\n    width: ${({ theme }) => theme.spacing.base.lg};\n    height: ${({ theme }) => theme.spacing.base.lg};\n    padding: 0;\n  }\n`\n\nconst StyledSelect = styled.select`\n  appearance: none;\n  border: none;\n  display: block;\n  overflow: hidden;\n  outline: none;\n  white-space: nowrap;\n  text-overflow: ellipsis;\n  background-color: transparent;\n  box-shadow: none;\n  cursor: pointer;\n  width: 100%;\n  height: ${({ theme }) => theme.spacing.base.xxl};\n  padding: ${({ theme }) => theme.spacing.base.xs} 0;\n  z-index: 1;\n  color: ${({ theme }) => theme.color.black};\n\n  ${media.mobile} {\n    width: ${({ theme }) => theme.spacing.base.lg};\n    height: ${({ theme }) => theme.spacing.base.lg};\n    padding: 0;\n    color: transparent;\n  }\n`\n\nconst IconCss = css`\n  position: absolute;\n  z-index: -1;\n`\n\nconst StyledIcon = styled(Icon)<StyledIconProps>`\n  ${IconCss}\n  background-color: ${({ theme, withBgColor }) =>\n    withBgColor ? theme.color.white : 'transparent'};\n  right: 14px;\n  top: 14px; \n\n  ${media.mobile} {\n    right: 6px;\n    top: 6px;\n    ${({ hasMobileIcon }) => hasMobileIcon && 'display: none;'}\n  }\n`\n\nconst StyledMobileIcon = styled(Icon)<StyledIconProps>`\n  ${IconCss}\n  background-color: ${({ theme, withBgColor }) =>\n    withBgColor ? theme.color.white : 'transparent'};\n  top: 0;\n  display: none;\n\n  ${media.mobile} { \n    display: block;\n  }\n`\n\nexport const NativeDropdown: React.FC<NativeDropdownProps> = props => {\n  const {\n    className,\n    children,\n    icon,\n    iconMobile,\n    iconRotate = 90,\n    iconMobileRotate = 90,\n    noBorder = false,\n    withBgColor = true,\n    margin,\n    padding,\n    onChange,\n    value,\n  } = props\n  return (\n    <StyledLabel\n      className={className}\n      margin={margin}\n      padding={padding}\n      fontSize=\"sm\"\n      lineHeight=\"sm\"\n      noBorder={noBorder}\n      tag=\"label\">\n      <StyledSelect value={value} onChange={onChange}>\n        {children}\n      </StyledSelect>\n      <StyledIcon\n        rotate={iconRotate}\n        withBgColor={withBgColor}\n        width={20}\n        height={20}\n        hasMobileIcon={!!iconMobile}>\n        {icon ? icon : <IconArticle />}\n      </StyledIcon>\n      {iconMobile && (\n        <StyledMobileIcon\n          rotate={iconMobileRotate}\n          withBgColor={withBgColor}\n          width={20}\n          height={20}>\n          {iconMobile}\n        </StyledMobileIcon>\n      )}\n    </StyledLabel>\n  )\n}\n\nNativeDropdown.displayName = 'NativeDropdown'\n"],"file":"NativeDropdown.js"}
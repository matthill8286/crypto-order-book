{"version":3,"sources":["../../../../src/components/Molecules/ActionLink/ActionLink.test.tsx"],"names":["React","Link","mountWithTheme","renderWithTheme","ActionLink","describe","props","children","defaultActionLink","test","actionLink","wrapper","expect","find","toHaveLength","toMatchSnapshot","onClick","jest","fn","simulate","toHaveBeenCalled"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT;AACA,SAASC,cAAT,EAAyBC,eAAzB;AACA,SAASC,UAAT;AAGAC,QAAQ,CAAC,0BAAD,EAA6B,YAAM;AACzC,MAAMC,KAAsB,GAAG;AAC7BC,IAAAA,QAAQ,EAAE;AADmB,GAA/B;AAIA,MAAMC,iBAAiB,GAAG,oBAAC,UAAD,EAAgBF,KAAhB,CAA1B;AAEAG,EAAAA,IAAI,CAAC,oCAAD,EAAuC,YAAM;AAC/C,QAAMC,UAAU,GAAGP,eAAe,CAACK,iBAAD,CAAlC;AACA,QAAMG,OAAO,GAAGT,cAAc,CAACM,iBAAD,CAA9B;AACAI,IAAAA,MAAM,CAACD,OAAO,CAACE,IAAR,CAAaZ,IAAb,CAAD,CAAN,CAA2Ba,YAA3B,CAAwC,CAAxC;AACAF,IAAAA,MAAM,CAACF,UAAD,CAAN,CAAmBK,eAAnB;AACD,GALG,CAAJ;AAOAN,EAAAA,IAAI,CAAC,wBAAD,EAA2B,YAAM;AACnC,QAAMO,OAAO,GAAGC,IAAI,CAACC,EAAL,EAAhB;AACA,QAAMP,OAAO,GAAGT,cAAc,CAAC,oBAAC,UAAD,eAAgBI,KAAhB;AAAuB,MAAA,OAAO,EAAEU;AAAhC,OAAD,CAA9B;AAEAL,IAAAA,OAAO,CAACE,IAAR,CAAaZ,IAAb,EAAmBkB,QAAnB,CAA4B,OAA5B;AACAP,IAAAA,MAAM,CAACI,OAAD,CAAN,CAAgBI,gBAAhB;AACD,GANG,CAAJ;AAOD,CArBO,CAAR","sourcesContent":["import React from 'react'\nimport { Link } from '@/components/Atoms/Link'\nimport { mountWithTheme, renderWithTheme } from '@/testRenderer'\nimport { ActionLink } from './ActionLink'\nimport { ActionLinkProps } from './ActionLink.interface'\n\ndescribe('<ActionLink /> component', () => {\n  const props: ActionLinkProps = {\n    children: 'Click me',\n  }\n\n  const defaultActionLink = <ActionLink {...props} />\n\n  test('should render a <Link /> component', () => {\n    const actionLink = renderWithTheme(defaultActionLink)\n    const wrapper = mountWithTheme(defaultActionLink)\n    expect(wrapper.find(Link)).toHaveLength(1)\n    expect(actionLink).toMatchSnapshot()\n  })\n\n  test('should trigger onClick', () => {\n    const onClick = jest.fn()\n    const wrapper = mountWithTheme(<ActionLink {...props} onClick={onClick} />)\n\n    wrapper.find(Link).simulate('click')\n    expect(onClick).toHaveBeenCalled()\n  })\n})\n"],"file":"ActionLink.test.js"}
{"version":3,"sources":["../../../../src/components/Molecules/LanguageMenu/LanguageMenu.test.tsx"],"names":["React","renderWithTheme","LanguageMenu","languageMockItems","describe","extendedLanguageHandler","jest","fn","it","wrapper","expect","toMatchSnapshot","tree"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT;AACA,SAASC,YAAT;AACA,SAASC,iBAAT;AAEAC,QAAQ,CAAC,cAAD,EAAiB,YAAM;AAC7B,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B;AAAA,WAAMC,IAAI,CAACC,EAAL,EAAN;AAAA,GAAhC;;AAEAC,EAAAA,EAAE,CAAC,8BAAD,EAAiC,YAAM;AACvC,QAAMC,OAAO,GAAGR,eAAe,CAC7B,oBAAC,YAAD;AACE,MAAA,uBAAuB,EAAEI,uBAD3B;AAEE,MAAA,SAAS,EAAEF,iBAFb;AAGE,MAAA,iBAAiB,EAAE;AAHrB,MAD6B,CAA/B;AAOAO,IAAAA,MAAM,CAACD,OAAD,CAAN,CAAgBE,eAAhB;AACD,GATC,CAAF;AAWAH,EAAAA,EAAE,CAAC,4BAAD,EAA+B,YAAM;AACrC,QAAMI,IAAI,GAAGX,eAAe,CAC1B,oBAAC,YAAD;AACE,MAAA,YAAY,EAAC,UADf;AAEE,MAAA,uBAAuB,EAAEI,uBAF3B;AAGE,MAAA,SAAS,EAAEF,iBAHb;AAIE,MAAA,iBAAiB,EAAE;AAJrB,MAD0B,CAA5B;AAQAO,IAAAA,MAAM,CAACE,IAAD,CAAN,CAAaD,eAAb;AACD,GAVC,CAAF;AAYAH,EAAAA,EAAE,CAAC,8BAAD,EAAiC,YAAM;AACvC,QAAMI,IAAI,GAAGX,eAAe,CAC1B,oBAAC,YAAD;AACE,MAAA,SAAS,EAAC,UADZ;AAEE,MAAA,uBAAuB,EAAEI,uBAF3B;AAGE,MAAA,SAAS,EAAEF,iBAHb;AAIE,MAAA,iBAAiB,EAAE;AAJrB,MAD0B,CAA5B;AAQAO,IAAAA,MAAM,CAACE,IAAD,CAAN,CAAaD,eAAb;AACD,GAVC,CAAF;AAWD,CArCO,CAAR","sourcesContent":["import React from 'react'\nimport { renderWithTheme } from '@/testRenderer'\nimport { LanguageMenu } from './LanguageMenu'\nimport { languageMockItems } from './LanguageMenu.mock'\n\ndescribe('LanguageMenu', () => {\n  const extendedLanguageHandler = () => jest.fn()\n\n  it('should render with languages', () => {\n    const wrapper = renderWithTheme(\n      <LanguageMenu\n        extendedLanguageHandler={extendedLanguageHandler}\n        languages={languageMockItems}\n        setupCurrentIndex={0}\n      />\n    )\n    expect(wrapper).toMatchSnapshot()\n  })\n\n  it('should render testIdSuffix', () => {\n    const tree = renderWithTheme(\n      <LanguageMenu\n        testIdSuffix=\"language\"\n        extendedLanguageHandler={extendedLanguageHandler}\n        languages={languageMockItems}\n        setupCurrentIndex={0}\n      />\n    )\n    expect(tree).toMatchSnapshot()\n  })\n\n  it('should render with className', () => {\n    const tree = renderWithTheme(\n      <LanguageMenu\n        className=\"selected\"\n        extendedLanguageHandler={extendedLanguageHandler}\n        languages={languageMockItems}\n        setupCurrentIndex={0}\n      />\n    )\n    expect(tree).toMatchSnapshot()\n  })\n})\n"],"file":"LanguageMenu.test.js"}
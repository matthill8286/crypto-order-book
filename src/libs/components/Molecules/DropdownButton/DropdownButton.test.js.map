{"version":3,"sources":["../../../../src/components/Molecules/DropdownButton/DropdownButton.test.tsx"],"names":["React","mountWithTheme","renderWithTheme","IconUser","Picture","DropdownButton","Dropdown","onClick","jest","fn","describe","it","wrapper","expect","toMatchSnapshot","simulate","options","label","toBeDefined","find","prop","toEqual","toHaveLength"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,EAAyBC,eAAzB;AACA,SAASC,QAAT,QAAyB,mCAAzB;AACA,SAASC,OAAT;AACA,SAASC,cAAT;AACA,SAASC,QAAT;AAEA,IAAMC,OAAO,GAAGC,IAAI,CAACC,EAAL,EAAhB;AAEAC,QAAQ,CAAC,gBAAD,EAAmB,YAAM;AAC/BC,EAAAA,EAAE,CAAC,SAAD,EAAY,YAAM;AAClB,QAAMC,OAAO,GAAGV,eAAe,CAC7B,oBAAC,cAAD;AAAgB,MAAA,KAAK,EAAE,EAAvB;AAA2B,MAAA,MAAM,EAAE,EAAnC;AAAuC,MAAA,MAAM,EAAE,KAA/C;AAAsD,MAAA,OAAO,EAAEK;AAA/D,MAD6B,CAA/B;AAGAM,IAAAA,MAAM,CAACD,OAAD,CAAN,CAAgBE,eAAhB;AACD,GALC,CAAF;AAMAH,EAAAA,EAAE,CAAC,qBAAD,EAAwB,YAAM;AAC9B,QAAMC,OAAO,GAAGX,cAAc,CAC5B,oBAAC,cAAD;AAAgB,MAAA,KAAK,EAAE,EAAvB;AAA2B,MAAA,MAAM,EAAE,EAAnC;AAAuC,MAAA,MAAM,EAAE,KAA/C;AAAsD,MAAA,OAAO,EAAEM;AAA/D,MAD4B,CAA9B;AAGAK,IAAAA,OAAO,CAACG,QAAR,CAAiB,OAAjB;AACA,QAAMC,OAAO,GAAG,oBAAC,QAAD;AAAU,MAAA,OAAO,EAAE,CAAC;AAAEC,QAAAA,KAAK,EAAE;AAAT,OAAD,EAAmB;AAAEA,QAAAA,KAAK,EAAE;AAAT,OAAnB;AAAnB,MAAhB;AACAJ,IAAAA,MAAM,CAACG,OAAD,CAAN,CAAgBE,WAAhB;AACD,GAPC,CAAF;AAQAP,EAAAA,EAAE,CAAC,8BAAD,EAAiC,YAAM;AACvC,QAAMC,OAAO,GAAGX,cAAc,CAC5B,oBAAC,cAAD;AAAgB,MAAA,KAAK,EAAE,EAAvB;AAA2B,MAAA,MAAM,EAAE,EAAnC;AAAuC,MAAA,MAAM,EAAE,KAA/C;AAAsD,MAAA,OAAO,EAAEM;AAA/D,MAD4B,CAA9B;AAGAM,IAAAA,MAAM,CAACD,OAAO,CAACO,IAAR,CAAad,cAAb,EAA6Be,IAA7B,CAAkC,QAAlC,CAAD,CAAN,CAAoDC,OAApD,CAA4D,KAA5D;AACD,GALC,CAAF;AAMAV,EAAAA,EAAE,CAAC,qBAAD,EAAwB,YAAM;AAC9B,QAAMC,OAAO,GAAGX,cAAc,CAC5B,oBAAC,cAAD;AACE,MAAA,KAAK,EAAE,EADT;AAEE,MAAA,MAAM,EAAE,EAFV;AAGE,MAAA,MAAM,EAAE,KAHV;AAIE,MAAA,WAAW,EAAE,oBAAC,QAAD;AAAU,QAAA,MAAM,EAAE,EAAlB;AAAsB,QAAA,KAAK,EAAE;AAA7B,QAJf;AAKE,MAAA,OAAO,EAAEM;AALX,MAD4B,CAA9B;AASAM,IAAAA,MAAM,CAACD,OAAO,CAACO,IAAR,CAAahB,QAAb,CAAD,CAAN,CAA+BmB,YAA/B,CAA4C,CAA5C;AACD,GAXC,CAAF;AAYAX,EAAAA,EAAE,CAAC,wBAAD,EAA2B,YAAM;AACjC,QAAMC,OAAO,GAAGX,cAAc,CAC5B,oBAAC,cAAD;AACE,MAAA,KAAK,EAAE,EADT;AAEE,MAAA,MAAM,EAAE,EAFV;AAGE,MAAA,MAAM,EAAE,KAHV;AAIE,MAAA,UAAU,EAAC,iDAJb;AAKE,MAAA,OAAO,EAAEM;AALX,MAD4B,CAA9B;AASAM,IAAAA,MAAM,CAACD,OAAO,CAACO,IAAR,CAAaf,OAAb,CAAD,CAAN,CAA8BkB,YAA9B,CAA2C,CAA3C;AACD,GAXC,CAAF;AAYD,CA7CO,CAAR","sourcesContent":["import React from 'react'\nimport { mountWithTheme, renderWithTheme } from '@/testRenderer'\nimport { IconUser } from '@matthill8286/atomic-icon-library'\nimport { Picture } from '@/components/Atoms/Picture'\nimport { DropdownButton } from './DropdownButton'\nimport { Dropdown } from '../Dropdown'\n\nconst onClick = jest.fn()\n\ndescribe('DropdownButton', () => {\n  it('renders', () => {\n    const wrapper = renderWithTheme(\n      <DropdownButton width={35} height={35} isOpen={false} onClick={onClick} />\n    )\n    expect(wrapper).toMatchSnapshot()\n  })\n  it('should be clickable', () => {\n    const wrapper = mountWithTheme(\n      <DropdownButton width={35} height={35} isOpen={false} onClick={onClick} />\n    )\n    wrapper.simulate('click')\n    const options = <Dropdown options={[{ label: 'one' }, { label: 'two' }]} />\n    expect(options).toBeDefined()\n  })\n  it('renders isOpen prop as false', () => {\n    const wrapper = mountWithTheme(\n      <DropdownButton width={35} height={35} isOpen={false} onClick={onClick} />\n    )\n    expect(wrapper.find(DropdownButton).prop('isOpen')).toEqual(false)\n  })\n  it('render profile icon', () => {\n    const wrapper = mountWithTheme(\n      <DropdownButton\n        width={35}\n        height={35}\n        isOpen={false}\n        primaryIcon={<IconUser height={35} width={35} />}\n        onClick={onClick}\n      />\n    )\n    expect(wrapper.find(IconUser)).toHaveLength(1)\n  })\n  it('render profile picture', () => {\n    const wrapper = mountWithTheme(\n      <DropdownButton\n        width={35}\n        height={35}\n        isOpen={false}\n        pictureSrc=\"https://media.graphcms.com/xlJatgRxRASTguH6kE3A\"\n        onClick={onClick}\n      />\n    )\n    expect(wrapper.find(Picture)).toHaveLength(1)\n  })\n})\n"],"file":"DropdownButton.test.js"}
{"version":3,"sources":["../../../../src/components/Molecules/FeatureList/FeatureList.tsx"],"names":["React","Divider","CopyText","FlexBox","Cell","Grid","Row","styled","ListWrapper","div","theme","spacing","base","sm","FeatureList","list","Array","isArray","length","map","item","idx","label","value","displayName"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT;AACA,SAASC,QAAT;AACA,SAASC,OAAT;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,GAArB;AACA,SAASC,MAAT;AAQA,OAAO,IAAMC,WAAW,GAAGD,MAAM,CAACE,GAAV;AAAA;AAAA;AAAA,8CACP;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBC,EAAlC;AAAA,CADO,EAEJ;AAAA,MAAGH,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBC,EAAlC;AAAA,CAFI,CAAjB;AAKP,OAAO,IAAMC,WAAuC,GAAG,SAA1CA,WAA0C,QAAkC;AAAA,MAA/BC,IAA+B,SAA/BA,IAA+B;;AACvF,MAAI,CAACA,IAAD,IAAS,CAACC,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAV,IAAiC,CAACA,IAAI,CAACG,MAA3C,EAAmD;AACjD,WAAO,IAAP;AACD;;AAED,SACE,oBAAC,OAAD;AAAS,IAAA,OAAO,EAAC,MAAjB;AAAwB,IAAA,aAAa,EAAC;AAAtC,KACGH,IAAI,CAACI,GAAL,CAAS,UAACC,IAAD,EAAOC,GAAP;AAAA,WACRD,IAAI,CAACE,KAAL,KAAe,EAAf,IAAqBF,IAAI,CAACE,KAA1B,GACE,oBAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,GAAG,wBAAiBF,IAAI,CAACE,KAAtB,cAA+BD,GAA/B;AAAnB,OACE,oBAAC,WAAD,QACE,oBAAC,IAAD;AAAM,MAAA,SAAS;AAAf,OACE,oBAAC,GAAD;AAAK,MAAA,QAAQ;AAAb,OACE,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,CAAf;AAAkB,MAAA,MAAM,EAAE,CAA1B;AAA6B,MAAA,MAAM,EAAE,CAArC;AAAwC,MAAA,MAAM,EAAE;AAAhD,OACE,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAC,UAAjB;AAA4B,MAAA,KAAK,EAAC,OAAlC;AAA0C,MAAA,MAAM,EAAC;AAAjD,OACGD,IAAI,CAACE,KADR,CADF,CADF,EAME,oBAAC,IAAD;AAAM,MAAA,OAAO,EAAE,CAAf;AAAkB,MAAA,MAAM,EAAE,CAA1B;AAA6B,MAAA,MAAM,EAAE,CAArC;AAAwC,MAAA,MAAM,EAAE;AAAhD,OACE,oBAAC,QAAD;AAAU,MAAA,KAAK,EAAC,OAAhB;AAAwB,MAAA,MAAM,EAAC;AAA/B,OACGF,IAAI,CAACG,KADR,CADF,CANF,CADF,CADF,CADF,EAiBE,oBAAC,OAAD;AAAS,MAAA,KAAK,EAAC,OAAf;AAAuB,MAAA,MAAM,EAAE;AAA/B,MAjBF,CADF,GAoBI,IArBI;AAAA,GAAT,CADH,CADF;AA2BD,CAhCM;AAkCPT,WAAW,CAACU,WAAZ,GAA0B,aAA1B","sourcesContent":["import React from 'react'\nimport { Divider } from '@/components/Atoms/Divider'\nimport { CopyText } from '@/components/Atoms/Typography'\nimport { FlexBox } from '@/components/Helper/FlexBox'\nimport { Cell, Grid, Row } from '@/components/Helper/Grid'\nimport { styled } from '@/styles'\n\nexport type FeatureListType = { label?: string; value: string }\n\nexport interface FeatureListProps {\n  list: FeatureListType[]\n}\n\nexport const ListWrapper = styled.div`\n  padding-top: ${({ theme }) => theme.spacing.base.sm};\n  padding-bottom: ${({ theme }) => theme.spacing.base.sm};\n`\n\nexport const FeatureList: React.FC<FeatureListProps> = ({ list }): JSX.Element | null => {\n  if (!list || !Array.isArray(list) || !list.length) {\n    return null\n  }\n\n  return (\n    <FlexBox display=\"flex\" flexDirection=\"column\">\n      {list.map((item, idx) =>\n        item.label !== '' && item.label ? (\n          <React.Fragment key={`FeatureList-${item.label}-${idx}`}>\n            <ListWrapper>\n              <Grid noPadding>\n                <Row noMargin>\n                  <Cell columns={6} colsMd={4} colsSm={4} colsXs={2}>\n                    <CopyText weight=\"semibold\" color=\"grey5\" margin=\"0\">\n                      {item.label}\n                    </CopyText>\n                  </Cell>\n                  <Cell columns={6} colsMd={4} colsSm={4} colsXs={2}>\n                    <CopyText color=\"grey5\" margin=\"0\">\n                      {item.value}\n                    </CopyText>\n                  </Cell>\n                </Row>\n              </Grid>\n            </ListWrapper>\n            <Divider color=\"grey2\" height={1} />\n          </React.Fragment>\n        ) : null\n      )}\n    </FlexBox>\n  )\n}\n\nFeatureList.displayName = 'FeatureList'\n"],"file":"FeatureList.js"}
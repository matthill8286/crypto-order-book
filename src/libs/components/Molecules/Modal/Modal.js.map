{"version":3,"sources":["../../../../src/components/Molecules/Modal/Modal.tsx"],"names":["clearAllBodyScrollLocks","disableBodyScroll","React","Heading","StyleguideClose","useWindowDimensions","ModalButtonGroup","ModalWrapper","StlyedLeftContent","StyledIcon","StyledModalBackground","StyledModalContent","StyledModalDesktopWrapper","StyledModalHeader","StyledModalInnerWrapper","ModalHeading","children","color","Modal","buttonAlignment","className","contentBgColor","onClose","animation","position","primaryButtonProps","secondaryButtonProps","showButtonSeparator","size","title","paddingSize","withScrollableContent","hideCloseButton","isWhite","canClose","breakpointName","modalDesktopWrapper","useRef","modalInnerWrapper","modalWrapper","useEffect","current","handleClick","method","ev","stopPropagation","hasTitle","renderHeaderContent","undefined","displayName"],"mappings":"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","sourcesContent":["import { clearAllBodyScrollLocks, disableBodyScroll } from 'body-scroll-lock'\nimport * as React from 'react'\nimport { Heading } from '@/components/Atoms/Typography'\nimport { StyleguideClose } from '@matthill8286/atomic-icon-library'\nimport { useWindowDimensions } from '@/components/Helper/useWindowDimensions'\nimport { ModalButtonGroup } from '@/components/Molecules/ModalButtonGroup'\nimport { ModalHeadingProps, ModalProps } from './Modal.interface'\nimport {\n  ModalWrapper,\n  StlyedLeftContent,\n  StyledIcon,\n  StyledModalBackground,\n  StyledModalContent,\n  StyledModalDesktopWrapper,\n  StyledModalHeader,\n  StyledModalInnerWrapper,\n} from './Modal.styled'\n\nexport const ModalHeading: React.FC<ModalHeadingProps> = ({ children, color }) => (\n  <Heading margin=\"0\" textAlign=\"center\" weight=\"semibold\" scale=\"level-3\" tag=\"h1\" color={color}>\n    {children}\n  </Heading>\n)\n\nexport const Modal: React.FC<ModalProps> = ({\n  buttonAlignment = 'space-between',\n  children,\n  className,\n  contentBgColor,\n  onClose,\n  animation,\n  position = 'top',\n  primaryButtonProps,\n  secondaryButtonProps,\n  showButtonSeparator,\n  size = 'lg',\n  title,\n  paddingSize = 'md',\n  withScrollableContent = false,\n  hideCloseButton = false,\n  isWhite = false,\n  canClose = true,\n}): JSX.Element => {\n  const { breakpointName } = useWindowDimensions()\n  const modalDesktopWrapper = React.useRef<HTMLDivElement>(null)\n  const modalInnerWrapper = React.useRef<HTMLDivElement>(null)\n  const modalWrapper = React.useRef<HTMLDivElement>(null)\n\n  React.useEffect(() => {\n    if (breakpointName === 'xs') {\n      disableBodyScroll(modalDesktopWrapper?.current)\n    } else if (withScrollableContent) {\n      disableBodyScroll(modalInnerWrapper?.current)\n    } else {\n      disableBodyScroll(modalWrapper?.current)\n    }\n    return () => clearAllBodyScrollLocks()\n  }, [modalDesktopWrapper, modalInnerWrapper, modalWrapper, breakpointName, withScrollableContent])\n\n  const handleClick = (method?: () => void) => (ev?: React.MouseEvent) => {\n    if (ev) {\n      ev.stopPropagation()\n    }\n    if (method) method()\n  }\n\n  const hasTitle = !!title\n\n  const renderHeaderContent = () => (\n    <>\n      {!hideCloseButton && <StlyedLeftContent />}\n      {hasTitle && (\n        <div>{typeof title === 'string' ? <ModalHeading>{title}</ModalHeading> : <>{title}</>}</div>\n      )}\n      {!hideCloseButton && (\n        <StyledIcon width={30} height={30} color=\"grey5\" onClick={handleClick(onClose)}>\n          <StyleguideClose data-test=\"modal-close-button\" />\n        </StyledIcon>\n      )}\n    </>\n  )\n\n  return (\n    <ModalWrapper id=\"saiyan-styled-modal-wrapper\" className={className} ref={modalWrapper}>\n      <StyledModalBackground\n        isWhite={isWhite}\n        onClick={canClose ? handleClick(onClose) : undefined}\n      />\n      <StyledModalInnerWrapper\n        paddingSize={paddingSize}\n        contentBgColor={contentBgColor}\n        size={size}\n        position={position}\n        animation={animation}\n        onClick={ev => ev.stopPropagation()}\n        withScrollableContent={withScrollableContent}\n        ref={modalInnerWrapper}>\n        <StyledModalHeader hasTitle={hasTitle}>{renderHeaderContent()}</StyledModalHeader>\n        <StyledModalDesktopWrapper\n          id=\"saiyan-styled-modal-desktop-wrapper\"\n          ref={modalDesktopWrapper}>\n          <StyledModalContent>{children}</StyledModalContent>\n          <ModalButtonGroup\n            buttonAlignment={buttonAlignment}\n            primaryButtonProps={primaryButtonProps}\n            secondaryButtonProps={secondaryButtonProps}\n            showButtonSeparator={showButtonSeparator}\n          />\n        </StyledModalDesktopWrapper>\n      </StyledModalInnerWrapper>\n    </ModalWrapper>\n  )\n}\n\nModal.displayName = 'Modal'\n"],"file":"Modal.js"}
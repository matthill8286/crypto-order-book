{"version":3,"sources":["../../../../src/components/Molecules/Modal/Modal.story.tsx"],"names":["withState","action","boolean","select","text","storiesOf","React","Button","Card","CopyText","Heading","Modal","Readme","sizes","positions","types","paddingSizes","animations","Image","Text","modalKnobs","size","position","title","buttonAlignment","showButtonSeparator","paddingSize","withScrollableContent","isWhite","hideCloseButton","animation","modalKnobsWithTitle","module","add","isModalOpen","store","setModal","toggle","set","state","info","buttonLabel","actionType","onClick","href","top","bottom"],"mappings":"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","sourcesContent":["import { withState } from '@dump247/storybook-state'\nimport { action } from '@storybook/addon-actions'\nimport { boolean, select, text } from '@storybook/addon-knobs'\nimport { storiesOf } from '@storybook/react'\nimport * as React from 'react'\nimport { Button } from '@/components/Atoms/Button'\nimport { Card } from '@/components/Atoms/Card'\nimport { CopyText, Heading } from '@/components/Atoms/Typography'\nimport { ModalButtonGroupAlignment } from '@/components/Molecules/ModalButtonGroup'\nimport { Modal } from './Modal'\nimport { ModalPaddingSize, ModalPosition, ModalProps, ModalSize } from './Modal.interface'\nimport Readme from './Modal.readme.md'\n\nexport const sizes: ModalSize[] = ['lg', 'md', 'sm']\nexport const positions: ModalPosition[] = ['top', 'center', 'bottom', 'confirm']\nexport const types: ModalButtonGroupAlignment[] = ['space-between', 'right', 'center']\nexport const paddingSizes: ModalPaddingSize[] = ['md', 'lg']\nexport const animations = [\n  'fadeIn',\n  'newspaper',\n  'slideFromRight',\n  'shake',\n  'falling',\n  'slideFromBottom',\n  'superScaled',\n]\n\nconst Image = () => {\n  return <img alt=\"story-image\" src=\"https://webkit.org/demos/srcset/image-src.png\" />\n}\n\nconst Text = () => {\n  return (\n    <CopyText fontSize=\"md\">\n      Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor\n      invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et\n      justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem\n      ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy\n      eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos\n      et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata\n      sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet, consetetur sadipscing\n      elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed\n      diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd\n      gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet. Lorem ipsum dolor sit amet,\n      consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna\n      aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum.\n      Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.\n    </CopyText>\n  )\n}\n\nconst modalKnobs = (): Partial<ModalProps> => {\n  return {\n    size: select('Size', sizes, sizes[0]),\n    position: select('Position', positions, positions[0]),\n    title: text('Title', 'Modal'),\n    buttonAlignment: select('Button type', types, types[0]),\n    showButtonSeparator: boolean('With Button Seperator', true),\n    paddingSize: select('Padding', paddingSizes, paddingSizes[0]),\n    withScrollableContent: boolean('Scrollable content', false),\n    isWhite: boolean('White background', false),\n    hideCloseButton: boolean('Hide close', false),\n    animation: select('Animation', animations, animations[0]),\n  }\n}\n\nconst modalKnobsWithTitle = (): Partial<ModalProps> => {\n  return {\n    ...modalKnobs(),\n    title: text('Title', 'Modal'),\n  }\n}\n\nstoriesOf('Design System/Molecules/Modals/Modal', module)\n  .add(\n    'Default',\n    withState({ isModalOpen: true }, store => {\n      const setModal = (toggle: boolean) => {\n        store.set({ isModalOpen: toggle })\n      }\n      return (\n        <React.Fragment>\n          <Button actionType=\"primary\" onClick={() => setModal(true)}>\n            Open Modal\n          </Button>\n          {store.state.isModalOpen && (\n            <Modal {...modalKnobsWithTitle()} onClose={() => setModal(false)}>\n              <Image />\n            </Modal>\n          )}\n        </React.Fragment>\n      )\n    }),\n    { info: Readme }\n  )\n  .add(\n    'With very long content',\n    withState({ isModalOpen: true }, store => {\n      const setModal = (toggle: boolean) => {\n        store.set({ isModalOpen: toggle })\n      }\n      return (\n        <React.Fragment>\n          <Button actionType=\"primary\" onClick={() => setModal(true)}>\n            Open Modal\n          </Button>\n          {store.state.isModalOpen && (\n            <Modal {...modalKnobsWithTitle()} onClose={() => setModal(false)}>\n              <Image />\n              <Text />\n              <Image />\n              <Text />\n            </Modal>\n          )}\n        </React.Fragment>\n      )\n    }),\n    { info: Readme }\n  )\n  .add(\n    'With two buttons.',\n    () => {\n      return (\n        <Modal\n          {...modalKnobsWithTitle()}\n          primaryButtonProps={{\n            buttonLabel: 'Call to action',\n            actionType: 'primary',\n            onClick: action('onClick call to action'),\n          }}\n          secondaryButtonProps={{\n            buttonLabel: 'Close',\n            actionType: 'outlined',\n            onClick: action('onClick close'),\n          }}\n          onClose={action('onClick close cross')}>\n          <img src=\"https://webkit.org/demos/srcset/image-src.png\" />\n        </Modal>\n      )\n    },\n    { info: Readme }\n  )\n  .add(\n    'With single call to action',\n    () => {\n      return (\n        <Modal\n          {...modalKnobsWithTitle()}\n          primaryButtonProps={{\n            buttonLabel: 'Call to action',\n            actionType: 'primary',\n            onClick: action('onClick call to action'),\n          }}\n          onClose={action('onClick')}>\n          <Image />\n        </Modal>\n      )\n    },\n    { info: Readme }\n  )\n  .add(\n    'href button link',\n    () => {\n      return (\n        <Modal\n          {...modalKnobsWithTitle()}\n          primaryButtonProps={{\n            buttonLabel: 'href btn',\n            href: 'test.html',\n          }}\n          onClose={action('onClick')}>\n          <Image />\n        </Modal>\n      )\n    },\n    { info: Readme }\n  )\n  .add(\n    'with component title',\n    () => {\n      return (\n        <Modal\n          {...modalKnobs()}\n          title={\n            <>\n              <Card\n                elevation={0}\n                padding=\"md\"\n                shape=\"rounded-small\"\n                margin={{ top: 'xs', bottom: 'sm' }}>\n                <CopyText>\n                  This is a component, which is rendered before the heading and the content of the\n                  modal and is not influenced by the isDisabled-prop.\n                </CopyText>\n              </Card>\n              <Heading scale=\"level-4\">Modal title</Heading>\n            </>\n          }\n          onClose={action('onClick')}>\n          <Image />\n        </Modal>\n      )\n    },\n    { info: Readme }\n  )\n"],"file":"Modal.story.js"}
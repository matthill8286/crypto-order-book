{"version":3,"sources":["../../../../src/components/Molecules/SearchButton/SearchButton.test.tsx"],"names":["React","CopyText","mountWithTheme","renderWithTheme","SearchButton","describe","it","wrapper","expect","toMatchSnapshot","states","forEach","state","searchStyles","style","events","onMouseEnter","jest","fn","onMouseLeave","onClick","onFocus","onBlur","onChange","onKeyDown","onKeyUp","onClickIcon","input","find","simulate","toBeCalledTimes","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { InputEvents } from '@/components/Atoms/Input'\nimport { CopyText } from '@/components/Atoms/Typography'\nimport { mountWithTheme, renderWithTheme } from '@/testRenderer'\nimport { SearchButton } from './SearchButton'\nimport { SearchState, SearchStyle } from './SearchButton.interface'\n\ndescribe('SearchButton', () => {\n  it('should render', () => {\n    const wrapper = renderWithTheme(<SearchButton />)\n    expect(wrapper).toMatchSnapshot()\n  })\n  it('should render with different states', () => {\n    const states: SearchState[] = ['idle', 'valid', 'error']\n    states.forEach(state => {\n      const wrapper = renderWithTheme(<SearchButton state={state} />)\n      expect(wrapper).toMatchSnapshot()\n    })\n  })\n  it('should render with helper component', () => {\n    const wrapper = renderWithTheme(<SearchButton helper={<CopyText>help text</CopyText>} />)\n    expect(wrapper).toMatchSnapshot()\n  })\n  it('should render with errorMessage', () => {\n    const wrapper = renderWithTheme(<SearchButton state=\"error\" errorMessage=\"error message\" />)\n    expect(wrapper).toMatchSnapshot()\n  })\n\n  it('should render with dense searchStyle', () => {\n    const searchStyles: SearchStyle[] = ['default', 'dense', 'large']\n    searchStyles.forEach(style => {\n      const wrapper = renderWithTheme(<SearchButton inputStyle={style} />)\n      expect(wrapper).toMatchSnapshot()\n    })\n  })\n\n  it('should fireSearchEvents', () => {\n    const events: InputEvents = {\n      onMouseEnter: jest.fn(),\n      onMouseLeave: jest.fn(),\n      onClick: jest.fn(),\n      onFocus: jest.fn(),\n      onBlur: jest.fn(),\n      onChange: jest.fn(),\n      onKeyDown: jest.fn(),\n      onKeyUp: jest.fn(),\n      onClickIcon: jest.fn(),\n    }\n    const wrapper = mountWithTheme(<SearchButton {...events} />)\n    const input = wrapper.find('input')\n\n    input.simulate('mouseEnter')\n    expect(events.onMouseEnter).toBeCalledTimes(1)\n\n    input.simulate('mouseLeave')\n    expect(events.onMouseLeave).toBeCalledTimes(1)\n\n    input.simulate('click')\n    expect(events.onClick).toBeCalledTimes(1)\n\n    input.simulate('focus')\n    expect(events.onFocus).toBeCalledTimes(1)\n\n    input.simulate('blur')\n    expect(events.onBlur).toBeCalledTimes(1)\n\n    input.simulate('change', { target: { value: 'hallo!' } })\n    expect(events.onChange).toBeCalledTimes(1)\n\n    input.simulate('keyDown')\n    expect(events.onKeyDown).toBeCalledTimes(1)\n\n    input.simulate('keyUp')\n    expect(events.onKeyUp).toBeCalledTimes(1)\n  })\n})\n"],"file":"SearchButton.test.js"}
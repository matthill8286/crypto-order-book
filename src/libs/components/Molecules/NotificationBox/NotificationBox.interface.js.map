{"version":3,"sources":["../../../../src/components/Molecules/NotificationBox/NotificationBox.interface.ts"],"names":["NotificationContentSort"],"mappings":"AA0CA,WAAYA,uBAAZ;;WAAYA,uB;AAAAA,EAAAA,uB;AAAAA,EAAAA,uB;GAAAA,uB,KAAAA,uB","sourcesContent":["import React from 'react'\nimport { ButtonProps } from '@/components/Atoms/Button/Button.interface'\nimport { Corners, Shape } from '@/components/Atoms/Card/Card.interface'\nimport { LinkProps } from '@/components/Atoms/Link'\nimport { FontSizeMap } from '@/components/Atoms/Typography/Typo/Typo.interface'\nimport { FlexAlignItemsOptions } from '@/components/Helper/FlexBox'\nimport { BoxDimensions, ThemeFontSizes } from '@/types'\nexport type AnimationType = 'fadeIn' | 'fadeOut' | 'shake'\nexport type ArrowPosition = 'top-left' | 'top-right' | 'bottom-left' | 'bottom-right'\nexport type NotificationBoxType = 'alert' | 'error' | 'info' | 'success' | 'hot'\nexport type ButtonLayout = 'row' | 'column'\n\nexport interface ToolTipData {\n  arrowPosition: ArrowPosition\n  arrowleft?: number\n  left: number\n  top: number\n  bottom?: number\n  width?: number\n}\n\nexport interface NotificationLink\n  extends Partial<\n    Pick<\n      LinkProps,\n      'href' | 'onClick' | 'to' | 'decorationColor' | 'bold' | 'inline' | 'fontSize' | 'target'\n    >\n  > {\n  label: string\n  iconLeft?: React.ReactElement | null\n}\n\nexport interface NotificationButton\n  extends Partial<Pick<ButtonProps, 'actionType' | 'onClick' | 'href' | 'target'>> {\n  actionBtnLabel: string\n}\n\nexport interface NotificationEvents {\n  buttons?: NotificationButton[]\n  onClose?: (event: React.MouseEvent<HTMLElement>) => void\n}\n\nexport enum NotificationContentSort {\n  ButtonsLinks = 'buttonsLinks',\n  LinksButtons = 'linksButtons',\n}\n\nexport interface NotificationBoxProps\n  extends NotificationEvents,\n    Omit<React.HTMLAttributes<HTMLDivElement>, 'title'> {\n  animation?: AnimationType\n  body?: string\n  bodyFontSize?: ThemeFontSizes | FontSizeMap\n  bodyMargin?: string | BoxDimensions\n  buttonLayout?: ButtonLayout\n  links?: NotificationLink[]\n  cardShape?: Shape | Corners<Shape>\n  hasTitleIcon?: boolean\n  maxWidth?: string\n  isTitleFontBold?: boolean\n  isClosable?: boolean\n  rootPosition?: 'relative' | 'absolute'\n  title?: string | React.ReactElement\n  onClick?: React.MouseEventHandler<HTMLDivElement>\n  tooltip?: ToolTipData\n  type?: NotificationBoxType\n  titleIconSelfAlign?: FlexAlignItemsOptions\n  sort?: NotificationContentSort\n  alignLinks?: 'left' | 'center'\n}\n"],"file":"NotificationBox.interface.js"}
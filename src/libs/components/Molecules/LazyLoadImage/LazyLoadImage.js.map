{"version":3,"sources":["../../../../src/components/Molecules/LazyLoadImage/LazyLoadImage.tsx"],"names":["React","useInView","NativeLazyLoadOptions","Picture","StyledLazyImageWrapper","useNativeLazyLoading","LazyLoadImage","threshold","lazyLoad","rootMargin","withLQIP","withNativeLoading","props","src","lowResSrc","srcSm","lowResSrcSm","srcMd","lowResSrcMd","srcLg","lowResSrcLg","width","height","children","supportsLazyLoading","triggerOnce","ref","inView","undefined","Lazy","Eager"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAO,uBAAP;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,qBAAT,EAAgCC,OAAhC;AAEA,SAASC,sBAAT;AACA,SAASC,oBAAT;AAEA,OAAO,IAAMC,aAA2C,GAAG,SAA9CA,aAA8C,OAOrD;AAAA,4BANJC,SAMI;AAAA,MANJA,SAMI,+BANQ,CAMR;AAAA,2BALJC,QAKI;AAAA,MALJA,QAKI,8BALO,IAKP;AAAA,6BAJJC,UAII;AAAA,MAJJA,UAII,gCAJS,KAIT;AAAA,2BAHJC,QAGI;AAAA,MAHJA,QAGI,8BAHO,KAGP;AAAA,mCAFJC,iBAEI;AAAA,MAFJA,iBAEI,sCAFgB,KAEhB;AAAA,MADDC,KACC;;AAAA,MAEFC,GAFE,GAaAD,KAbA,CAEFC,GAFE;AAAA,MAGFC,SAHE,GAaAF,KAbA,CAGFE,SAHE;AAAA,MAIFC,KAJE,GAaAH,KAbA,CAIFG,KAJE;AAAA,MAKFC,WALE,GAaAJ,KAbA,CAKFI,WALE;AAAA,MAMFC,KANE,GAaAL,KAbA,CAMFK,KANE;AAAA,MAOFC,WAPE,GAaAN,KAbA,CAOFM,WAPE;AAAA,MAQFC,KARE,GAaAP,KAbA,CAQFO,KARE;AAAA,MASFC,WATE,GAaAR,KAbA,CASFQ,WATE;AAAA,MAUFC,KAVE,GAaAT,KAbA,CAUFS,KAVE;AAAA,MAWFC,MAXE,GAaAV,KAbA,CAWFU,MAXE;AAAA,MAYFC,QAZE,GAaAX,KAbA,CAYFW,QAZE;;AAcJ,MAAI,CAACf,QAAL,EAAe;AACb,WAAO,oBAAC,OAAD,EAAaI,KAAb,EAAqBW,QAArB,CAAP;AACD;;AACD,MAAMC,mBAAmB,GAAGb,iBAAiB,IAAIN,oBAAoB,EAArE;;AAjBI,mBAmBkBJ,SAAS,CAAC;AAC9BM,IAAAA,SAAS,EAATA,SAD8B;AAE9BkB,IAAAA,WAAW,EAAE,IAFiB;AAG9BhB,IAAAA,UAAU,EAAEA;AAHkB,GAAD,CAnB3B;AAAA;AAAA,MAmBGiB,GAnBH;AAAA,MAmBQC,MAnBR;;AAwBJ,SACE,oBAAC,sBAAD;AACE,IAAA,GAAG,EAAE,CAACH,mBAAD,GAAuBE,GAAvB,GAA6BE,SADpC;AAEE,IAAA,KAAK,EAAEP,KAFT;AAGE,IAAA,MAAM,EAAEC;AAHV,KAIG,CAACZ,QAAD,KAAciB,MAAM,IAAIH,mBAAxB,IACC,oBAAC,OAAD,eACMZ,KADN;AAEE,IAAA,GAAG,EAAEC,GAFP;AAGE,IAAA,KAAK,EAAEE,KAHT;AAIE,IAAA,KAAK,EAAEE,KAJT;AAKE,IAAA,KAAK,EAAEE,KALT;AAME,IAAA,OAAO,EAAEK,mBAAmB,GAAGtB,qBAAqB,CAAC2B,IAAzB,GAAgC3B,qBAAqB,CAAC4B;AANpF,MAOGP,QAPH,CADD,GAUG,IAdN,EAeGb,QAAQ,IACP,oBAAC,OAAD,eACME,KADN;AAEE,IAAA,GAAG,EAAEe,MAAM,GAAGd,GAAH,GAASC,SAFtB;AAGE,IAAA,KAAK,EAAEa,MAAM,GAAGZ,KAAH,GAAWC,WAH1B;AAIE,IAAA,KAAK,EAAEW,MAAM,GAAGV,KAAH,GAAWC,WAJ1B;AAKE,IAAA,KAAK,EAAES,MAAM,GAAGR,KAAH,GAAWC;AAL1B,MAMGG,QANH,CAhBJ,CADF;AA4BD,CA3DM","sourcesContent":["import 'intersection-observer' // polyfill\nimport React from 'react'\nimport { useInView } from 'react-intersection-observer'\nimport { NativeLazyLoadOptions, Picture } from '@/components/Atoms/Picture'\nimport { LazyLoadImageProps } from './LazyLoadImage.interface'\nimport { StyledLazyImageWrapper } from './LazyLoadImage.styled'\nimport { useNativeLazyLoading } from './useNativeLazyLoading'\n\nexport const LazyLoadImage: React.FC<LazyLoadImageProps> = ({\n  threshold = 0,\n  lazyLoad = true,\n  rootMargin = '0px',\n  withLQIP = false,\n  withNativeLoading = false,\n  ...props\n}) => {\n  const {\n    src,\n    lowResSrc,\n    srcSm,\n    lowResSrcSm,\n    srcMd,\n    lowResSrcMd,\n    srcLg,\n    lowResSrcLg,\n    width,\n    height,\n    children,\n  } = props\n  if (!lazyLoad) {\n    return <Picture {...props}>{children}</Picture>\n  }\n  const supportsLazyLoading = withNativeLoading && useNativeLazyLoading()\n  // intersection observer hook that delivers the inView boolean\n  const [ref, inView] = useInView({\n    threshold,\n    triggerOnce: true,\n    rootMargin: rootMargin,\n  })\n  return (\n    <StyledLazyImageWrapper\n      ref={!supportsLazyLoading ? ref : undefined}\n      width={width}\n      height={height}>\n      {!withLQIP && (inView || supportsLazyLoading) ? (\n        <Picture\n          {...props}\n          src={src}\n          srcSm={srcSm}\n          srcMd={srcMd}\n          srcLg={srcLg}\n          loading={supportsLazyLoading ? NativeLazyLoadOptions.Lazy : NativeLazyLoadOptions.Eager}>\n          {children}\n        </Picture>\n      ) : null}\n      {withLQIP && (\n        <Picture\n          {...props}\n          src={inView ? src : lowResSrc}\n          srcSm={inView ? srcSm : lowResSrcSm}\n          srcMd={inView ? srcMd : lowResSrcMd}\n          srcLg={inView ? srcLg : lowResSrcLg}>\n          {children}\n        </Picture>\n      )}\n    </StyledLazyImageWrapper>\n  )\n}\n"],"file":"LazyLoadImage.js"}
{"version":3,"sources":["../../../../src/components/Helper/useWindowDimensions/useWindowDimensions.tsx"],"names":["debounce","React","breakpoints","breakpointNamesMapping","getWindowDimensions","window","width","height","breakpoint","breakpointName","innerWidth","innerHeight","Object","values","sort","a","b","find","w","frameThrottle","func","frame","cancel","undefined","cancelAnimationFrame","throttled","requestAnimationFrame","useWindowDimensions","delay","useState","windowDimensions","setWindowDimensions","useEffect","update","limitedUpdate","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import debounce from 'lodash/debounce'\nimport * as React from 'react'\nimport { breakpoints } from '@/styles'\n\ntype breakpointValue = 1472 | 1232 | 1008 | 752 | 512\nexport type breakpointName = 'xxl' | 'xl' | 'lg' | 'md' | 'sm' | 'xs'\n\nconst breakpointNamesMapping = {\n  1472: 'xxl',\n  1232: 'xl',\n  1008: 'lg',\n  752: 'md',\n  512: 'sm',\n  0: 'xs',\n}\n\nexport interface WindowDimensions {\n  width: number\n  height: number\n  breakpoint: breakpointValue | 0\n  breakpointName: breakpointName\n}\n\n// todo add isUp isDown functions\nexport const getWindowDimensions = (): WindowDimensions => {\n  if (typeof window === 'undefined') {\n    return {\n      width: 0,\n      height: 0,\n      breakpoint: 0,\n      breakpointName: 'sm',\n    }\n  }\n  const { innerWidth: width, innerHeight: height } = window\n  const breakpoint =\n    Object.values(breakpoints)\n      .sort((a, b) => b - a)\n      .find(w => width >= w) || 0\n  return {\n    width,\n    height,\n    breakpoint,\n    breakpointName: breakpointNamesMapping[breakpoint],\n  }\n}\n\nconst frameThrottle = (func: FrameRequestCallback) => {\n  let frame: number | undefined\n  const cancel = () => {\n    if (frame !== undefined) cancelAnimationFrame(frame)\n  }\n  const throttled = () => {\n    if (frame !== undefined) cancelAnimationFrame(frame)\n    frame = requestAnimationFrame(func)\n  }\n  return [throttled, cancel]\n}\n\n// Pass 'frame' to throttle resize events matching the framerate\nexport const useWindowDimensions = (delay: number | 'frame' = 250) => {\n  const [windowDimensions, setWindowDimensions] = React.useState(getWindowDimensions())\n\n  React.useEffect(() => {\n    if (typeof window === 'undefined') return\n    const update = () => setWindowDimensions(getWindowDimensions())\n    const [limitedUpdate, cancel] =\n      delay === 'frame' ? frameThrottle(update) : [debounce(update, delay)]\n    update()\n    window.addEventListener('resize', limitedUpdate)\n    return () => {\n      window.removeEventListener('resize', limitedUpdate)\n      cancel?.()\n    }\n  }, [delay])\n\n  return windowDimensions\n}\n"],"file":"useWindowDimensions.js"}
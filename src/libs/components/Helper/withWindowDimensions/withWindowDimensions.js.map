{"version":3,"sources":["../../../../src/components/Helper/withWindowDimensions/withWindowDimensions.tsx"],"names":["hoistNonReactStatics","debounce","React","subscribe","getWindowDimensions","delay","withWindowDimensions","WrappedComponent","Wrapper","props","_handleResize","state","breakpointName","_isMounted","_resizeListener","event","augmentedEvent","debouncedHandle","resize","width","enableResizeInfo","useRAF","window","innerWidth","unsubscribe","setState","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,oBAAP,MAAiC,yBAAjC;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,mBAAT;AAEA,IAAMC,KAAK,GAAG,GAAd;AAGA,OAAO,IAAMC,oBAAyB,GAAG,SAA5BA,oBAA4B,CAACC,gBAAD,EAAiD;AAExF,MAAMC,OAAO;AAAA;;AAAA;;AAIX,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gCAAMA,KAAN;;AADiB,mEAHN,KAGM;;AAAA;;AAAA,wEAOOR,QAAQ,CAAC,MAAKS,aAAN,EAAqBL,KAArB,CAPf;;AAEjB,YAAKM,KAAL,GAAa;AACXC,QAAAA,cAAc,EAAE;AADL,OAAb;AAFiB;AAKlB;;AATU;AAAA;AAAA,aAaX,6BAA2B;AAAA;;AACzB,aAAKC,UAAL,GAAkB,IAAlB;AACA,aAAKC,eAAL,GAAuBX,SAAS,CAC9B,QAD8B,EAE9B,UAACY,KAAD,EAAQC,cAAR;AAAA,iBAA2B,MAAI,CAACC,eAAL,CAAqBD,cAAc,CAACE,MAAf,CAAsBC,KAA3C,CAA3B;AAAA,SAF8B,EAG9B;AAAEC,UAAAA,gBAAgB,EAAE,IAApB;AAA0BC,UAAAA,MAAM,EAAE;AAAlC,SAH8B,CAAhC;AAKA,aAAKJ,eAAL,CAAqBK,MAAM,CAACC,UAA5B;AACD;AArBU;AAAA;AAAA,aAuBX,gCAA8B;AAAA;;AAC5B,aAAKV,UAAL,GAAkB,KAAlB;AACA,sCAAKC,eAAL,gFAAsBU,WAAtB;AACD;AA1BU;AAAA;AAAA,aA4BX,kBAAgB;AACd,eAAO,oBAAC,gBAAD;AAAkB,UAAA,cAAc,EAAE,KAAKb,KAAL,CAAWC;AAA7C,WAAiE,KAAKH,KAAtE,EAAP;AACD;AA9BU;AAAA;AAAA,aAiCX,uBAAsBU,KAAtB,EAAqC;AAAA,mCACRf,mBAAmB,EADX;AAAA,YAC3BQ,cAD2B,wBAC3BA,cAD2B;;AAGnC,YAAI,KAAKC,UAAT,EAAqB;AACnB,eAAKY,QAAL,CAAc;AAAEb,YAAAA,cAAc,EAAdA;AAAF,WAAd;AACD;AACF;AAvCU;;AAAA;AAAA,IAAiBV,KAAK,CAACwB,SAAvB,CAAb;;AAyCA,SAAO1B,oBAAoB,CAACQ,OAAD,EAAUD,gBAAV,CAA3B;AACD,CA5CM","sourcesContent":["import hoistNonReactStatics from 'hoist-non-react-statics'\nimport debounce from 'lodash/debounce'\nimport * as React from 'react'\nimport { subscribe } from 'subscribe-ui-event'\nimport { getWindowDimensions } from '../useWindowDimensions'\n\nconst delay = 250\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport const withWindowDimensions: any = (WrappedComponent: React.ComponentClass<any>) => {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const Wrapper = class extends React.Component<any, any> {\n    _isMounted = false\n    private _resizeListener\n\n    constructor(props) {\n      super(props)\n      this.state = {\n        breakpointName: 'xs',\n      }\n    }\n\n    private debouncedHandle = debounce(this._handleResize, delay)\n\n    public componentDidMount() {\n      this._isMounted = true\n      this._resizeListener = subscribe(\n        'resize',\n        (event, augmentedEvent) => this.debouncedHandle(augmentedEvent.resize.width),\n        { enableResizeInfo: true, useRAF: true }\n      )\n      this.debouncedHandle(window.innerWidth)\n    }\n\n    public componentWillUnmount() {\n      this._isMounted = false\n      this._resizeListener?.unsubscribe()\n    }\n\n    public render() {\n      return <WrappedComponent breakpointName={this.state.breakpointName} {...this.props} />\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    private _handleResize(width: number) {\n      const { breakpointName } = getWindowDimensions()\n\n      if (this._isMounted) {\n        this.setState({ breakpointName })\n      }\n    }\n  }\n  return hoistNonReactStatics(Wrapper, WrappedComponent)\n}\n"],"file":"withWindowDimensions.js"}
{"version":3,"sources":["../../../../src/components/Helper/Portal/Portal.tsx"],"names":["ReactDOM","Portal","targetRootId","dataTest","children","targetRootElement","document","getElementById","setAttribute","createPortal"],"mappings":"AACA,OAAOA,QAAP,MAAqB,WAArB;AAMA,OAAO,IAAMC,MAA6B,GAAG,SAAhCA,MAAgC,OAIb;AAAA,MAH9BC,YAG8B,QAH9BA,YAG8B;AAAA,MAF9BC,QAE8B,QAF9BA,QAE8B;AAAA,MAD9BC,QAC8B,QAD9BA,QAC8B;AAC9B,MAAMC,iBAAiB,GAAGC,QAAQ,CAACC,cAAT,CAAwBL,YAAxB,CAA1B;;AACA,MAAIC,QAAJ,EAAc;AACZE,IAAAA,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAEG,YAAnB,CAAgC,WAAhC,EAA6CL,QAA7C;AACD;;AACD,SAAOE,iBAAiB,GAAGL,QAAQ,CAACS,YAAT,CAAsBL,QAAtB,EAAgCC,iBAAhC,CAAH,GAAwD,IAAhF;AACD,CAVM","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { PortalProps } from './Portal.interface'\n\n/**\n * Returns null if target element is not found in the dom.\n */\nexport const Portal: React.FC<PortalProps> = ({\n  targetRootId,\n  dataTest,\n  children,\n}): React.ReactPortal | null => {\n  const targetRootElement = document.getElementById(targetRootId)\n  if (dataTest) {\n    targetRootElement?.setAttribute('data-test', dataTest)\n  }\n  return targetRootElement ? ReactDOM.createPortal(children, targetRootElement) : null\n}\n"],"file":"Portal.js"}
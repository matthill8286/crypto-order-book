{"version":3,"sources":["../../../../src/components/Helper/Grid/Cell.styled.tsx"],"names":["media","css","styled","gutterWidth","getXsCols","columns","colsXs","cols","undefined","xs","getSmMdCols","md","colsSm","colsMd","gutter","sm","getLgXlCols","xl","colsLg","colsXl","lg","StyledCell","div","alignHeight","ie11","noMargin","order","align","justify"],"mappings":"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","sourcesContent":["import { media } from '@/styles/media'\nimport { css, styled } from '@/styles/styled'\nimport { gutterWidth } from './constants'\nimport { StyledCellProps, TwelveColumn } from './Grid.interface'\n\nconst getXsCols = ({ columns, colsXs }: Pick<StyledCellProps, 'columns' | 'colsXs'>) => {\n  const cols = colsXs !== undefined ? colsXs : columns\n  if (cols !== undefined) {\n    switch (cols) {\n      case 0:\n        return `\n          display: none;\n        `\n      case 1:\n        return css`\n          width: calc(25% - ${gutterWidth.xs}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 1;\n          }\n        `\n      case 2:\n        return css`\n          width: calc(50% - ${gutterWidth.xs}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 2;\n          }\n        `\n      case 3:\n        return css`\n          width: calc(75% - ${gutterWidth.xs}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 3;\n          }\n        `\n      default:\n        return css`\n          width: calc(100% - ${gutterWidth.xs}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 4;\n          }\n        `\n    }\n  }\n}\n\nconst getSmMdCols = (md: boolean) => ({\n  columns,\n  colsSm,\n  colsMd,\n}: Pick<StyledCellProps, 'columns' | 'colsSm' | 'colsMd'>) => {\n  let cols: TwelveColumn | undefined\n  if (md) {\n    cols = colsMd !== undefined ? colsMd : columns\n  } else {\n    cols = colsSm !== undefined ? colsSm : columns\n  }\n  const gutter = md ? gutterWidth.md : gutterWidth.sm\n  if (cols !== undefined) {\n    switch (cols) {\n      case 0:\n        return `\n          display: none;\n        `\n      case 1:\n        return css`\n          width: calc(12.5% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 1;\n          }\n        `\n      case 2:\n        return css`\n          width: calc(25% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 2;\n          }\n        `\n      case 3:\n        return css`\n          width: calc(37.5% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 3;\n          }\n        `\n      case 4:\n        return css`\n          width: calc(50% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 4;\n          }\n        `\n      case 5:\n        return css`\n          width: calc(62.5% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 5;\n          }\n        `\n      case 6:\n        return css`\n          width: calc(75% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 6;\n          }\n        `\n      case 7:\n        return css`\n          width: calc(87.5% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 7;\n          }\n        `\n      default:\n        return css`\n          width: calc(100% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 8;\n          }\n        `\n    }\n  }\n}\n\nconst getLgXlCols = (xl: boolean) => ({\n  columns,\n  colsLg,\n  colsXl,\n}: Pick<StyledCellProps, 'columns' | 'colsLg' | 'colsXl'>) => {\n  let cols: TwelveColumn | undefined\n  if (xl) {\n    cols = colsXl !== undefined ? colsXl : columns\n  } else {\n    cols = colsLg !== undefined ? colsLg : columns\n  }\n  const gutter = xl ? gutterWidth.xl : gutterWidth.lg\n  if (cols !== undefined) {\n    switch (cols) {\n      case 0:\n        return `\n          display: none;\n        `\n      case 1:\n        return css`\n          width: calc(8.33333% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 1;\n          }\n        `\n      case 2:\n        return css`\n          width: calc(16.66667% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 2;\n          }\n        `\n      case 3:\n        return css`\n          width: calc(25% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 3;\n          }\n        `\n      case 4:\n        return css`\n          width: calc(33.33333% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 4;\n          }\n        `\n      case 5:\n        return css`\n          width: calc(41.66667% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 5;\n          }\n        `\n      case 6:\n        return css`\n          width: calc(50% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 6;\n          }\n        `\n      case 7:\n        return css`\n          width: calc(58.33333% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 7;\n          }\n        `\n      case 8:\n        return css`\n          width: calc(66.66667% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 8;\n          }\n        `\n      case 9:\n        return css`\n          width: calc(75% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 9;\n          }\n        `\n      case 10:\n        return css`\n          width: calc(83.33333% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 10;\n          }\n        `\n      case 11:\n        return css`\n          width: calc(91.66667% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 11;\n          }\n        `\n      default:\n        return css`\n          width: calc(100% - ${gutter}px);\n\n          @supports (display: grid) {\n            width: auto;\n            grid-column-end: span 12;\n          }\n        `\n    }\n  }\n}\n\nexport const StyledCell = styled.div<StyledCellProps>`\n  flex-grow: 1;\n  box-sizing: border-box;\n  margin: calc(${gutterWidth.xs}px / 2);\n  width: calc(100% - ${gutterWidth.xs}px);\n\n  @supports (display: grid) {\n    margin: 0;\n    width: auto;\n    grid-column-end: span 4;\n  }\n\n  ${getXsCols}\n\n\n  ${media.sm} {\n    display: ${({ alignHeight }) => (alignHeight ? `flex` : `block`)};\n    margin: calc(${gutterWidth.sm}px / 2);\n    width: calc(50% - ${gutterWidth.sm}px);\n\n    @supports (display: grid) {\n      margin: 0;\n      width: auto;\n      grid-column-end: span 4;\n    }\n\n    ${getSmMdCols(false)}\n  }\n\n  ${media.md} {\n    display: ${({ alignHeight }) => (alignHeight ? `flex` : `block`)};\n    margin: calc(${gutterWidth.md}px / 2);\n    width: calc(50% - ${gutterWidth.md}px);\n\n    @supports (display: grid) {\n      margin: 0;\n      width: auto;\n      grid-column-end: span 4;\n    }\n\n    ${getSmMdCols(true)}\n  }\n\n  ${media.lg} {\n    display: ${({ alignHeight }) => (alignHeight ? `flex` : `block`)};\n    margin: calc(${gutterWidth.lg}px / 2);\n    width: calc(33.33333% - ${gutterWidth.lg}px);\n\n    @supports (display: grid) {\n      margin: 0;\n      width: auto;\n      grid-column-end: span 4;\n    }\n\n    ${getLgXlCols(false)}\n  }\n\n  ${media.xl} {\n    display: ${({ alignHeight }) => (alignHeight ? `flex` : `block`)};\n    margin: calc(${gutterWidth.xl}px / 2);\n    width: calc(33.33333% - ${gutterWidth.xl}px);\n\n    @supports (display: grid) {\n      margin: 0;\n      width: auto;\n      grid-column-end: span 4;\n    }\n\n    ${getLgXlCols(true)}\n  }\n  \n  ${media.ie11} {\n    ${({ noMargin }) =>\n      noMargin &&\n      `\n        margin: 0;\n    `}\n  }\n \n  \n  ${({ order }) =>\n    order &&\n    css`\n      order: ${order};\n    `}\n\n  ${({ align }) => {\n    if (align) {\n      switch (align) {\n        case 'bottom':\n          return `\n            align-self: flex-end;\n\n            @supports (display: grid) {\n              align-self: end;\n            }\n            `\n        case 'middle':\n          return `\n            align-self: center;\n          `\n        case 'top':\n          return `\n          align-self: flex-start;\n\n            @supports (display: grid) {\n              align-self: start;\n            }\n          `\n        default:\n          return ''\n      }\n    }\n  }}\n\n  \n  ${({ justify }) => {\n    if (justify) {\n      switch (justify) {\n        case 'flex-end':\n          return `\n            justify-self: flex-end;\n\n            @supports (display: grid) {\n              justify-self: end;\n            }\n            `\n        case 'stretch':\n          return `\n            justify-self: stretch;\n          `\n        case 'center':\n          return `\n            justify-self: center;\n          `\n        case 'flex-start':\n          return `\n          justify-self: flex-start;\n\n            @supports (display: grid) {\n              justify-self: start;\n            }\n          `\n        default:\n          return ''\n      }\n    }\n  }}\n\n  ${({ alignHeight }) =>\n    alignHeight &&\n    `display: flex;\n      > div {\n        flex: 1\n      }`}\n\n`\n"],"file":"Cell.styled.js"}
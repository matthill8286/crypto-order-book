{"version":3,"sources":["../../../../src/components/Helper/useElementPosition/useElementPosition.ts"],"names":["useEffect","useState","throttle","useElementPosition","ref","attachTo","delay","top","left","position","setPosition","isVisible","setIsVisible","handleResize","current","getBoundingClientRect","right","verticalRefAdaption","includes","horizontalRefAdaption","offsetHeight","offsetLeft","window","undefined","pageXOffset","document","documentElement","scrollLeft","offsetTop","pageYOffset","scrollTop","positionTop","Math","round","positionLeft","max","bottom","throttledHandle","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["import { CSSProperties, Dispatch, RefObject, SetStateAction, useEffect, useState } from 'react'\nimport throttle from 'lodash/throttle'\n\nexport type UseElementPositionProps = {\n  ref?: RefObject<HTMLElement>\n  attachTo?: 'bottom-center' | 'bottom-left'\n  delay?: number\n}\n\nexport type UseElementPositionReturnType = {\n  position: Partial<CSSProperties>\n  isVisible: boolean\n  setIsVisible: Dispatch<SetStateAction<boolean>>\n}\n\nexport const useElementPosition = ({\n  ref,\n  attachTo = 'bottom-center',\n  delay = 250,\n}: UseElementPositionProps): UseElementPositionReturnType => {\n  const [position, setPosition] = useState<Partial<CSSProperties>>({ top: 0, left: 0 })\n  const [isVisible, setIsVisible] = useState(false)\n\n  useEffect(() => {\n    const handleResize = () => {\n      if (ref?.current) {\n        const { top, left, right } = ref.current.getBoundingClientRect()\n        const verticalRefAdaption = attachTo?.includes('center') ? 0.5 * (right - left) : 0\n        const horizontalRefAdaption = attachTo?.includes('bottom') ? ref.current.offsetHeight : 0\n        const offsetLeft =\n          (typeof window !== undefined && window.pageXOffset) ||\n          document?.documentElement.scrollLeft ||\n          0\n        const offsetTop =\n          (typeof window !== undefined && window.pageYOffset) ||\n          document?.documentElement.scrollTop ||\n          0\n        const positionTop = `${Math.round(top + horizontalRefAdaption + offsetTop)}px`\n        const positionLeft = `${Math.max(0, Math.round(left + verticalRefAdaption + offsetLeft))}px`\n        setPosition({\n          top: positionTop,\n          right: 'auto',\n          bottom: 'auto',\n          left: positionLeft,\n        })\n      }\n    }\n\n    handleResize()\n    const throttledHandle = throttle(handleResize, delay)\n\n    window.addEventListener('resize', throttledHandle)\n    return () => window.removeEventListener('resize', throttledHandle)\n  }, [ref, attachTo, delay, isVisible])\n\n  return {\n    position,\n    isVisible,\n    setIsVisible,\n  }\n}\n"],"file":"useElementPosition.js"}
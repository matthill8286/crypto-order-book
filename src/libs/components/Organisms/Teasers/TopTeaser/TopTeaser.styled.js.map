{"version":3,"sources":["../../../../../src/components/Organisms/Teasers/TopTeaser/TopTeaser.styled.ts"],"names":["Typo","media","spacing","css","styled","StyledHeroFeatureCopy","theme","copy","hero","font","height","weight","maxMd","StyledHeroFeatureIntro","intro","base","sm","textTransform","StyledText","div","md","StyledHeroContentContainer","StyledHeroFeatureSection","xs","StyledFeatureImage","StyledRow","image","color","StyledSection","StyledIconContainer","StyledHeroContainer"],"mappings":"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","sourcesContent":["import { Typo } from '@/components/Atoms/Typography'\nimport { media, spacing } from '@/styles'\nimport { css, styled } from '@/styles'\nimport { ThemeColors } from '@/types'\n\nexport const StyledHeroFeatureCopy = styled(Typo)(({ theme }) => {\n  const { copy } = theme.hero\n\n  return css`\n    line-height: ${copy.font.height};\n    font-weight: ${copy.font.weight};\n    inline-size: fit-content;\n\n    ${media.maxMd} {\n      line-height: 30px;\n    }\n  `\n})\n\nexport const StyledHeroFeatureIntro = styled(Typo)(({ theme }) => {\n  const { intro } = theme.hero\n  const { spacing } = theme\n  return css`\n    padding: ${spacing.base.sm};\n    width: max-content;\n    line-height: ${intro.font.height};\n    font-weight: ${intro.font.weight};\n    text-transform: ${intro.textTransform};\n  `\n})\n\nexport const StyledText = styled.div`\n  position: relative;\n  flex-basis: 100%;\n  flex-wrap: wrap;\n  padding: 0;\n  margin-top: ${spacing.base.sm};\n\n  ${media.md} {\n    flex-basis: calc(50% - 2 * ${spacing.base.md});\n    padding: 0 ${spacing.base.sm};\n    margin-top: 0;\n  }\n`\n\nexport const StyledHeroContentContainer = styled.div`\n  display: flex;\n  flex-basis: 100%;\n  flex-direction: row;\n  padding: ${({ theme }) => theme.spacing.base.md};\n  margin: 0;\n  justify-content: flex-end;\n`\n\nexport const StyledHeroFeatureSection = styled.div`\n  ${({ theme }) => css`\n    position: absolute;\n    top: 50%;\n    left: 20%;\n    width: 65%;\n    padding: ${theme.spacing.base.xs};\n    text-align: center;\n    transform: translate(-20%, -50%);\n\n    ${media.maxMd} {\n      width: 95%;\n    }\n  `}\n`\n\nexport const StyledFeatureImage = styled.div`\n  order: unset;\n  display: flex;\n  padding: 0 ${spacing.base.sm};\n  justify-content: center;\n\n  ${media.md} {\n    flex-basis: calc(50% - 2 * ${spacing.base.md});\n  }\n`\n\nexport const StyledRow = styled.div<{ color?: ThemeColors; image?: string }>`\n  flex-wrap: wrap;\n  display: flex;\n  margin: 0;\n  padding: 0;\n  align-items: center;\n  justify-content: space-around;\n  min-height: 300px;\n  background-image: ${({ image }) => image && `url(${image})`};\n  background-size: 100% 100%;\n  background-color: ${({ theme, color }) => (color ? theme.color[color] : theme.color['white'])};\n`\n\nexport const StyledSection = styled.div`\n  ${({ theme }) => css`\n    position: absolute;\n    top: 50%;\n    left: 25%;\n    width: fit-content;\n    padding: ${theme.spacing.base.xs};\n    text-align: center;\n    transform: translate(-25%, -50%);\n\n    ${media.maxMd} {\n      top: 0;\n      position: relative;\n      left: 0;\n      transform: translate(0, 0);\n    }\n  `}\n`\n\nexport const StyledIconContainer = styled.div`\n  max-width: 100%;\n  height: auto;\n  justify-content: center;\n  display: flex;\n\n  > svg {\n    height: auto;\n  }\n`\n\nexport const StyledHeroContainer = styled.div`\n  display: flex;\n  flex-basis: 100%;\n  flex-direction: row;\n  padding: ${({ theme }) => theme.spacing.base.md};\n  margin: 0;\n\n  ${media.maxMd} {\n    flex-direction: column;\n  }\n`\n"],"file":"TopTeaser.styled.js"}
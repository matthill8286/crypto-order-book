{"version":3,"sources":["../../../../../src/components/Organisms/Teasers/TopTeaser/TopTeaser.test.tsx"],"names":["React","mountWithThemeAndRouter","renderWithThemeAndRouter","TopTeaser","images","sm","md","lg","xl","content","intro","seperator","headline","copy","name","describe","it","tree","to","desktop","mobile","tablet","id","expect","toMatchSnapshot","clickHandler","jest","fn","simulate","toHaveBeenCalled"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,uBAAT,EAAkCC,wBAAlC;AACA,SAASC,SAAT;AAEA,IAAMC,MAAM,GAAG;AACbC,EAAAA,EAAE,EAAE,mCADS;AAEbC,EAAAA,EAAE,EAAE,mCAFS;AAGbC,EAAAA,EAAE,EAAE,oCAHS;AAIbC,EAAAA,EAAE,EAAE;AAJS,CAAf;AAOA,IAAMC,OAAO,GAAG;AACdC,EAAAA,KAAK,EAAE,IADO;AAEdC,EAAAA,SAAS,EAAE,GAFG;AAGdC,EAAAA,QAAQ,EAAE,YAHI;AAIdC,EAAAA,IAAI,EAAE,2BAJQ;AAKdC,EAAAA,IAAI,EAAE;AALQ,CAAhB;AAQAC,QAAQ,CAAC,WAAD,EAAc,YAAM;AAC1BC,EAAAA,EAAE,CAAC,+CAAD,EAAkD,YAAM;AACxD,QAAMC,IAAI,GAAGf,wBAAwB,CACnC,oBAAC,SAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,IAAI,EAAE;AAAEgB,QAAAA,EAAE,EAAE;AAAN,OAFR;AAGE,MAAA,OAAO,EAAET,OAHX;AAIE,MAAA,MAAM,EAAE;AAAEU,QAAAA,OAAO,EAAE,GAAX;AAAgBC,QAAAA,MAAM,EAAE,GAAxB;AAA6BC,QAAAA,MAAM,EAAE;AAArC,OAJV;AAKE,MAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,EAAE,EAAE,CAAN;AAASR,QAAAA,IAAI,EAAE;AAAf,OADM,EAEN;AAAEQ,QAAAA,EAAE,EAAE,CAAN;AAASR,QAAAA,IAAI,EAAE;AAAf,OAFM,CALV;AASE,MAAA,eAAe,EAAC,WATlB;AAUE,MAAA,UAAU,EAAEV;AAVd,MADmC,CAArC;AAcAmB,IAAAA,MAAM,CAACN,IAAD,CAAN,CAAaO,eAAb;AACD,GAhBC,CAAF;AAkBAR,EAAAA,EAAE,CAAC,wBAAD,EAA2B,YAAM;AACjC,QAAMS,YAAY,GAAGC,IAAI,CAACC,EAAL,EAArB;AAEA,QAAMV,IAAI,GAAGhB,uBAAuB,CAClC,oBAAC,SAAD;AACE,MAAA,KAAK,EAAC,SADR;AAEE,MAAA,OAAO,EAAEQ,OAFX;AAGE,MAAA,MAAM,EAAE;AAAEU,QAAAA,OAAO,EAAE,GAAX;AAAgBC,QAAAA,MAAM,EAAE,GAAxB;AAA6BC,QAAAA,MAAM,EAAE;AAArC,OAHV;AAIE,MAAA,IAAI,EAAE;AAAEH,QAAAA,EAAE,EAAE;AAAN,OAJR;AAKE,MAAA,UAAU,EAAEd,MALd;AAME,MAAA,OAAO,EAAEqB;AANX,MADkC,CAApC;AAUAR,IAAAA,IAAI,CAACW,QAAL,CAAc,OAAd;AAEAL,IAAAA,MAAM,CAACE,YAAD,CAAN,CAAqBI,gBAArB;AACD,GAhBC,CAAF;AAiBD,CApCO,CAAR","sourcesContent":["import React from 'react'\nimport { mountWithThemeAndRouter, renderWithThemeAndRouter } from '@/testRenderer'\nimport { TopTeaser } from './TopTeaser'\n\nconst images = {\n  sm: 'public/images/teasers/500x560.jpg',\n  md: 'public/images/teasers/700x560.jpg',\n  lg: 'public/images/teasers/1000x360.jpg',\n  xl: 'public/images/teasers/1200x360.jpg',\n}\n\nconst content = {\n  intro: 'Hi',\n  seperator: ',',\n  headline: 'Welcome to',\n  copy: 'Digital Agility at saiyan',\n  name: 'Matthew',\n}\n\ndescribe('TopTeaser', () => {\n  it('renders correctly: default teaser with badges', () => {\n    const tree = renderWithThemeAndRouter(\n      <TopTeaser\n        color=\"primary\"\n        link={{ to: '#' }}\n        content={content}\n        height={{ desktop: 400, mobile: 350, tablet: 375 }}\n        badges={[\n          { id: 0, name: 'New' },\n          { id: 1, name: '100% Free!' },\n        ]}\n        badgeActionType=\"prominent\"\n        heroImages={images}\n      />\n    )\n    expect(tree).toMatchSnapshot()\n  })\n\n  it('triggers click handler', () => {\n    const clickHandler = jest.fn()\n\n    const tree = mountWithThemeAndRouter(\n      <TopTeaser\n        color=\"primary\"\n        content={content}\n        height={{ desktop: 400, mobile: 350, tablet: 375 }}\n        link={{ to: '#' }}\n        heroImages={images}\n        onClick={clickHandler}\n      />\n    )\n    tree.simulate('click')\n\n    expect(clickHandler).toHaveBeenCalled()\n  })\n})\n"],"file":"TopTeaser.test.js"}
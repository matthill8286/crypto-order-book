{"version":3,"sources":["../../../../../src/components/Organisms/Teasers/TopTeaser/TopTeaser.tsx"],"names":["React","useContext","HeroBanner","Picture","ThemeContext","StyledFeatureImage","StyledHeroContentContainer","StyledHeroFeatureSection","StyledIconContainer","StyledHeroFeatureCopy","StyledHeroFeatureIntro","StyledFeaturedHeading","children","primary","secondary","theme","hero","intro","font","background","copy","copyFont","copyBackground","desktop","size","tablet","mobile","FeaturedImage","svg","images","objectFit","xl","lg","md","sm","FeaturedContent","content","renderIntro","name","renderWithNoPrimary","TopTeaser","badges","heroImages","badgeActionType","color","height","link","onClick"],"mappings":"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","sourcesContent":["import React, { FC, ReactElement, useContext } from 'react'\nimport { HeroBanner } from '../../HeroBanner'\nimport { HeroBannerProps } from '../../HeroBanner/HeroBanner.interface'\nimport { Picture, PictureObjectFit } from '@/components/Atoms/Picture'\nimport { TileImages } from '@/components/Organisms/HeroBanner/HeroBanner.interface'\nimport { FeaturedHeadingProps, FeaturedImageProps, HeroContent } from './TopTeaser.interface'\nimport { ThemeContext } from '@/styles'\nimport {\n  StyledFeatureImage,\n  StyledHeroContentContainer,\n  StyledHeroFeatureSection,\n  StyledIconContainer,\n  StyledHeroFeatureCopy,\n  StyledHeroFeatureIntro,\n} from './TopTeaser.styled'\n\nconst StyledFeaturedHeading: FC<FeaturedHeadingProps> = ({ children, primary, secondary }) => {\n  const theme = useContext(ThemeContext)\n  const { font, background } = theme.hero.intro\n  const { font: copyFont, background: copyBackground } = theme.hero.copy\n  return (\n    <StyledHeroFeatureSection>\n      {primary && (\n        <StyledHeroFeatureIntro\n          textAlign=\"left\"\n          color=\"white\"\n          tag=\"div\"\n          padding=\"0\"\n          fontFamily=\"default\"\n          margin=\"0\"\n          fontSize={{\n            desktop: font.size,\n            tablet: 'sm',\n            mobile: 'xs',\n          }}\n          background={background}\n          toUpperCase>\n          {primary}\n        </StyledHeroFeatureIntro>\n      )}\n      {secondary && (\n        <StyledHeroFeatureCopy\n          textAlign=\"left\"\n          color=\"white\"\n          weight=\"bold\"\n          fontFamily=\"default\"\n          margin=\"0\"\n          tag=\"div\"\n          padding=\"sm\"\n          fontSize={{\n            desktop: copyFont.size,\n            tablet: 'xxxl',\n            mobile: 'xl',\n          }}\n          background={copyBackground}>\n          {secondary}\n        </StyledHeroFeatureCopy>\n      )}\n      {children}\n    </StyledHeroFeatureSection>\n  )\n}\n\nconst FeaturedImage: React.FC<FeaturedImageProps> = ({ svg, images, objectFit }) => {\n  return (\n    <StyledFeatureImage>\n      {images && (\n        <Picture\n          src={images.xl}\n          srcLg={images.lg}\n          srcMd={images.md}\n          srcSm={images.sm}\n          objectFit={'fill' as PictureObjectFit}\n          height=\"100%\"\n          width=\"100%\"\n        />\n      )}\n\n      {svg && <StyledIconContainer>{svg}</StyledIconContainer>}\n    </StyledFeatureImage>\n  )\n}\n\nexport interface FeaturedContentProps {\n  svg?: JSX.Element | ReactElement | undefined\n  content?: HeroContent\n  images?: TileImages | undefined\n}\n\nexport const FeaturedContent: React.FC<FeaturedContentProps> = ({ images, content, svg }) => {\n  const renderIntro = content?.primary ? `Hi ${content.name || ''}, ${content.primary}` : null\n  const renderWithNoPrimary = !content?.name ? content?.primary : renderIntro\n\n  return (\n    <>\n      {(images || svg) && (\n        <StyledHeroContentContainer>\n          <FeaturedImage images={images} svg={svg} />\n        </StyledHeroContentContainer>\n      )}\n      <StyledFeaturedHeading\n        primary={renderWithNoPrimary as HeroContent['primary']}\n        secondary={content?.secondary as HeroContent['secondary']}\n      />\n    </>\n  )\n}\n\nexport const TopTeaser: React.FC<HeroBannerProps & FeaturedContentProps> = ({\n  badges,\n  heroImages,\n  content,\n  svg,\n  badgeActionType,\n  color,\n  images,\n  height,\n  link,\n  onClick,\n}) => {\n  return (\n    <HeroBanner\n      link={link}\n      color={color}\n      height={height}\n      badges={badges}\n      badgeActionType={badgeActionType}\n      heroImages={heroImages}\n      onClick={onClick}>\n      <FeaturedContent content={content} images={images} svg={svg} />\n    </HeroBanner>\n  )\n}\n"],"file":"TopTeaser.js"}
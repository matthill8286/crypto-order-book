{"version":3,"sources":["../../../../../src/components/Organisms/Teasers/AssetTeaser/AssetTeaser.tsx"],"names":["React","useInView","NativeLazyLoadOptions","Picture","Tag","CopyText","Heading","HeadingFeatured","media","ALTERNATE","styled","ThemeConsumer","spacing","StyledBackgroundImage","StyledCard","StyledBadgeWrapper","StyledFlexBottomContainer","StyledInfoContainer","StyledInfoContainerContent","StyledInfoTextContainer","StyledLink","StyledMainContainer","StyledPictureContainer","StyledAssetContainer","StyledRect","StyledTongue","StyledTopTeaserTagWrapper","StyledUpsetRect","StyledWrapper","Badge","StyledFFSaturn","div","theme","name","md","ie11","Info","contentText","tags","limitLines","length","Tags","map","t","index","trim","undefined","Background","backgroundVariant","image","imageDesktop","lazyloadBackgroundImage","hasAsset","triggerOnce","ref","inView","hasQueryParams","indexOf","imageUrl","lazyLoadImage","MainHeading","headline","themeName","AssetTeaser","smallHeadline","background","assetImage","backgroundImage","backgroundImageDesktop","lazyload","elevation","elevationHover","link","fixedImageHeight","onClick","clickableWithoutLink","badges","rest","isClickable","href","to","Boolean","base","xs","Lazy","Eager"],"mappings":";;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AAEA,SAASC,qBAAT,EAAgCC,OAAhC;AACA,SAASC,GAAT;AACA,SAASC,QAAT,EAAmBC,OAAnB,EAA4BC,eAA5B;AACA,SAASC,KAAT,EAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,aAAnC;AACA,SAASC,OAAT;AASA,SACEC,qBADF,EAEEC,UAFF,EAGEC,kBAHF,EAIEC,yBAJF,EAKEC,mBALF,EAMEC,0BANF,EAOEC,uBAPF,EAQEC,UARF,EASEC,mBATF,EAUEC,sBAVF,EAWEC,oBAXF,EAYEC,UAZF,EAaEC,YAbF,EAcEC,yBAdF,EAeEC,eAfF,EAgBEC,aAhBF;AAkBA,SAASC,KAAT;AAEA,IAAMC,cAAc,GAAGpB,MAAM,CAACqB,GAAV;AAAA;AAAA;AAAA,0BAEhB;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SACAA,KAAK,CAACC,IAAN,KAAexB,SAAf,kBAEAD,KAAK,CAAC0B,EAFN,2KAcE1B,KAAK,CAAC2B,IAdR,0DADA;AAAA,CAFgB,CAApB;;AAwBA,IAAMC,IAAkC,GAAG,SAArCA,IAAqC,QAAuC;AAAA,MAApCC,WAAoC,SAApCA,WAAoC;AAAA,MAAvBC,IAAuB,SAAvBA,IAAuB;AAAA,MAAjBC,UAAiB,SAAjBA,UAAiB;AAChF,SACE,oBAAC,uBAAD,QACE,oBAAC,QAAD;AACE,IAAA,QAAQ,EAAC,IADX;AAEE,IAAA,UAAU,EAAC,IAFb;AAGE,IAAA,UAAU,EAAEA,UAAU,GAAGA,UAAH,GAAgBD,IAAI,IAAIA,IAAI,CAACE,MAAL,GAAc,CAAtB,GAA0B,CAA1B,GAA8B,CAHtE;AAIE,IAAA,GAAG,EAAC;AAJN,KAKGH,WALH,CADF,CADF;AAWD,CAZD;;AAcA,IAAMI,IAAkC,GAAG,SAArCA,IAAqC,QAAc;AAAA,MAAXH,IAAW,SAAXA,IAAW;;AACvD,MAAIA,IAAI,IAAIA,IAAI,CAACE,MAAL,GAAc,CAA1B,EAA6B;AAC3B,WACE,oBAAC,yBAAD,QACE,oBAAC,yBAAD;AAA2B,MAAA,UAAU,EAAE;AAAvC,OACGF,IAAI,CAACI,GAAL,CAAS,UAACC,CAAD,EAAIC,KAAJ,EAAc;AACtB,aAAOD,CAAC,IAAIA,CAAC,CAACE,IAAF,GAASL,MAAT,GAAkB,CAAvB,GACL,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAE,SAASG,CAAT,GAAaC,KAAvB;AAA8B,QAAA,IAAI,EAAED,CAApC;AAAuC,QAAA,YAAY,MAAnD;AAAoD,QAAA,WAAW;AAA/D,QADK,GAGLG,SAHF;AAKD,KANA,CADH,CADF,CADF;AAaD,GAdD,MAcO;AACL,WAAO,IAAP;AACD;AACF,CAlBD;;AAoBA,IAAMC,UAA8C,GAAG,SAAjDA,UAAiD,QAOjD;AAAA,MANJC,iBAMI,SANJA,iBAMI;AAAA,MALJC,KAKI,SALJA,KAKI;AAAA,MAJJC,YAII,SAJJA,YAII;AAAA,MAHJC,uBAGI,SAHJA,uBAGI;AAAA,MAFJC,QAEI,SAFJA,QAEI;AAAA,MADJpB,KACI,SADJA,KACI;;AAAA,mBACkB/B,SAAS,CAAC;AAC9BoD,IAAAA,WAAW,EAAE;AADiB,GAAD,CAD3B;AAAA;AAAA,MACGC,GADH;AAAA,MACQC,MADR;;AAIJ,MAAMC,cAAc,GAAG,CAAAP,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEQ,OAAP,CAAe,GAAf,OAAwB,CAAC,CAAhD;AACA,MAAMC,QAAQ,GAAGR,YAAY,GAAGA,YAAH,GAAkBD,KAA/C;AAEA,MAAMU,aAAa,GAAGD,QAAQ,aAAMA,QAAN,SAAiBF,cAAc,GAAG,GAAH,GAAS,GAAxC,WAAmDV,SAAjF;;AAEA,MAAId,KAAK,KAAKvB,SAAd,EAAyB;AACvB,WACE,oBAAC,UAAD;AACE,MAAA,GAAG,EAAE6C,GADP;AAEE,MAAA,KAAK,EAAEI,QAFT;AAGE,MAAA,MAAM,EAAEH,MAHV;AAIE,MAAA,aAAa,EAAEI,aAJjB;AAKE,MAAA,QAAQ,EAAEP,QALZ;AAME,MAAA,uBAAuB,EAAED;AAN3B,MADF;AAUD,GAXD,MAWO;AACL,YAAQH,iBAAR;AACE,WAAK,QAAL;AACE,eACE,oBAAC,YAAD;AAAc,UAAA,GAAG,EAAEM,GAAnB;AAAwB,UAAA,MAAM,EAAE;AAAhC,WACE,oBAAC,qBAAD;AACE,UAAA,KAAK,EAAEI,QADT;AAEE,UAAA,MAAM,EAAEH,MAFV;AAGE,UAAA,aAAa,EAAEI,aAHjB;AAIE,UAAA,QAAQ,EAAEP,QAJZ;AAKE,UAAA,uBAAuB,EAAED;AAL3B,UADF,CADF;;AAWF,WAAK,WAAL;AACE,eAAO,oBAAC,eAAD;AAAiB,UAAA,GAAG,EAAEG,GAAtB;AAA2B,UAAA,KAAK,EAAEI,QAAlC;AAA4C,UAAA,QAAQ,EAAEN;AAAtD,UAAP;;AACF,WAAK,MAAL;AACE,eACE,oBAAC,UAAD;AACE,UAAA,GAAG,EAAEE,GADP;AAEE,UAAA,KAAK,EAAEI,QAFT;AAGE,UAAA,MAAM,EAAEH,MAHV;AAIE,UAAA,aAAa,EAAEI,aAJjB;AAKE,UAAA,QAAQ,EAAEP,QALZ;AAME,UAAA,uBAAuB,EAAED;AAN3B,UADF;AAhBJ;AA2BD;AACF,CAxDD;;AA0DA,IAAMS,WAAgD,GAAG,SAAnDA,WAAmD;AAAA,MAAGC,QAAH,SAAGA,QAAH;AAAA,MAAaC,SAAb,SAAaA,SAAb;AAAA,MAAwBvB,UAAxB,SAAwBA,UAAxB;AAAA,SACvD,oBAAC,eAAD;AAAiB,IAAA,WAAW,EAAEuB,SAAS,KAAKrD,SAA5C;AAAuD,IAAA,UAAU,EAAE8B;AAAnE,KACGsB,QADH,CADuD;AAAA,CAAzD;;AAMA,OAAO,IAAME,WAAqC,GAAG,SAAxCA,WAAwC,QAqB/C;AAAA,MApBJC,aAoBI,SApBJA,aAoBI;AAAA,+BAnBJC,UAmBI;AAAA,MAnBJA,UAmBI,iCAnBS,MAmBT;AAAA,MAlBJJ,QAkBI,SAlBJA,QAkBI;AAAA,MAjBJxB,WAiBI,SAjBJA,WAiBI;AAAA,MAhBJ6B,UAgBI,SAhBJA,UAgBI;AAAA,MAfJC,eAeI,SAfJA,eAeI;AAAA,MAdJC,sBAcI,SAdJA,sBAcI;AAAA,MAbJC,QAaI,SAbJA,QAaI;AAAA,MAZJlB,uBAYI,SAZJA,uBAYI;AAAA,MAXJb,IAWI,SAXJA,IAWI;AAAA,MAVJC,UAUI,SAVJA,UAUI;AAAA,oCATJS,iBASI;AAAA,MATJA,iBASI,sCATgB,WAShB;AAAA,8BARJsB,SAQI;AAAA,MARJA,SAQI,gCARQ,CAQR;AAAA,MAPJC,cAOI,SAPJA,cAOI;AAAA,MANJC,IAMI,SANJA,IAMI;AAAA,oCALJC,gBAKI;AAAA,MALJA,gBAKI,sCALe,KAKf;AAAA,MAJJC,OAII,SAJJA,OAII;AAAA,oCAHJC,oBAGI;AAAA,MAHJA,oBAGI,sCAHmB,IAGnB;AAAA,MAFJC,MAEI,SAFJA,MAEI;AAAA,MADDC,IACC;;AACJ,MAAMC,WAAW,GAAI,CAAC,CAACJ,OAAF,IAAaC,oBAAd,IAAuC,CAAC,EAACH,IAAD,aAACA,IAAD,eAACA,IAAI,CAAEO,IAAP,CAA5D;AACA,SACE,oBAAC,aAAD,QACG,UAAC/C,KAAD,EAAmB;AAClB,WACE,oBAAC,UAAD;AAAY,MAAA,EAAE,EAAEwC,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEQ,EAAtB;AAA0B,MAAA,IAAI,EAAER,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEO,IAAtC;AAA4C,MAAA,OAAO,EAAEL,OAArD;AAA8D,MAAA,SAAS,EAAE;AAAzE,OACE,oBAAC,aAAD,QACE,oBAAC,UAAD;AACE,MAAA,SAAS,EAAEJ,SADb;AAEE,MAAA,cAAc,EAAEC,cAFlB;AAGE,MAAA,OAAO,EAAC,MAHV;AAIE,MAAA,UAAU,MAJZ;AAKE,MAAA,QAAQ,EAAE,MALZ;AAME,MAAA,OAAO,EAAEN,UANX;AAOE,MAAA,MAAM,EAAE;AAPV,OAQMY,IARN,GASE,oBAAC,mBAAD;AAAqB,MAAA,WAAW,EAAEC;AAAlC,OACE,oBAAC,mBAAD;AACE,MAAA,iBAAiB,EAAE9B,iBADrB;AAEE,MAAA,OAAO,EAAE,CAAC,CAACV,IAAF,IAAUA,IAAI,CAACE,MAAL,GAAc,CAFnC;AAGE,MAAA,QAAQ,EAAE,CAAC,CAAC0B;AAHd,OAIGU,MAAM,IAAIA,MAAM,CAACpC,MAAP,GAAgB,CAA1B,IACC,oBAAC,kBAAD,QACE,oBAAC,KAAD;AAAO,MAAA,UAAU,EAAC,WAAlB;AAA8B,MAAA,MAAM,EAAEoC;AAAtC,MADF,CALJ,EASE,oBAAC,0BAAD;AAA4B,MAAA,SAAS,EAAEK,OAAO,CAACL,MAAM,IAAIA,MAAM,CAACpC,MAAP,GAAgB,CAA3B;AAA9C,OACGwB,aAAa,IACZ,oBAAC,OAAD;AACE,MAAA,GAAG,EAAC,GADN;AAEE,MAAA,KAAK,EAAC,SAFR;AAGE,MAAA,MAAM,EAAC,UAHT;AAIE,MAAA,UAAU,EAAC,IAJb;AAKE,MAAA,UAAU,EAAE,CALd;AAME,MAAA,UAAU,EAAE,CAAAhC,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEC,IAAP,MAAgBxB,SAAhB,GAA4B,OAA5B,GAAsC,OANpD;AAOE,MAAA,MAAM,gBAASG,OAAO,CAACsE,IAAR,CAAaC,EAAtB,OAPR;AAQE,MAAA,SAAS;AARX,OASGnB,aATH,CAFJ,EAcE,oBAAC,WAAD;AAAa,MAAA,QAAQ,EAAEH,QAAvB;AAAiC,MAAA,SAAS,EAAE7B,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEC,IAAnD;AAAyD,MAAA,UAAU,EAAE;AAArE,MAdF,EAeE,oBAAC,IAAD;AAAM,MAAA,WAAW,EAAEI,WAAnB;AAAgC,MAAA,IAAI,EAAEC,IAAtC;AAA4C,MAAA,UAAU,EAAEC;AAAxD,MAfF,EAgBE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAED;AAAZ,MAhBF,CATF,CADF,EA6BE,oBAAC,oBAAD;AAAsB,MAAA,gBAAgB,EAAEmC;AAAxC,OACE,oBAAC,UAAD;AACE,MAAA,KAAK,EAAEN,eADT;AAEE,MAAA,YAAY,EAAEC,sBAFhB;AAGE,MAAA,uBAAuB,EAAEjB,uBAH3B;AAIE,MAAA,iBAAiB,EAAEH,iBAJrB;AAKE,MAAA,QAAQ,EAAE,CAAC,CAACkB,UALd;AAME,MAAA,KAAK,EAAElC,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEC;AANhB,MADF,EASGiC,UAAU,IACT,oBAAC,sBAAD,QACE,oBAAC,OAAD;AACE,MAAA,GAAG,EAAEA,UADP;AAEE,MAAA,MAAM,EAAC,MAFT;AAGE,MAAA,OAAO,EACLG,QAAQ,GAAGnE,qBAAqB,CAACkF,IAAzB,GAAgClF,qBAAqB,CAACmF;AAJlE,MADF,CAVJ,CA7BF,CATF,CADF,CADF,CADF;AAmED,GArEH,CADF;AAyED,CAhGM","sourcesContent":["import React from 'react'\nimport { useInView } from 'react-intersection-observer'\nimport { Surface } from '@/components/Atoms/Card'\nimport { NativeLazyLoadOptions, Picture } from '@/components/Atoms/Picture'\nimport { Tag } from '@/components/Atoms/Tag'\nimport { CopyText, Heading, HeadingFeatured } from '@/components/Atoms/Typography'\nimport { media, ALTERNATE, styled, ThemeConsumer } from '@/styles'\nimport { spacing } from '@/styles/sc-vars-global'\nimport { Theme } from '@/types/theme'\nimport {\n  TopTeaserBackgroundProps,\n  TopTeaserInfoProps,\n  TopTeaserMainHeadingProps,\n  TopTeaserProps,\n  TopTeaserTagsProps,\n} from './AssetTeaser.interface'\nimport {\n  StyledBackgroundImage,\n  StyledCard,\n  StyledBadgeWrapper,\n  StyledFlexBottomContainer,\n  StyledInfoContainer,\n  StyledInfoContainerContent,\n  StyledInfoTextContainer,\n  StyledLink,\n  StyledMainContainer,\n  StyledPictureContainer,\n  StyledAssetContainer,\n  StyledRect,\n  StyledTongue,\n  StyledTopTeaserTagWrapper,\n  StyledUpsetRect,\n  StyledWrapper,\n} from './AssetTeaser.styled'\nimport { Badge } from '@/components/Atoms/Badge'\n\nconst StyledFFSaturn = styled.div`\n  display: none;\n  ${({ theme }) =>\n    theme.name === ALTERNATE &&\n    `\n  ${media.md} {\n    display: block;\n  }\n\n  > svg {\n    position: absolute;\n    left: -1px;\n    top: 0;\n    z-index: 1;\n    height: 100%;\n    width: auto;\n\n    ${media.ie11} {\n      width: 100px;\n      top: -7px;\n    }\n  }`}\n`\n\nconst Info: React.FC<TopTeaserInfoProps> = ({ contentText, tags, limitLines }) => {\n  return (\n    <StyledInfoTextContainer>\n      <CopyText\n        fontSize=\"sm\"\n        lineHeight=\"sm\"\n        limitLines={limitLines ? limitLines : tags && tags.length > 0 ? 3 : 5}\n        tag=\"span\">\n        {contentText}\n      </CopyText>\n    </StyledInfoTextContainer>\n  )\n}\n\nconst Tags: React.FC<TopTeaserTagsProps> = ({ tags }) => {\n  if (tags && tags.length > 0) {\n    return (\n      <StyledFlexBottomContainer>\n        <StyledTopTeaserTagWrapper limitLines={2}>\n          {tags.map((t, index) => {\n            return t && t.trim().length > 0 ? (\n              <Tag key={'Tag_' + t + index} text={t} marginBottom marginRight />\n            ) : (\n              undefined\n            )\n          })}\n        </StyledTopTeaserTagWrapper>\n      </StyledFlexBottomContainer>\n    )\n  } else {\n    return null\n  }\n}\n\nconst Background: React.FC<TopTeaserBackgroundProps> = ({\n  backgroundVariant,\n  image,\n  imageDesktop,\n  lazyloadBackgroundImage,\n  hasAsset,\n  theme,\n}) => {\n  const [ref, inView] = useInView({\n    triggerOnce: true,\n  })\n  const hasQueryParams = image?.indexOf('?') !== -1\n  const imageUrl = imageDesktop ? imageDesktop : image\n\n  const lazyLoadImage = imageUrl ? `${imageUrl}${hasQueryParams ? '&' : '?'}q=1` : undefined\n\n  if (theme === ALTERNATE) {\n    return (\n      <StyledRect\n        ref={ref}\n        image={imageUrl}\n        inView={inView}\n        lazyLoadImage={lazyLoadImage}\n        hasAsset={hasAsset}\n        lazyloadBackgroundImage={lazyloadBackgroundImage}\n      />\n    )\n  } else {\n    switch (backgroundVariant) {\n      case 'tongue':\n        return (\n          <StyledTongue ref={ref} height={140}>\n            <StyledBackgroundImage\n              image={imageUrl}\n              inView={inView}\n              lazyLoadImage={lazyLoadImage}\n              hasAsset={hasAsset}\n              lazyloadBackgroundImage={lazyloadBackgroundImage}\n            />\n          </StyledTongue>\n        )\n      case 'upsetRect':\n        return <StyledUpsetRect ref={ref} image={imageUrl} hasAsset={hasAsset} />\n      case 'rect':\n        return (\n          <StyledRect\n            ref={ref}\n            image={imageUrl}\n            inView={inView}\n            lazyLoadImage={lazyLoadImage}\n            hasAsset={hasAsset}\n            lazyloadBackgroundImage={lazyloadBackgroundImage}\n          />\n        )\n    }\n  }\n}\n\nconst MainHeading: React.FC<TopTeaserMainHeadingProps> = ({ headline, themeName, limitLines }) => (\n  <HeadingFeatured fixedMdSize={themeName === ALTERNATE} limitLines={limitLines}>\n    {headline}\n  </HeadingFeatured>\n)\n\nexport const AssetTeaser: React.FC<TopTeaserProps> = ({\n  smallHeadline,\n  background = 'grey',\n  headline,\n  contentText,\n  assetImage,\n  backgroundImage,\n  backgroundImageDesktop,\n  lazyload,\n  lazyloadBackgroundImage,\n  tags,\n  limitLines,\n  backgroundVariant = 'upsetRect',\n  elevation = 0,\n  elevationHover,\n  link,\n  fixedImageHeight = false,\n  onClick,\n  clickableWithoutLink = true,\n  badges,\n  ...rest\n}) => {\n  const isClickable = (!!onClick && clickableWithoutLink) || !!link?.href\n  return (\n    <ThemeConsumer>\n      {(theme?: Theme) => {\n        return (\n          <StyledLink to={link?.to} href={link?.href} onClick={onClick} underline={false}>\n            <StyledWrapper>\n              <StyledCard\n                elevation={elevation}\n                elevationHover={elevationHover}\n                display=\"flex\"\n                fullHeight\n                noBorder={'none'}\n                surface={background as Surface}\n                badges={[]}\n                {...rest}>\n                <StyledMainContainer isClickable={isClickable}>\n                  <StyledInfoContainer\n                    backgroundVariant={backgroundVariant}\n                    hasTags={!!tags && tags.length > 0}\n                    hasAsset={!!assetImage}>\n                    {badges && badges.length > 0 && (\n                      <StyledBadgeWrapper>\n                        <Badge actionType=\"secondary\" badges={badges} />\n                      </StyledBadgeWrapper>\n                    )}\n                    <StyledInfoContainerContent hasBadges={Boolean(badges && badges.length > 0)}>\n                      {smallHeadline && (\n                        <Heading\n                          tag=\"p\"\n                          scale=\"level-5\"\n                          weight=\"semibold\"\n                          lineHeight=\"sm\"\n                          limitLines={1}\n                          limitWidth={theme?.name === ALTERNATE ? '300px' : '350px'}\n                          margin={`0 0 ${spacing.base.xs} 0`}\n                          uppercase>\n                          {smallHeadline}\n                        </Heading>\n                      )}\n                      <MainHeading headline={headline} themeName={theme?.name} limitLines={2} />\n                      <Info contentText={contentText} tags={tags} limitLines={limitLines} />\n                      <Tags tags={tags} />\n                    </StyledInfoContainerContent>\n                  </StyledInfoContainer>\n                  <StyledAssetContainer fixedImageHeight={fixedImageHeight}>\n                    <Background\n                      image={backgroundImage}\n                      imageDesktop={backgroundImageDesktop}\n                      lazyloadBackgroundImage={lazyloadBackgroundImage}\n                      backgroundVariant={backgroundVariant}\n                      hasAsset={!!assetImage}\n                      theme={theme?.name}\n                    />\n                    {assetImage && (\n                      <StyledPictureContainer>\n                        <Picture\n                          src={assetImage}\n                          height=\"100%\"\n                          loading={\n                            lazyload ? NativeLazyLoadOptions.Lazy : NativeLazyLoadOptions.Eager\n                          }\n                        />\n                      </StyledPictureContainer>\n                    )}\n                  </StyledAssetContainer>\n                </StyledMainContainer>\n              </StyledCard>\n            </StyledWrapper>\n          </StyledLink>\n        )\n      }}\n    </ThemeConsumer>\n  )\n}\n"],"file":"AssetTeaser.js"}
{"version":3,"sources":["../../../../../src/components/Organisms/Teasers/Teaser/Teaser.tsx"],"names":["React","useState","useHistory","Card","Foldable","Icon","Link","Picture","SkeletonBlockItem","SkeletonInlineItem","CopyText","HeadingFeatured","useWindowDimensions","DANONE","breakpoints","IconArrow","isAlternateTheme","useTheme","useGraphCmsImages","isPortrait","StyledContentContainer","StyledDummyLink","StyledHeadingContainer","StyledIcon","StyledInfoTextChildren","StyledInfoTextContainer","StyledLinkContainer","StyledLinkListContainer","StyledLinkListItemSpace","StyledPictureContainer","StyledResponsiveContainer","StyledTeaser","StyledTextLinkContainer","DEFAULT_LINE_LIMIT","Image","image","withImagePadding","orientation","loading","alt","MainHeading","headline","headlineLimitLines","name","undefined","MainLink","color","decorationColor","dummyMainLink","isSmall","mainLink","label","kindOfLink","to","href","Chevron","isAlternate","isFoldable","isOpen","ContentText","contentText","children","currentBreakpoint","breakpoint","isMobile","sm","LinkList","linkList","length","linkComponents","Array","i","l","push","FoldableWrapper","Teaser","badgeActionType","badges","borderColor","elevation","elevationHover","foldable","growHeadline","icon","altText","lazyloadLowQuality","onClick","contentful","rest","history","setOpen","hasLinkList","onTeaserClick","useCallback","event","window","location","onHeadingClick","finalImages","ref"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nimport { useHistory } from 'react-router-dom'\nimport { Card } from '@/components/Atoms/Card'\nimport { Foldable } from '@/components/Atoms/Foldable'\nimport { Icon } from '@/components/Atoms/Icon'\nimport { Link } from '@/components/Atoms/Link'\nimport { Picture } from '@/components/Atoms/Picture'\nimport { SkeletonBlockItem, SkeletonInlineItem } from '@/components/Atoms/Skeleton'\nimport { CopyText, HeadingFeatured } from '@/components/Atoms/Typography'\nimport { useWindowDimensions } from '@/components/Helper/useWindowDimensions'\nimport { DANONE } from '@/styles'\nimport { breakpoints } from '@/styles/sc-vars-global'\nimport { IconArrow } from '@matthill8286/atomic-icon-library'\nimport { isAlternateTheme, useTheme } from '@/utils/helper'\n\nimport { useGraphCmsImages } from '@/utils/useGraphCmsImages'\nimport {\n  ChevronProps,\n  TeaserContentTextProps,\n  FoldableWrapperProps,\n  TeaserHeadingProps,\n  ImageProps,\n  LinkListProps,\n  MainLinkProps,\n  TeaserProps,\n} from './Teaser.interface'\nimport {\n  isPortrait,\n  StyledContentContainer,\n  StyledDummyLink,\n  StyledHeadingContainer,\n  StyledIcon,\n  StyledInfoTextChildren,\n  StyledInfoTextContainer,\n  StyledLinkContainer,\n  StyledLinkListContainer,\n  StyledLinkListItemSpace,\n  StyledPictureContainer,\n  StyledResponsiveContainer,\n  StyledTeaser,\n  StyledTextLinkContainer,\n} from './Teaser.styled'\n\nconst DEFAULT_LINE_LIMIT = 2\n\nconst Image: React.FC<ImageProps> = ({ image, withImagePadding, orientation, loading, alt }) => {\n  if (image) {\n    return (\n      <StyledPictureContainer withImagePadding={withImagePadding} orientation={orientation}>\n        {loading ? (\n          <SkeletonBlockItem height=\"100%\" width=\"100%\" />\n        ) : (\n          <Picture\n            alt={alt}\n            src={image}\n            height=\"100%\"\n            width=\"100%\"\n            objectFit={withImagePadding ? 'contain' : 'cover'}\n          />\n        )}\n      </StyledPictureContainer>\n    )\n  }\n  return null\n}\n\nconst MainHeading: React.FC<TeaserHeadingProps> = ({\n  headline,\n  headlineLimitLines = DEFAULT_LINE_LIMIT,\n  loading,\n  orientation,\n}) => {\n  const { name } = useTheme()\n  if (loading) {\n    return <SkeletonInlineItem fontSize=\"xl\" length={15} />\n  }\n  return (\n    <HeadingFeatured\n      fixedMdSize={name === DANONE}\n      fixedSize={isPortrait(orientation) ? 'xl' : undefined}\n      limitLines={headlineLimitLines}>\n      {headline}\n    </HeadingFeatured>\n  )\n}\n/**\n * Renders the mainLink only if link and link label is given.\n */\nconst MainLink: React.FC<MainLinkProps> = ({\n  color,\n  decorationColor,\n  dummyMainLink = false,\n  isSmall,\n  loading,\n  mainLink,\n}) => {\n  if (mainLink && mainLink.label) {\n    const kindOfLink = mainLink.to ? { to: mainLink.to } : { href: mainLink.href }\n    return loading ? (\n      <StyledTextLinkContainer isSmall={isSmall}>\n        <SkeletonBlockItem height=\"20px\" width=\"100px\" />\n      </StyledTextLinkContainer>\n    ) : (\n      <StyledTextLinkContainer isSmall={isSmall}>\n        <Link\n          fontSize=\"sm\"\n          iconLeft={\n            <Icon color={decorationColor || 'primary'}>\n              <IconArrow />\n            </Icon>\n          }\n          scale=\"small\"\n          {...(decorationColor && { decorationColor })}\n          {...(color && { color })}\n          {...kindOfLink}>\n          {mainLink.label}\n        </Link>\n      </StyledTextLinkContainer>\n    )\n  } else if (dummyMainLink) {\n    return <StyledDummyLink>{'\\u00A0'}</StyledDummyLink>\n  }\n\n  return null\n}\n\n/**\n * Renders a Chevron for foldable or main link.\n * Renders the mainLink only without a link label. If link label is set, nothing will be rendered.\n */\nconst Chevron: React.FC<ChevronProps> = ({\n  isAlternate,\n  isFoldable,\n  isOpen,\n  isSmall = true,\n  mainLink,\n}) => {\n  if (isFoldable) {\n    return (\n      <StyledLinkContainer isSmall={isSmall}>\n        <StyledIcon\n          height=\"sm\"\n          width=\"sm\"\n          color={isAlternate ? 'grey4' : 'primary'}\n          rotate={isOpen ? 0 : 180}\n          isSmall={isSmall}\n          hasMarginLeft>\n          <IconArrow />\n        </StyledIcon>\n      </StyledLinkContainer>\n    )\n  } else if (mainLink && !mainLink.label && (mainLink.to || mainLink.href)) {\n    return (\n      <StyledLinkContainer isSmall={isSmall}>\n        <StyledIcon height=\"sm\" width=\"sm\" color=\"primary\" isSmall={isSmall} hasMarginLeft>\n          <IconArrow />\n        </StyledIcon>\n      </StyledLinkContainer>\n    )\n  } else {\n    return null\n  }\n}\n\nconst ContentText: React.FC<TeaserContentTextProps> = ({ contentText, children, loading }) => {\n  const { breakpoint: currentBreakpoint } = useWindowDimensions()\n  const isMobile = currentBreakpoint < breakpoints.sm\n\n  if (loading) {\n    return (\n      <React.Fragment>\n        <SkeletonInlineItem margin=\"md 0 xxs\" />\n        <SkeletonBlockItem height=\"20px\" width=\"200px\" />\n      </React.Fragment>\n    )\n  }\n\n  if (contentText || children) {\n    return (\n      <StyledInfoTextContainer>\n        {contentText && (\n          <CopyText\n            limitLines={5}\n            fontSize=\"sm\"\n            lineHeight={isMobile ? 'xs' : 'sm'}\n            margin=\"sm 0 0 0\">\n            {contentText}\n          </CopyText>\n        )}\n        {children && <StyledInfoTextChildren>{children}</StyledInfoTextChildren>}\n      </StyledInfoTextContainer>\n    )\n  } else {\n    return null\n  }\n}\n\nconst LinkList: React.FC<LinkListProps> = ({ linkList }) => {\n  if (linkList && linkList.length > 0) {\n    const linkComponents = new Array<React.ReactElement>()\n\n    for (let i = 0; i < linkList.length; i++) {\n      const l = linkList[i]\n\n      // add space between the links\n      if (i > 0) {\n        linkComponents.push(<StyledLinkListItemSpace key={'space_' + l.label} />)\n      }\n\n      // add link\n      linkComponents.push(\n        <Link key={l.label + '_' + l.to} scale=\"large\" to={l.to}>\n          {l.label}\n        </Link>\n      )\n    }\n\n    return <StyledLinkListContainer>{linkComponents}</StyledLinkListContainer>\n  } else {\n    return null\n  }\n}\n\nconst FoldableWrapper: React.FC<FoldableWrapperProps> = ({ children, isFoldable, isOpen }) => {\n  if (isFoldable) {\n    return <Foldable isOpen={isOpen}>{children}</Foldable>\n  } else {\n    return <>{children}</>\n  }\n}\n\nexport const Teaser: React.FC<TeaserProps> = ({\n  badgeActionType,\n  badges,\n  children,\n  color,\n  contentText,\n  decorationColor,\n  borderColor,\n  dummyMainLink = false,\n  elevation = 0,\n  elevationHover = 4,\n  foldable = 'never',\n  growHeadline = false,\n  headline,\n  headlineLimitLines = DEFAULT_LINE_LIMIT,\n  icon,\n  image,\n  altText,\n  lazyloadLowQuality = false,\n  linkList,\n  loading = false,\n  mainLink,\n  onClick,\n  orientation = 'auto',\n  withImagePadding = false,\n  contentful = false,\n  ...rest\n}) => {\n  const { breakpoint: currentBreakpoint } = useWindowDimensions()\n  const history = useHistory()\n  const isMobile = currentBreakpoint < breakpoints.sm\n  const isFoldable = foldable === 'always' || (foldable === 'mobile' && isMobile)\n  const [isOpen, setOpen] = useState(!isFoldable)\n  const hasLinkList: boolean = !!linkList && linkList.length > 0\n  const isAlternate = isAlternateTheme()\n\n  const onTeaserClick = React.useCallback(\n    (event: React.MouseEvent) => {\n      if (typeof onClick === 'function') {\n        onClick(event)\n      }\n\n      if (isFoldable && !isOpen) {\n        setOpen(true)\n        return\n      }\n\n      if (isFoldable && isOpen && (!mainLink || !mainLink.label) && !hasLinkList) {\n        // close only if there is no link inside\n        setOpen(false)\n        return\n      }\n\n      if (!isFoldable && mainLink) {\n        // navigate to mainLink\n        if (mainLink.to) return history.push(mainLink.to)\n        if (mainLink.href) return (window.location.href = mainLink.href)\n      }\n    },\n    [hasLinkList, history, isFoldable, isOpen, mainLink, onClick, setOpen]\n  )\n\n  const onHeadingClick = React.useCallback(() => {\n    if (isFoldable && isOpen) {\n      setOpen(false)\n    }\n  }, [isFoldable, isOpen, setOpen])\n\n  const [finalImages, ref] = useGraphCmsImages([image], !lazyloadLowQuality)\n\n  return (\n    <StyledTeaser\n      ref={ref}\n      onClick={onTeaserClick}\n      hasLinkList={hasLinkList}\n      isOpen={isOpen}\n      orientation={orientation}\n      {...rest}>\n      <Card\n        elevation={elevation}\n        elevationHover={hasLinkList ? 0 : elevationHover}\n        shape=\"rounded-big\"\n        display=\"flex\"\n        badges={badges}\n        borderColor={borderColor}\n        badgeActionType={badgeActionType}>\n        <StyledResponsiveContainer orientation={orientation}>\n          <Image\n            image={finalImages[0]}\n            withImagePadding={withImagePadding}\n            orientation={orientation}\n            loading={loading}\n            alt={altText}\n          />\n          <StyledContentContainer>\n            <StyledHeadingContainer onClick={onHeadingClick} growHeadline={growHeadline}>\n              <MainHeading\n                headline={headline}\n                headlineLimitLines={headlineLimitLines}\n                loading={loading}\n                orientation={orientation}\n              />\n              <Chevron\n                isAlternate={isAlternate}\n                isFoldable={isFoldable}\n                isOpen={isOpen}\n                mainLink={mainLink}\n              />\n            </StyledHeadingContainer>\n            {icon && (\n              <StyledIcon color=\"primary\" hasMarginTop>\n                {icon}\n              </StyledIcon>\n            )}\n            <FoldableWrapper isFoldable={isFoldable} isOpen={isOpen}>\n              <ContentText contentText={contentText} loading={loading}>\n                {children}\n              </ContentText>\n              <LinkList linkList={linkList} />\n              <MainLink\n                color={color}\n                decorationColor={decorationColor}\n                dummyMainLink={dummyMainLink}\n                loading={loading}\n                mainLink={mainLink}\n              />\n            </FoldableWrapper>\n          </StyledContentContainer>\n        </StyledResponsiveContainer>\n      </Card>\n    </StyledTeaser>\n  )\n}\n"],"file":"Teaser.js"}
{"version":3,"sources":["../../../../src/components/Organisms/PlaylistStage/PlaylistStage.test.tsx"],"names":["React","Link","mountWithTheme","renderWithTheme","PlaylistStage","backlink","props","StyledBacklinkWrapper","describe","test","skip","tree","expect","toMatchSnapshot","wrapper","find","toHaveLength","link","prop","toEqual","contains","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT;AACA,SAASC,cAAT,EAAyBC,eAAzB;AACA,SAASC,aAAT;AACA,SAASC,QAAT,EAAmBC,KAAnB;AACA,SAASC,qBAAT;AAEAC,QAAQ,CAAC,mBAAD,EAAsB,YAAM;AAClCC,EAAAA,IAAI,CAACC,IAAL,CAAU,uBAAV,EAAmC,YAAM;AACvC,QAAMC,IAAI,GAAGR,eAAe,CAAC,oBAAC,aAAD,EAAmBG,KAAnB,CAAD,CAA5B;AACAM,IAAAA,MAAM,CAACD,IAAD,CAAN,CAAaE,eAAb;AACD,GAHD;AAKAL,EAAAA,QAAQ,CAAC,UAAD,EAAa,YAAM;AACzBC,IAAAA,IAAI,CAAC,6BAAD,EAAgC,YAAM;AACxC,UAAMK,OAAO,GAAGZ,cAAc,CAAC,oBAAC,aAAD,EAAmBI,KAAnB,CAAD,CAA9B;AACAM,MAAAA,MAAM,CAACE,OAAO,CAACC,IAAR,CAAaR,qBAAb,CAAD,CAAN,CAA4CS,YAA5C,CAAyD,CAAzD;AACD,KAHG,CAAJ;AAKAP,IAAAA,IAAI,CAAC,+CAAD,EAAkD,YAAM;AAC1D,UAAMK,OAAO,GAAGZ,cAAc,CAAC,oBAAC,aAAD,eAAmBI,KAAnB;AAA0B,QAAA,QAAQ,EAAED;AAApC,SAAD,CAA9B;AAEAO,MAAAA,MAAM,CAACE,OAAO,CAACC,IAAR,CAAaR,qBAAb,CAAD,CAAN,CAA4CS,YAA5C,CAAyD,CAAzD;AACA,UAAMC,IAAI,GAAGH,OAAO,CAACC,IAAR,CAAaR,qBAAb,EAAoCQ,IAApC,CAAyCd,IAAzC,CAAb;AACAW,MAAAA,MAAM,CAACK,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEC,IAAN,CAAW,MAAX,CAAD,CAAN,CAA2BC,OAA3B,CAAmCd,QAAQ,CAACY,IAA5C;AACAL,MAAAA,MAAM,CAACK,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEG,QAAN,CAAef,QAAQ,CAACgB,IAAxB,CAAD,CAAN,CAAsCF,OAAtC,CAA8C,IAA9C;AACD,KAPG,CAAJ;AAQD,GAdO,CAAR;AAeD,CArBO,CAAR","sourcesContent":["import React from 'react'\nimport { Link } from '@/components/Atoms/Link'\nimport { mountWithTheme, renderWithTheme } from '@/testRenderer'\nimport { PlaylistStage } from './PlaylistStage'\nimport { backlink, props } from './PlaylistStage.mocks'\nimport { StyledBacklinkWrapper } from './PlaylistStage.styled'\n\ndescribe('<PlaylistStage />', () => {\n  test.skip('Renders without error', () => {\n    const tree = renderWithTheme(<PlaylistStage {...props} />)\n    expect(tree).toMatchSnapshot()\n  })\n\n  describe('Backlink', () => {\n    test('should be hidden by default', () => {\n      const wrapper = mountWithTheme(<PlaylistStage {...props} />)\n      expect(wrapper.find(StyledBacklinkWrapper)).toHaveLength(0)\n    })\n\n    test('should be visible when backlink prop provided', () => {\n      const wrapper = mountWithTheme(<PlaylistStage {...props} backlink={backlink} />)\n\n      expect(wrapper.find(StyledBacklinkWrapper)).toHaveLength(1)\n      const link = wrapper.find(StyledBacklinkWrapper).find(Link)\n      expect(link?.prop('href')).toEqual(backlink.link)\n      expect(link?.contains(backlink.name)).toEqual(true)\n    })\n  })\n})\n"],"file":"PlaylistStage.test.js"}
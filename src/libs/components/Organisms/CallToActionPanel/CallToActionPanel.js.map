{"version":3,"sources":["../../../../src/components/Organisms/CallToActionPanel/CallToActionPanel.tsx"],"names":["React","LazyLoadImage","media","spacing","styled","Section","CallToActionElement","AssetTile","AssetTileLayout","StyledAssetTile","div","maxSm","StyledCtaTextColumn","base","xs","sm","md","lg","StyledCtaImageColumn","alignment","order","StyledCtaRow","getGraphCmsImageParams","imageUrl","undefined","CallToActionPanel","children","image","svg","withLQIP","showReadMore","showFeatured","isOpenAsset","element","showMore","asset","onAssetClick","richTextCopy","props","url","mobile","tablet","alt","competency","gridItem"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { LazyLoadImage } from '@/components/Molecules/LazyLoadImage'\nimport { media, spacing } from '@/styles'\nimport { styled } from '@/styles/styled'\nimport { Section } from '@/components/Atoms/Section'\nimport {\n  ActionElement,\n  CallToActionElement,\n} from '@/components/Organisms/CallToActionPanel/CallToActionElement'\nimport { AssetTile, AssetTileAsset, AssetTileLayout } from '@/components/Organisms/AssetTile'\nimport { ShowMoreProps } from '@/components/Atoms/ShowMore'\n\ninterface ItemProps {\n  order: number\n}\n\nconst StyledAssetTile = styled.div`\n  width: 100%;\n  ${media.maxSm} {\n    width: 90%;\n    margin: 0 auto;\n  }\n`\n\nexport const StyledCtaTextColumn = styled.div<{ alignment: CallToActionPanelProps['alignment'] }>`\n  flex-basis: 100%;\n  flex-wrap: nowrap;\n  flex-direction: column;\n  margin: ${spacing.base.xs} auto;\n  padding: ${spacing.base.sm} ${spacing.base.md};\n\n  ${media.md} {\n    flex-direction: row;\n    flex: 1;\n    padding: ${spacing.base.lg};\n    margin: ${spacing.base.sm} 0;\n  }\n`\n\nexport const StyledCtaImageColumn = styled.div<\n  ItemProps & { alignment: CallToActionPanelProps['alignment'] }\n>`\n  order: unset;\n  flex: unset;\n  flex-direction: column;\n  display: flex;\n  padding: 0;\n  margin: ${spacing.base.sm} 0;\n\n  > svg,\n  img {\n    margin: 0 auto;\n  }\n\n  ${media.md} {\n    flex-direction: row;\n    flex: 0.5;\n    margin: ${spacing.base.sm} 0;\n    padding-right: ${({ alignment }) => (alignment === 'left' ? spacing.base.lg : 0)};\n    padding-left: ${({ alignment }) => (alignment === 'right' ? spacing.base.lg : spacing.base.sm)};\n    justify-content: ${({ alignment }) => (alignment === 'right' ? 'center' : 'flex-start')};\n    order: ${({ order }) => order};\n\n    > svg,\n    img {\n      margin: 0 auto;\n      justify-content: ${({ alignment }) => (alignment === 'right' ? 'center' : 'flex-start')};\n      ${({ alignment }) => alignment === 'left' && `flex: 1;`};\n    }\n  }\n`\n\nexport const StyledCtaRow = styled(Section)`\n  flex-wrap: wrap;\n  display: flex;\n  max-width: 1250px;\n  align-items: center;\n  justify-content: space-around;\n  padding: 0 ${spacing.base.sm};\n  margin: 0;\n`\n\nexport type CtaImageAlignment = 'right' | 'left'\nexport type ImageHeight = 'sm' | 'md' | 'lg'\n\nexport interface CTSImage {\n  alt: string\n  url: string\n  mobile?: {\n    url: string\n  }\n  tablet?: {\n    url: string\n  }\n}\n\nexport interface CallToActionPanelProps {\n  image?: CTSImage\n  svg?: JSX.Element\n  alignment: CtaImageAlignment\n  withLQIP?: boolean\n  asset?: AssetTileAsset\n  element: ActionElement\n  showMore?: ShowMoreProps\n  isOpenAsset?: boolean\n  showFeatured?: boolean\n  showReadMore?: boolean\n  onAssetClick?: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void\n  richTextCopy?: string | React.ReactNode\n}\n\nfunction getGraphCmsImageParams(imageUrl) {\n  return imageUrl ? `${imageUrl}&blur=400&px=8` : undefined\n}\n\nexport const CallToActionPanel: React.FC<CallToActionPanelProps> = ({\n  children,\n  image,\n  svg,\n  alignment,\n  withLQIP = false,\n  showReadMore = false,\n  showFeatured = false,\n  isOpenAsset = false,\n  element,\n  showMore,\n  asset,\n  onAssetClick,\n  richTextCopy,\n  ...props\n}) => {\n  return (\n    <StyledCtaRow>\n      <StyledCtaImageColumn alignment={alignment} order={alignment === 'right' ? 1 : -1}>\n        {image || (image && asset) ? (\n          <LazyLoadImage\n            {...props}\n            withLQIP={withLQIP}\n            src={image.url}\n            lowResSrc={getGraphCmsImageParams(image.url)}\n            srcSm={image?.mobile?.url}\n            lowResSrcSm={getGraphCmsImageParams(image?.mobile?.url)}\n            srcMd={image?.tablet?.url}\n            lowResSrcMd={getGraphCmsImageParams(image?.tablet?.url)}\n            alt={image.alt}\n            rounded\n          />\n        ) : asset ? (\n          <StyledAssetTile>\n            <AssetTile\n              assetView=\"list\"\n              orientation=\"portrait\"\n              asset={asset}\n              isOpenAsset={isOpenAsset}\n              showFeatured={showFeatured}\n              competencyLabel={asset?.competency}\n              layout={AssetTileLayout.gridItem}\n              onClick={onAssetClick}\n            />\n          </StyledAssetTile>\n        ) : (\n          svg\n        )}\n      </StyledCtaImageColumn>\n      <StyledCtaTextColumn alignment={alignment}>\n        <CallToActionElement\n          showReadMore={showReadMore}\n          showMore={showMore}\n          element={element}\n          richTextCopy={richTextCopy}\n        />\n        {children}\n      </StyledCtaTextColumn>\n    </StyledCtaRow>\n  )\n}\n"],"file":"CallToActionPanel.js"}
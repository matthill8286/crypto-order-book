{"version":3,"sources":["../../../../src/components/Organisms/SiteMenu/SiteMenu.tsx"],"names":["React","Card","Grid","TabBar","StyledCard","styled","css","smoothScrollWithSelector","StyledGrid","StyledSiteMenuCard","enableSemanticTheme","theme","surfaceColor","color","textColor","SiteMenu","memo","isFixed","menuItems","activeItemId","scrollOffset","onTracking","onChange","changeDelay","children","length","tabs","map","item","label","title","id","itemId","data","anchor","handleChange","find","i","undefined"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Card } from '@/components/Atoms/Card'\nimport { Grid } from '@/components/Helper/Grid'\nimport { TabBar } from '@/components/Molecules/TabBar'\nimport { Tab } from '@/components/Molecules/TabBar/TabBar.interface'\nimport { StyledCard } from '@/components/Atoms/Card/Card.styled'\nimport { styled, css } from '@/styles/styled'\nimport { Elevation, ThemeColors } from '@/types/theme'\nimport { smoothScrollWithSelector } from '@/utils'\n\nexport interface SiteMenuItemProps {\n  itemId: string\n  title: string\n  surfaceColor?: ThemeColors\n}\n\nconst StyledGrid = styled(Grid)`\n  display: flex;\n\n  > :first-child {\n    flex-grow: 1;\n    overflow: hidden;\n  }\n`\n\nconst StyledSiteMenuCard = styled(Card)<{\n  enableSemanticTheme: boolean\n  surfaceColor: ThemeColors\n}>`\n  position: sticky;\n  top: 0;\n  z-index: 2;\n\n  ${StyledCard} {\n    ${({ enableSemanticTheme, theme, surfaceColor }) =>\n      enableSemanticTheme &&\n      css`\n        background-color: ${theme.color[surfaceColor]};\n        color: ${theme.color.textColor};\n      `}\n  }\n`\n\nexport interface SiteMenuProps {\n  enableSemanticTheme?: boolean\n  surfaceColor?: ThemeColors\n  isFixed?: boolean\n  menuItems?: SiteMenuItemProps[]\n  noBorder?: boolean\n  elevation?: Elevation\n  activeItemId?: string\n  scrollOffset?: number\n  changeDelay?: number\n  onTracking?: (e: string) => void\n  onChange?: (id: string, title: string) => void\n}\n\nexport const SiteMenu: React.FC<SiteMenuProps> = React.memo(\n  ({\n    isFixed,\n    menuItems,\n    activeItemId,\n    scrollOffset = 0,\n    onTracking,\n    onChange,\n    changeDelay,\n    enableSemanticTheme = false,\n    children,\n    surfaceColor = 'surfaceColor',\n  }) => {\n    if (!menuItems || !menuItems.length) {\n      return null\n    }\n\n    const tabs: Tab[] = menuItems.map(item => ({\n      label: item.title,\n      id: `tab-${item.itemId}`,\n      data: { anchor: item.itemId },\n    }))\n\n    const handleChange = (id, data) => {\n      smoothScrollWithSelector(`#${data?.anchor}`, scrollOffset)\n\n      const item = menuItems.find(i => i.itemId === data.anchor)\n\n      if (onTracking) {\n        onTracking(item?.title || '')\n      }\n\n      if (onChange) {\n        onChange(item?.itemId || '', item?.title || '')\n      }\n    }\n\n    return menuItems && menuItems.length > 0 ? (\n      <StyledSiteMenuCard\n        elevation={2}\n        shape=\"sharp\"\n        enableSemanticTheme={enableSemanticTheme}\n        surfaceColor={surfaceColor}>\n        <StyledGrid>\n          <TabBar\n            isFixed={isFixed}\n            tabs={tabs}\n            tabGroupName=\"\"\n            noBorder\n            elevation={0}\n            onChange={handleChange}\n            selected={activeItemId ? `tab-${activeItemId}` : undefined}\n            changeDelay={changeDelay}\n            enableSemanticTheme={enableSemanticTheme}\n            surfaceColor={surfaceColor}\n          />\n          {children}\n        </StyledGrid>\n      </StyledSiteMenuCard>\n    ) : null\n  }\n)\n"],"file":"SiteMenu.js"}
{"version":3,"sources":["../../../../../src/components/Organisms/AssetTile/helpers/icons.tsx"],"names":["React","IconArticle","IconOnlineCourse","IconSaveToPlaylist","IconAsset","IconAssetTime","IconPercentage","StyleguideVideoThin","StyleguidePodcast","AssetTileIcons","icons","Video","Article","Podcast","Online","Playlist","Webinar","getIconByTypeName","typeName","iconsComponent","getMetaItemList","duration","type","completedStatus","numberOfAssets","payload","push","text","icon"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,WADF,EAEEC,gBAFF,EAGEC,kBAHF,EAIEC,SAJF,EAKEC,aALF,EAMEC,cANF,EAOEC,mBAPF,EAQEC,iBARF,QASO,mCATP;AAoBA,WAAYC,cAAZ;;WAAYA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;AAAAA,EAAAA,c;GAAAA,c,KAAAA,c;;AASZ,IAAMC,KAA+C,yCAClDD,cAAc,CAACE,KADmC,EAC3B,oBAAC,mBAAD,OAD2B,2BAElDF,cAAc,CAACG,OAFmC,EAEzB,oBAAC,WAAD,OAFyB,2BAGlDH,cAAc,CAACI,OAHmC,EAGzB,oBAAC,iBAAD,OAHyB,2BAIlDJ,cAAc,CAACK,MAJmC,EAI1B,oBAAC,gBAAD,OAJ0B,2BAKlDL,cAAc,CAACM,QALmC,EAKxB,oBAAC,kBAAD,OALwB,2BAMlDN,cAAc,CAACO,OANmC,EAMzB,oBAAC,mBAAD,OANyB,UAArD;;AASA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,QAAD,EAA0C;AAClE,MAAMC,cAAc,GAAGT,KAAK,CAACQ,QAAD,CAA5B;;AACA,MAAI,CAACC,cAAL,EAAqB;AACnB,WAAO,oBAAC,WAAD,OAAP;AACD;;AAED,SAAOT,KAAK,CAACQ,QAAD,CAAZ;AACD,CAPD;;AASA,OAAO,IAAME,eAAe,GAAG,SAAlBA,eAAkB,OAAmE;AAAA,MAAhEC,QAAgE,QAAhEA,QAAgE;AAAA,MAAtDC,IAAsD,QAAtDA,IAAsD;AAAA,MAAhDC,eAAgD,QAAhDA,eAAgD;AAAA,MAA/BC,cAA+B,QAA/BA,cAA+B;AAChG,MAAMC,OAAsB,GAAG,EAA/B;;AAEA,MAAIH,IAAJ,EAAU;AACRG,IAAAA,OAAO,CAACC,IAAR,CAAa;AACXC,MAAAA,IAAI,EAAEL,IADK;AAEXM,MAAAA,IAAI,EAAEX,iBAAiB,CAACK,IAAD;AAFZ,KAAb;AAID;;AAED,MAAIE,cAAJ,EAAoB;AAClBC,IAAAA,OAAO,CAACC,IAAR,CAAa;AACXC,MAAAA,IAAI,EAAEH,cADK;AAEXI,MAAAA,IAAI,EAAE,oBAAC,SAAD;AAFK,KAAb;AAID;;AAED,MAAIP,QAAJ,EAAc;AACZI,IAAAA,OAAO,CAACC,IAAR,CAAa;AACXC,MAAAA,IAAI,YAAKN,QAAL,CADO;AAEXO,MAAAA,IAAI,EAAE,oBAAC,aAAD;AAFK,KAAb;AAID;;AAED,MAAIL,eAAJ,EAAqB;AACnBE,IAAAA,OAAO,CAACC,IAAR,CAAa;AACXC,MAAAA,IAAI,EAAEJ,eADK;AAEXK,MAAAA,IAAI,EAAE,oBAAC,cAAD;AAFK,KAAb;AAID;;AAED,SAAOH,OAAP;AACD,CAhCM","sourcesContent":["import React from 'react'\nimport {\n  IconArticle,\n  IconOnlineCourse,\n  IconSaveToPlaylist,\n  IconAsset,\n  IconAssetTime,\n  IconPercentage,\n  StyleguideVideoThin,\n  StyleguidePodcast,\n} from '@matthill8286/atomic-icon-library'\nimport {\n  AssetTypeName,\n  AssetTypeVariants,\n  MetaItem,\n  MetaPayload,\n} from '@/components/Organisms/AssetTile'\n\nexport type AssetTileVariantProps = AssetTypeVariants\ntype AssetTileVariant = React.ReactElement<AssetTileVariantProps>\n\nexport enum AssetTileIcons {\n  Video = 'Video',\n  Article = 'Article',\n  Podcast = 'Podcast',\n  Online = 'Online course',\n  Playlist = 'Playlist',\n  Webinar = 'Webinar',\n}\n\nconst icons: Record<AssetTileIcons, AssetTileVariant> = {\n  [AssetTileIcons.Video]: <StyleguideVideoThin />,\n  [AssetTileIcons.Article]: <IconArticle />,\n  [AssetTileIcons.Podcast]: <StyleguidePodcast />,\n  [AssetTileIcons.Online]: <IconOnlineCourse />,\n  [AssetTileIcons.Playlist]: <IconSaveToPlaylist />,\n  [AssetTileIcons.Webinar]: <StyleguideVideoThin />,\n}\n\nconst getIconByTypeName = (typeName: AssetTypeName): JSX.Element => {\n  const iconsComponent = icons[typeName]\n  if (!iconsComponent) {\n    return <IconArticle />\n  }\n\n  return icons[typeName]\n}\n\nexport const getMetaItemList = ({ duration, type, completedStatus, numberOfAssets }: MetaItem) => {\n  const payload: MetaPayload[] = []\n\n  if (type) {\n    payload.push({\n      text: type,\n      icon: getIconByTypeName(type),\n    })\n  }\n\n  if (numberOfAssets) {\n    payload.push({\n      text: numberOfAssets,\n      icon: <IconAsset />,\n    })\n  }\n\n  if (duration) {\n    payload.push({\n      text: `${duration}`,\n      icon: <IconAssetTime />,\n    })\n  }\n\n  if (completedStatus) {\n    payload.push({\n      text: completedStatus,\n      icon: <IconPercentage />,\n    })\n  }\n\n  return payload\n}\n"],"file":"icons.js"}
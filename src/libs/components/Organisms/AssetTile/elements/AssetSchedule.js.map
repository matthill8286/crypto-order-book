{"version":3,"sources":["../../../../../src/components/Organisms/AssetTile/elements/AssetSchedule.tsx"],"names":["React","Tag","css","styled","StyleguideCalendar","IconLiveLabel","Icon","StyledIcon","theme","spacing","base","md","StyledLiveLabel","sm","StyledAssetSchedule","div","StyledTag","AssetSchedule","timebox","color","startTime","Date","start","endTime","end","currentTime","date","Intl","DateTimeFormat","year","month","day","time","hour","hourCycle","formattedDate","format","formattedTime","toLocaleUpperCase","tn","resolvedOptions","timeZone","fullStart","beforeScheduledTime","getTime","startScheduledTime","duringScheduledTime","showTimeSchedule","showTimeLive","left","right"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT;AACA,SAASC,GAAT,EAAcC,MAAd;AAEA,SAASC,kBAAT,EAA6BC,aAA7B,QAAkD,mCAAlD;AACA,SAASC,IAAT;AAcA,OAAO,IAAMC,UAAU,GAAGJ,MAAM,CAACG,IAAD,CAAT;AAAA;AAAA;AAAA,GACrB;AAAA,MAAGE,KAAH,QAAGA,KAAH;AAAA,SAAeN,GAAf,qEAGkBM,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBC,EAHrC;AAAA,CADqB,CAAhB;AAUP,OAAO,IAAMC,eAAe,GAAGT,MAAM,CAACG,IAAD,CAAT;AAAA;AAAA;AAAA,GAC1B;AAAA,MAAGE,KAAH,SAAGA,KAAH;AAAA,SAAeN,GAAf,mEAGkBM,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBG,EAHrC;AAAA,CAD0B,CAArB;AAUP,IAAMC,mBAAmB,GAAGX,MAAM,CAACY,GAAV;AAAA;AAAA;AAAA,GACvB;AAAA,MAAGP,KAAH,SAAGA,KAAH;AAAA,SAAeN,GAAf,gFAIeM,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBG,EAJlC,EAKSL,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBG,EAL5B;AAAA,CADuB,CAAzB;AAWA,IAAMG,SAAS,GAAGb,MAAM,CAACF,GAAD,CAAT;AAAA;AAAA;AAAA,0HAAf;AAcA,OAAO,IAAMgB,aAAsC,GAAG,SAAzCA,aAAyC,QAAwB;AAAA,MAArBC,OAAqB,SAArBA,OAAqB;AAAA,MAAZC,KAAY,SAAZA,KAAY;AAC5E,MAAMC,SAAS,GAAG,IAAIC,IAAJ,CAASH,OAAT,aAASA,OAAT,uBAASA,OAAO,CAAEI,KAAlB,CAAlB;AACA,MAAMC,OAAO,GAAG,IAAIF,IAAJ,CAASH,OAAT,aAASA,OAAT,uBAASA,OAAO,CAAEM,GAAlB,CAAhB;AACA,MAAMC,WAAW,GAAG,IAAIJ,IAAJ,EAApB;AAEA,MAAMK,IAAI,GAAG,IAAIC,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAC5CC,IAAAA,IAAI,EAAE,SADsC;AAE5CC,IAAAA,KAAK,EAAE,OAFqC;AAG5CC,IAAAA,GAAG,EAAE;AAHuC,GAAjC,CAAb;AAMA,MAAMC,IAAI,GAAG,IAAIL,IAAI,CAACC,cAAT,CAAwB,OAAxB,EAAiC;AAC5CK,IAAAA,IAAI,EAAE,SADsC;AAG5CC,IAAAA,SAAS,EAAE;AAHiC,GAAjC,CAAb;AAMA,MAAMC,aAAa,GAAGT,IAAI,CAACU,MAAL,CAAYhB,SAAZ,CAAtB;AACA,MAAMiB,aAAa,GAAGL,IAAI,CAACI,MAAL,CAAYhB,SAAZ,EAAuBkB,iBAAvB,EAAtB;AACA,MAAMC,EAAE,GAAGZ,IAAI,CAACC,cAAL,GAAsBY,eAAtB,GAAwCC,QAAnD;AAEA,MAAMC,SAAS,aAAMP,aAAN,eAAwBE,aAAxB,cAAyCE,EAAzC,CAAf;AAEA,MAAMI,mBAAmB,GAAGlB,WAAW,CAACmB,OAAZ,KAAwBxB,SAAS,CAACwB,OAAV,EAApD;AACA,MAAMC,kBAAkB,GAAGpB,WAAW,CAACmB,OAAZ,KAAwBxB,SAAS,CAACwB,OAAV,EAAnD;AACA,MAAME,mBAAmB,GAAGrB,WAAW,CAACmB,OAAZ,KAAwBrB,OAAO,CAACqB,OAAR,EAApD;AAEA,MAAMG,gBAAgB,GAAGJ,mBAAmB,KAAKG,mBAAmB,IAAI,EAAC5B,OAAD,aAACA,OAAD,eAACA,OAAO,CAAEM,GAAV,CAA5B,CAA5C;AACA,MAAMwB,YAAY,GAAGH,kBAAkB,KAAKC,mBAAmB,IAAI,EAAC5B,OAAD,aAACA,OAAD,eAACA,OAAO,CAAEM,GAAV,CAA5B,CAAvC;AAEA,SACE,oBAAC,mBAAD,QACGuB,gBAAgB,IAAI,CAACC,YAArB,IACC,0CACE,oBAAC,UAAD;AAAY,IAAA,KAAK,EAAC,OAAlB;AAA0B,IAAA,KAAK,EAAC,IAAhC;AAAqC,IAAA,MAAM,EAAC;AAA5C,KACE,oBAAC,kBAAD,OADF,CADF,EAIE,oBAAC,SAAD;AACE,IAAA,MAAM,EAAC,MADT;AAEE,IAAA,OAAO,EAAE;AAAEC,MAAAA,IAAI,EAAE,IAAR;AAAcC,MAAAA,KAAK,EAAE;AAArB,KAFX;AAGE,IAAA,IAAI,EAAER,SAHR;AAIE,IAAA,KAAK,EAAEvB;AAJT,IAJF,CAFJ,EAcG6B,YAAY,IACX,oBAAC,eAAD;AAAiB,IAAA,KAAK,EAAC,aAAvB;AAAqC,IAAA,KAAK,EAAE,EAA5C;AAAgD,IAAA,MAAM,EAAE;AAAxD,KACE,oBAAC,aAAD,OADF,CAfJ,CADF;AAsBD,CApDM","sourcesContent":["import React from 'react'\nimport { Tag } from '@/components/Atoms/Tag'\nimport { css, styled } from '@/styles/styled'\nimport { ThemeColors } from '@/types'\nimport { StyleguideCalendar, IconLiveLabel } from '@matthill8286/atomic-icon-library'\nimport { Icon } from '@/components/Atoms/Icon'\n\ntype TimeBoxValues = string | null\n\ntype Timebox = {\n  start?: TimeBoxValues | undefined\n  end?: TimeBoxValues | undefined\n}\n\nexport interface AssetSchedule {\n  timebox?: Timebox | undefined\n  color?: ThemeColors\n}\n\nexport const StyledIcon = styled(Icon)(\n  ({ theme }) => css`\n    position: absolute;\n    z-index: 25;\n    padding-left: ${theme.spacing.base.md};\n    top: 4px;\n    left: 0;\n  `\n)\n\nexport const StyledLiveLabel = styled(Icon)(\n  ({ theme }) => css`\n    position: absolute;\n    z-index: 25;\n    padding-left: ${theme.spacing.base.sm};\n    top: 0;\n    left: 0;\n  `\n)\n\nconst StyledAssetSchedule = styled.div(\n  ({ theme }) => css`\n    position: absolute;\n    z-index: 20;\n    display: flex;\n    padding: 0 ${theme.spacing.base.sm};\n    top: ${theme.spacing.base.sm};\n    left: 0;\n  `\n)\n\nconst StyledTag = styled(Tag)`\n  border-radius: 6px;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-color: transparent;\n\n  span {\n    font-size: 12px;\n    line-height: 17px;\n  }\n`\n\n// Timebox object\n// create a new date object for both start and end and current date\n\nexport const AssetSchedule: React.FC<AssetSchedule> = ({ timebox, color }) => {\n  const startTime = new Date(timebox?.start as string)\n  const endTime = new Date(timebox?.end as string)\n  const currentTime = new Date()\n\n  const date = new Intl.DateTimeFormat('en-GB', {\n    year: 'numeric',\n    month: 'short',\n    day: 'numeric',\n  })\n\n  const time = new Intl.DateTimeFormat('en-GB', {\n    hour: 'numeric',\n    // @ts-ignore\n    hourCycle: 'h12',\n  })\n\n  const formattedDate = date.format(startTime)\n  const formattedTime = time.format(startTime).toLocaleUpperCase()\n  const tn = Intl.DateTimeFormat().resolvedOptions().timeZone\n\n  const fullStart = `${formattedDate}, ${formattedTime} ${tn}`\n\n  const beforeScheduledTime = currentTime.getTime() < startTime.getTime()\n  const startScheduledTime = currentTime.getTime() > startTime.getTime()\n  const duringScheduledTime = currentTime.getTime() < endTime.getTime()\n\n  const showTimeSchedule = beforeScheduledTime && (duringScheduledTime || !timebox?.end)\n  const showTimeLive = startScheduledTime && (duringScheduledTime || !timebox?.end)\n\n  return (\n    <StyledAssetSchedule>\n      {showTimeSchedule && !showTimeLive && (\n        <>\n          <StyledIcon color=\"white\" width=\"sm\" height=\"sm\">\n            <StyleguideCalendar />\n          </StyledIcon>\n          <StyledTag\n            weight=\"bold\"\n            padding={{ left: 'lg', right: 'xs' }}\n            text={fullStart}\n            color={color}\n          />\n        </>\n      )}\n      {showTimeLive && (\n        <StyledLiveLabel color=\"transparent\" width={62} height={23}>\n          <IconLiveLabel />\n        </StyledLiveLabel>\n      )}\n    </StyledAssetSchedule>\n  )\n}\n"],"file":"AssetSchedule.js"}
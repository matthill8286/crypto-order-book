{"version":3,"sources":["../../../../../src/components/Organisms/AssetTile/elements/AssetTileContent.tsx"],"names":["React","SkeletonBlockItem","Spacer","CopyText","Typo","useWindowDimensions","breakpoints","css","styled","AssetSkills","Provider","props","Ellipsis","StyledProviderWrapper","div","isCompact","StyledHeadingDescription","isDisabled","StyledProvider","StyledSkills","StyledHeaderWrapper","withEllipsis","theme","spacing","base","sm","AssetTileContent","provider","description","limitContentLines","loading","showSkills","skills","competencyLabel","onHeadingClick","currentBreakpoint","breakpoint","isMobile"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,iBAAT;AACA,SAASC,MAAT;AACA,SAASC,QAAT,EAAkCC,IAAlC;AACA,SAASC,mBAAT;AACA,SAASC,WAAT,EAAsBC,GAAtB,EAA2BC,MAA3B;AAGA,SAASC,WAAT;;AAGA,IAAMC,QAAiC,GAAG,SAApCA,QAAoC,CAAAC,KAAK;AAAA,SAAI,oBAAC,QAAD;AAAU,IAAA,MAAM,EAAC,MAAjB;AAAwB,IAAA,WAAW;AAAnC,KAAwCA,KAAxC,EAAJ;AAAA,CAA/C;;AAsBA,IAAMC,QAAQ,GAAGL,GAAH,uJAAd;AAUA,IAAMM,qBAAqB,GAAGL,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,uEAMvB;AAAA,MAAGC,SAAH,QAAGA,SAAH;AAAA,mBAEE,CAACA,SAAD,+EAFF;AAAA,CANuB,CAA3B;AAiBA,IAAMC,wBAAwB,GAAGR,MAAM,CAACJ,IAAD,CAAT;AAAA;AAAA;AAAA,+EAK1B;AAAA,MAAGa,UAAH,SAAGA,UAAH;AAAA,yBAEEA,UAAU,+GAMN,EARN;AAAA,CAL0B,CAA9B;AAkBA,IAAMC,cAAc,GAAGV,MAAM,CAACE,QAAD,CAAT;AAAA;AAAA;AAAA,2CAIhB;AAAA,MAAGO,UAAH,SAAGA,UAAH;AAAA,yBAEEA,UAAU,+GAMN,EARN;AAAA,CAJgB,CAApB;AAgBA,OAAO,IAAME,YAAY,GAAGX,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,2BAGrB;AAAA,MAAGG,UAAH,SAAGA,UAAH;AAAA,yBAEEA,UAAU,+GAMN,EARN;AAAA,CAHqB,CAAlB;AAgBP,IAAMG,mBAAmB,GAAGZ,MAAM,CAACM,GAAV;AAAA;AAAA;AAAA,sEAGrB;AAAA,MAAGO,YAAH,SAAGA,YAAH;AAAA,SAAsBA,YAAY,IAAIT,QAAtC;AAAA,CAHqB,EAIrB;AAAA,MAAGU,KAAH,SAAGA,KAAH;AAAA,kCAAiCA,KAAK,CAACC,OAAN,CAAcC,IAAd,CAAmBC,EAApD;AAAA,CAJqB,CAAzB;AAUA,OAAO,IAAMC,gBAA2C,GAAG,SAA9CA,gBAA8C,QAYrD;AAAA,MAXJC,QAWI,SAXJA,QAWI;AAAA,MAVJC,WAUI,SAVJA,WAUI;AAAA,oCATJC,iBASI;AAAA,MATJA,iBASI,sCATgB,CAShB;AAAA,+BARJZ,UAQI;AAAA,MARJA,UAQI,iCARS,KAQT;AAAA,4BAPJa,OAOI;AAAA,MAPJA,OAOI,8BAPM,KAON;AAAA,8BANJf,SAMI;AAAA,MANJA,SAMI,gCANQ,KAMR;AAAA,iCALJM,YAKI;AAAA,MALJA,YAKI,mCALW,IAKX;AAAA,+BAJJU,UAII;AAAA,MAJJA,UAII,iCAJS,IAIT;AAAA,MAHJC,MAGI,SAHJA,MAGI;AAAA,MAFJC,eAEI,SAFJA,eAEI;AAAA,MADJC,cACI,SADJA,cACI;;AAAA,6BACsC7B,mBAAmB,EADzD;AAAA,MACgB8B,iBADhB,wBACIC,UADJ;;AAEJ,MAAMC,QAAQ,GAAGF,iBAAiB,GAAG7B,WAAW,CAACmB,EAAjD;;AAEA,MAAIK,OAAJ,EAAa;AACX,WACE,oBAAC,mBAAD,QACG,CAACf,SAAD,IAAc,oBAAC,iBAAD;AAAmB,MAAA,KAAK,EAAC,OAAzB;AAAiC,MAAA,MAAM,EAAC;AAAxC,MADjB,EAEE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb,MAFF,EAGE,oBAAC,iBAAD;AAAmB,MAAA,KAAK,EAAC,KAAzB;AAA+B,MAAA,MAAM,EAAC;AAAtC,MAHF,EAIE,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC;AAAb,MAJF,CADF;AAQD;;AAED,SACE,oBAAC,mBAAD;AAAqB,IAAA,YAAY,EAAEM,YAAnC;AAAiD,IAAA,OAAO,EAAEa;AAA1D,KACE,oBAAC,qBAAD;AAAuB,IAAA,SAAS,EAAEnB;AAAlC,KACG,CAACA,SAAD,IACC,oBAAC,cAAD;AACE,IAAA,UAAU,EAAEE,UADd;AAEE,iBAAU,yBAFZ;AAGE,IAAA,KAAK,EAAC,OAHR;AAIE,IAAA,OAAO,EAAC,aAJV;AAKE,IAAA,QAAQ,EAAC,IALX;AAME,IAAA,SAAS,EAAC,MANZ;AAOE,IAAA,WAAW,MAPb;AAQE,IAAA,MAAM,EAAC,QART;AASE,IAAA,GAAG,EAAC;AATN,KAUGU,QAVH,CAFJ,EAeGI,UAAU,IACT,oBAAC,YAAD,QACE,oBAAC,WAAD;AACE,IAAA,OAAO,EAAED,OADX;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,MAAM,EAAEE,MAHV;AAIE,IAAA,eAAe,EAAEC;AAJnB,IADF,CAhBJ,CADF,EA2BGL,WAAW,IACV,oBAAC,wBAAD;AACE,IAAA,MAAM,EAAC,MADT;AAEE,IAAA,GAAG,EAAC,KAFN;AAGE,IAAA,MAAM,EAAC,QAHT;AAIE,IAAA,QAAQ,EAAC,IAJX;AAKE,IAAA,SAAS,EAAC,MALZ;AAME,IAAA,UAAU,EAAES,QAAQ,GAAG,IAAH,GAAU,IANhC;AAOE,IAAA,KAAK,EAAC,OAPR;AAQE,IAAA,UAAU,EAAER,iBARd;AASE,IAAA,UAAU,EAAEZ,UATd;AAUE,iBAAU;AAVZ,KAWGW,WAXH,CA5BJ,CADF;AA6CD,CAxEM","sourcesContent":["import * as React from 'react'\nimport { SkeletonBlockItem } from '@/components/Atoms/Skeleton'\nimport { Spacer } from '@/components/Atoms/Spacer'\nimport { CopyText, InfoTextProps, Typo } from '@/components/Atoms/Typography'\nimport { useWindowDimensions } from '@/components/Helper/useWindowDimensions'\nimport { breakpoints, css, styled } from '@/styles'\nimport { ThemeFontSizes } from '@/types/theme'\nimport { Provider as ProviderType, Skills } from '../AssetTile.interface'\nimport { AssetSkills } from '@/components/Organisms/AssetTile/elements/AssetSkills'\n\n/** Unique component for better selection during tests */\nconst Provider: React.FC<InfoTextProps> = props => <CopyText weight=\"bold\" toUpperCase {...props} />\n\ninterface StyledElementProps {\n  isDisabled?: boolean\n  isCompact?: boolean\n}\n\nexport interface AssetTitleProps extends StyledElementProps {\n  fontSize?: ThemeFontSizes\n  isCompact?: boolean\n  loading?: boolean\n  limitContentLines?: number\n  renderSkills?: JSX.Element | undefined\n  provider?: ProviderType['name'] | undefined\n  onHeadingClick?: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void\n  description?: string | null\n  withEllipsis?: boolean\n  skills?: (Skills | null)[]\n  competencyLabel?: string\n  showSkills?: boolean\n}\n\nconst Ellipsis = css`\n  min-height: 44px;\n  display: -webkit-box;\n  -webkit-line-clamp: 2;\n  -webkit-box-orient: vertical;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  word-wrap: break-word;\n`\n\nconst StyledProviderWrapper = styled.div<StyledElementProps>`\n  flex-direction: row;\n  width: 100%;\n  flex-wrap: wrap;\n  display: flex;\n\n  ${({ isCompact }) =>\n    `${\n      !isCompact\n        ? `\n  justify-content: space-between;\n  `\n        : `\n  justify-content: flex-end;`\n    }`}\n`\n\nconst StyledHeadingDescription = styled(Typo)<StyledElementProps>`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n\n  ${({ isDisabled }) => `\n    ${\n      isDisabled\n        ? `\n        -ms-filter: grayscale(100%);\n        filter: grayscale(100%);\n        opacity: 0.4;\n      `\n        : ''\n    }\n  `};\n`\n\nconst StyledProvider = styled(Provider)<StyledElementProps>`\n  display: flex;\n  padding-top: 5px;\n\n  ${({ isDisabled }) => `\n    ${\n      isDisabled\n        ? `\n        -ms-filter: grayscale(100%);\n        filter: grayscale(100%);\n        opacity: 0.4;\n      `\n        : ''\n    }\n  `};\n`\nexport const StyledSkills = styled.div<StyledElementProps>`\n  margin-top: 0;\n\n  ${({ isDisabled }) => `\n    ${\n      isDisabled\n        ? `\n        -ms-filter: grayscale(100%);\n        filter: grayscale(100%);\n        opacity: 0.4;\n      `\n        : ''\n    }\n  `};\n`\n\nconst StyledHeaderWrapper = styled.div<{\n  withEllipsis?: boolean\n}>`\n  ${({ withEllipsis }) => withEllipsis && Ellipsis}\n  ${({ theme }) => `margin-bottom: ${theme.spacing.base.sm}`};\n  display: flex;\n  flex-direction: column;\n  flex-basis: 100%;\n`\n\nexport const AssetTileContent: React.FC<AssetTitleProps> = ({\n  provider,\n  description,\n  limitContentLines = 2,\n  isDisabled = false,\n  loading = false,\n  isCompact = false,\n  withEllipsis = true,\n  showSkills = true,\n  skills,\n  competencyLabel,\n  onHeadingClick,\n}) => {\n  const { breakpoint: currentBreakpoint } = useWindowDimensions()\n  const isMobile = currentBreakpoint < breakpoints.sm\n\n  if (loading) {\n    return (\n      <StyledHeaderWrapper>\n        {!isCompact && <SkeletonBlockItem width=\"170px\" height=\"23px\" />}\n        <Spacer size=\"md\" />\n        <SkeletonBlockItem width=\"90%\" height=\"25px\" />\n        <Spacer size=\"md\" />\n      </StyledHeaderWrapper>\n    )\n  }\n\n  return (\n    <StyledHeaderWrapper withEllipsis={withEllipsis} onClick={onHeadingClick}>\n      <StyledProviderWrapper isCompact={isCompact}>\n        {!isCompact && (\n          <StyledProvider\n            isDisabled={isDisabled}\n            data-test=\"learning-asset-provider\"\n            color=\"grey5\"\n            display=\"inline-flex\"\n            fontSize=\"xs\"\n            textAlign=\"left\"\n            toUpperCase\n            margin=\"0 0 xs\"\n            tag=\"h1\">\n            {provider}\n          </StyledProvider>\n        )}\n        {showSkills && (\n          <StyledSkills>\n            <AssetSkills\n              loading={loading}\n              color=\"grey4\"\n              skills={skills}\n              competencyLabel={competencyLabel}\n            />\n          </StyledSkills>\n        )}\n      </StyledProviderWrapper>\n      {description && (\n        <StyledHeadingDescription\n          weight=\"bold\"\n          tag=\"div\"\n          margin=\"xs 0 0\"\n          fontSize=\"lg\"\n          textAlign=\"left\"\n          lineHeight={isMobile ? 'sm' : 'md'}\n          color=\"grey6\"\n          limitLines={limitContentLines}\n          isDisabled={isDisabled}\n          data-test=\"learning-asset-description\">\n          {description}\n        </StyledHeadingDescription>\n      )}\n    </StyledHeaderWrapper>\n  )\n}\n"],"file":"AssetTileContent.js"}
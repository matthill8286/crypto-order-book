{"version":3,"sources":["../../../../../src/components/Organisms/AssetTile/elements/AssetSchedule.test.tsx"],"names":["React","mountWithTheme","renderWithTheme","newAssetStructuredMocks","StyleguideCalendar","IconLiveLabel","Tag","AssetSchedule","describe","it","skip","props","timebox","start","end","color","wrapper","expect","toMatchSnapshot","find","toHaveLength"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { mountWithTheme, renderWithTheme } from '@/testRenderer'\nimport { newAssetStructuredMocks } from '@/components/Organisms/AssetTile/elements/mockAsset'\nimport { StyleguideCalendar, IconLiveLabel } from '@matthill8286/atomic-icon-library'\nimport { Tag } from '@/components/Atoms/Tag'\nimport { AssetSchedule } from './AssetSchedule'\n\ndescribe('AssetSchedule', () => {\n  it.skip('renders correct snapshot with asset data', () => {\n    const props = {\n      timebox: {\n        start: newAssetStructuredMocks[0]?.timebox?.start,\n        end: newAssetStructuredMocks[0]?.timebox?.end,\n      },\n      color: 'white',\n    }\n    const wrapper = renderWithTheme(<AssetSchedule {...props} />)\n    expect(wrapper).toMatchSnapshot()\n  })\n\n  it('Displays the Calendar icon', () => {\n    const props = {\n      timebox: {\n        start: '2022-07-04T10:10:30Z',\n        end: '2023-10-04T10:10:30Z',\n      },\n      color: 'white',\n    }\n    const wrapper = mountWithTheme(<AssetSchedule {...props} />)\n    expect(wrapper.find(StyleguideCalendar)).toHaveLength(1)\n  })\n\n  it('Displays the Calendar icon when asset has no end time', () => {\n    const props = {\n      timebox: {\n        start: '2022-07-04T10:10:30Z',\n        end: null,\n      },\n      color: 'white',\n    }\n    const wrapper = mountWithTheme(<AssetSchedule {...props} />)\n    expect(wrapper.find(StyleguideCalendar)).toHaveLength(1)\n  })\n\n  it('Displays the Tag component', () => {\n    const props = {\n      timebox: {\n        start: '2022-07-04T10:10:30Z',\n        end: '2023-10-04T10:10:30Z',\n      },\n      color: 'white',\n    }\n    const wrapper = mountWithTheme(<AssetSchedule {...props} />)\n    expect(wrapper.find(Tag)).toHaveLength(1)\n  })\n\n  it('Displays the Live icon', () => {\n    const props = {\n      timebox: {\n        start: '2021-07-04T10:10:30Z',\n        end: '2023-10-04T10:10:30Z',\n      },\n      color: 'white',\n    }\n    const wrapper = mountWithTheme(<AssetSchedule {...props} />)\n    expect(wrapper.find(IconLiveLabel)).toHaveLength(1)\n  })\n\n  it('Displays the Live icon when asset has no end time', () => {\n    const props = {\n      timebox: {\n        start: '2021-07-04T10:10:30Z',\n        end: null,\n      },\n      color: 'white',\n    }\n    const wrapper = mountWithTheme(<AssetSchedule {...props} />)\n    expect(wrapper.find(IconLiveLabel)).toHaveLength(1)\n  })\n})\n"],"file":"AssetSchedule.test.js"}
{"version":3,"sources":["../../../../../src/components/Organisms/AssetTile/elements/AssetHeader.tsx"],"names":["React","Link","SkeletonInlineItem","CopyText","Heading","InfoText","FlexBox","FlexItem","styled","useWindowDimensions","breakpoints","StyledAssetHeaderWrapper","div","theme","spacing","base","sm","xs","StyledHeading","StyledLink","AssetHeader","headerFontSize","headerFontWeight","href","target","loading","provider","showProvider","description","title","onClick","cleanTitle","replace","currentBreakpoint","breakpoint","isMobile","to"],"mappings":"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","sourcesContent":["import * as React from 'react'\nimport { Link } from '@/components/Atoms/Link'\nimport { SkeletonInlineItem } from '@/components/Atoms/Skeleton'\nimport { CopyText, Heading, InfoText } from '@/components/Atoms/Typography'\nimport { FontSizeMap } from '@/components/Atoms/Typography/Typo/Typo.interface'\nimport { FlexBox, FlexItem } from '@/components/Helper/FlexBox'\nimport { styled } from '@/styles/styled'\nimport { ThemeFontSizes, ThemeFontWeights } from '@/types'\nimport { useWindowDimensions } from '@/components/Helper'\nimport { breakpoints } from '@/styles'\n\ninterface AssetTitleProps {\n  headerFontSize?: ThemeFontSizes | FontSizeMap\n  headerFontWeight?: ThemeFontWeights\n  href?: string\n  target?: string\n  loading?: boolean\n  provider?: string\n  showProvider?: boolean\n  description?: string\n  title: string\n  onClick?: () => void\n}\n\nconst StyledAssetHeaderWrapper = styled.div`\n  margin-bottom: ${({ theme }) => theme.spacing.base.sm};\n  margin-right: ${({ theme }) => theme.spacing.base.xs};\n`\n\nconst StyledHeading = styled(Heading)`\n  width: 90%;\n`\n\nconst StyledLink = styled(Link)`\n  display: inline;\n`\n\nexport const AssetHeader: React.FC<AssetTitleProps> = ({\n  headerFontSize,\n  headerFontWeight = 'semibold',\n  href,\n  target,\n  loading = false,\n  provider,\n  showProvider = true,\n  description,\n  title,\n  onClick,\n}) => {\n  if (loading) {\n    return (\n      <StyledAssetHeaderWrapper>\n        <SkeletonInlineItem text=\"Manufacturer\" fontSize=\"xs\" />\n        &nbsp;\n        <SkeletonInlineItem text=\"Asset Line Item Headline\" fontSize=\"xs\" />\n        {showProvider && <SkeletonInlineItem text=\"Subline\" fontSize=\"xxs\" newLine />}\n      </StyledAssetHeaderWrapper>\n    )\n  }\n\n  const cleanTitle = provider ? title.replace(provider, '') : title\n  const { breakpoint: currentBreakpoint } = useWindowDimensions()\n  const isMobile = currentBreakpoint < breakpoints.sm\n\n  const Heading: React.FC = () => (\n    <StyledHeading\n      color=\"black\"\n      fontSize={headerFontSize || 'lg'}\n      limitLines={3}\n      lineHeight={isMobile ? 'sm' : 'md'}\n      scale=\"level-1\"\n      spacing=\"half\"\n      tag=\"p\">\n      <CopyText fontSize={headerFontSize || 'lg'} tag=\"div\" color=\"grey6\" weight={headerFontWeight}>\n        {cleanTitle}\n      </CopyText>\n    </StyledHeading>\n  )\n\n  return (\n    <StyledAssetHeaderWrapper>\n      {showProvider && (\n        <FlexBox flexWrap=\"nowrap\" justifyContent=\"space-between\">\n          {description && (\n            <FlexItem>\n              <InfoText\n                data-test=\"learning-asset-provider\"\n                fontSize=\"xs\"\n                toUpperCase\n                margin=\"0 0 xs\"\n                tag=\"p\"\n                color=\"grey5\">\n                {description}\n              </InfoText>\n            </FlexItem>\n          )}\n        </FlexBox>\n      )}\n      {href ? (\n        <StyledLink\n          inline={false}\n          underline={false}\n          {...(target ? { href, target, onClick } : { to: href, onClick })}>\n          <Heading />\n        </StyledLink>\n      ) : (\n        <Heading />\n      )}\n    </StyledAssetHeaderWrapper>\n  )\n}\n"],"file":"AssetHeader.js"}
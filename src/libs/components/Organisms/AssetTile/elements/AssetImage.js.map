{"version":3,"sources":["../../../../../src/components/Organisms/AssetTile/elements/AssetImage.tsx"],"names":["React","SkeletonBlockItem","LazyLoadImage","media","css","styled","isAlternateTheme","isPortrait","StyledPictureWrapper","div","hasBottomMargin","theme","minWidth","maxWidth","orientation","isCompact","height","md","AssetImage","children","lazyLoad","loading","onPictureClick","assetImage","rounded","title","width","withLQIP","withNativeLoading"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,iBAAT;AACA,SAASC,aAAT;AACA,SAASC,KAAT;AACA,SAASC,GAAT,EAAcC,MAAd;AACA,SAASC,gBAAT;AACA,SAASC,UAAT;AAqBA,IAAMC,oBAAoB,GAAGH,MAAM,CAACI,GAAV;AAAA;AAAA;AAAA,aACtB;AAAA,MAAGC,eAAH,QAAGA,eAAH;AAAA,MAAoBC,KAApB,QAAoBA,KAApB;AAAA,MAA2BC,QAA3B,QAA2BA,QAA3B;AAAA,MAAqCC,QAArC,QAAqCA,QAArC;AAAA,wEAGU;AAAA,QAAGC,WAAH,SAAGA,WAAH;AAAA,QAAgBC,SAAhB,SAAgBA,SAAhB;AAAA,QAA2BC,MAA3B,SAA2BA,MAA3B;AAAA,WAAyC,CAACT,UAAU,CAACO,WAAD,CAAX,GAA2B,MAA3B,GAAoCE,MAA7E;AAAA,GAHV,sBAKEb,KAAK,CAACc,EALR,uBAOI,CAACP,eAAD,GACIN,GADJ,kBAII,EAXR;AAAA,CADsB,CAA1B;AAmBA,OAAO,IAAMc,UAAqC,GAAG,SAAxCA,UAAwC,QAe/C;AAAA,MAdJC,QAcI,SAdJA,QAcI;AAAA,oCAbJT,eAaI;AAAA,MAbJA,eAaI,sCAbc,KAad;AAAA,MAZJM,MAYI,SAZJA,MAYI;AAAA,MAXJI,QAWI,SAXJA,QAWI;AAAA,4BAVJC,OAUI;AAAA,MAVJA,OAUI,8BAVM,KAUN;AAAA,MATJC,cASI,SATJA,cASI;AAAA,MARJC,UAQI,SARJA,UAQI;AAAA,MAPJC,OAOI,SAPJA,OAOI;AAAA,MANJC,KAMI,SANJA,KAMI;AAAA,0BALJC,KAKI;AAAA,MALJA,KAKI,4BALI,MAKJ;AAAA,MAJJd,QAII,SAJJA,QAII;AAAA,MAHJC,QAGI,SAHJA,QAGI;AAAA,MAFJc,QAEI,SAFJA,QAEI;AAAA,MADJC,iBACI,SADJA,iBACI;;AACJ,MAAIP,OAAJ,EAAa;AACX,WACE,oBAAC,oBAAD;AACE,MAAA,eAAe,EAAEX,eADnB;AAEE,MAAA,QAAQ,EAAEE,QAFZ;AAGE,MAAA,QAAQ,EAAEC,QAHZ;AAIE,MAAA,OAAO,EAAES;AAJX,OAKE,oBAAC,iBAAD;AAAmB,MAAA,KAAK,EAAEI,KAA1B;AAAiC,MAAA,MAAM,EAAEV;AAAzC,MALF,CADF;AASD;;AACD,SACE,oBAAC,oBAAD;AAAsB,IAAA,eAAe,EAAEN,eAAvC;AAAwD,IAAA,OAAO,EAAEY;AAAjE,KACE,oBAAC,aAAD;AACE,iBAAU,kBADZ;AAEE,IAAA,GAAG,EAAEC,UAFP;AAGE,IAAA,GAAG,EAAEE,KAHP;AAIE,IAAA,MAAM,EAAET,MAJV;AAKE,IAAA,KAAK,EAAEU,KALT;AAME,IAAA,OAAO,EAAEF,OANX;AAOE,IAAA,SAAS,EACPlB,gBAAgB,KAAM,MAAN,GAAqC,OARzD;AAUE,IAAA,QAAQ,EAAEc,QAVZ;AAWE,IAAA,QAAQ,EAAEO,QAXZ;AAYE,IAAA,iBAAiB,EAAEC;AAZrB,KAaGT,QAbH,CADF,CADF;AAmBD,CA9CM","sourcesContent":["import React from 'react'\nimport { PictureObjectFit } from '@/components/Atoms/Picture'\nimport { SkeletonBlockItem } from '@/components/Atoms/Skeleton'\nimport { LazyLoadImage } from '@/components/Molecules/LazyLoadImage'\nimport { media } from '@/styles/media'\nimport { css, styled } from '@/styles/styled'\nimport { isAlternateTheme } from '@/utils/helper'\nimport { isPortrait } from '@/components/Organisms/AssetTile/AssetTile.styled'\n\nexport interface StyledPictureWrapperProps {\n  hasBottomMargin?: boolean\n  maxWidth?: string\n  minWidth?: string\n}\n\nexport interface AssetImageProps extends StyledPictureWrapperProps {\n  height?: string\n  lazyLoad?: boolean\n  loading?: boolean\n  onPictureClick?: (event: React.MouseEvent<HTMLElement, MouseEvent>) => void\n  assetImage?: string | null\n  title?: string | null\n  width?: string\n  withLQIP?: boolean\n  rounded?: boolean\n  withNativeLoading?: boolean\n}\n\nconst StyledPictureWrapper = styled.div<StyledPictureWrapperProps>`\n  ${({ hasBottomMargin, theme, minWidth, maxWidth }) => `\n    text-align: center;\n    flex: 1;\n    height: ${({ orientation, isCompact, height }) => (!isPortrait(orientation) ? '100%' : height)};\n\n    ${media.md} {\n      ${\n        !hasBottomMargin\n          ? css`\n              margin: 0;\n            `\n          : ''\n      }\n      text-align: unset;\n    }\n`}\n`\n\nexport const AssetImage: React.FC<AssetImageProps> = ({\n  children,\n  hasBottomMargin = false,\n  height,\n  lazyLoad,\n  loading = false,\n  onPictureClick,\n  assetImage,\n  rounded,\n  title,\n  width = '100%',\n  minWidth,\n  maxWidth,\n  withLQIP,\n  withNativeLoading,\n}) => {\n  if (loading) {\n    return (\n      <StyledPictureWrapper\n        hasBottomMargin={hasBottomMargin}\n        minWidth={minWidth}\n        maxWidth={maxWidth}\n        onClick={onPictureClick}>\n        <SkeletonBlockItem width={width} height={height} />\n      </StyledPictureWrapper>\n    )\n  }\n  return (\n    <StyledPictureWrapper hasBottomMargin={hasBottomMargin} onClick={onPictureClick}>\n      <LazyLoadImage\n        data-test=\"asset-card-image\"\n        src={assetImage}\n        alt={title}\n        height={height}\n        width={width}\n        rounded={rounded}\n        objectFit={\n          isAlternateTheme() ? ('fill' as PictureObjectFit) : ('cover' as PictureObjectFit)\n        }\n        lazyLoad={lazyLoad}\n        withLQIP={withLQIP}\n        withNativeLoading={withNativeLoading}>\n        {children}\n      </LazyLoadImage>\n    </StyledPictureWrapper>\n  )\n}\n"],"file":"AssetImage.js"}
{"version":3,"sources":["../../../../../src/components/Organisms/AssetTile/elements/AssetTileMeta.tsx"],"names":["React","Icon","SkeletonBlockItem","CopyText","FlexBox","FlexItem","useWindowDimensions","breakpoints","styled","StyledFlexBox","isDisabled","StyledFlexItem","isCompact","isFirstChild","AssetTileMeta","metaItems","loading","inPlaylist","justify","alignSelf","onClick","currentBreakpoint","breakpoint","isMobile","sm","showCompact","length","map","index","icon","text"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Icon } from '@/components/Atoms/Icon'\nimport { SkeletonBlockItem } from '@/components/Atoms/Skeleton'\nimport { CopyText } from '@/components/Atoms/Typography'\nimport { FlexBox, FlexItem } from '@/components/Helper/FlexBox'\nimport { useWindowDimensions } from '@/components/Helper/useWindowDimensions'\nimport { breakpoints, styled } from '@/styles'\nimport { AssetTileMetaProps } from '../AssetTile.interface'\n\nconst StyledFlexBox = styled(FlexBox)<{\n  isDisabled?: boolean\n  onClick?: (event: React.MouseEvent<HTMLElement, MouseEvent>) => any\n}>`\n  ${({ isDisabled }) => `\n    ${\n      isDisabled\n        ? `\n        -ms-filter: grayscale(100%);\n        filter: grayscale(100%);\n        opacity: 0.4;\n        pointer-events: none;\n      `\n        : ''\n    }\n  `};\n`\nconst StyledFlexItem = styled(FlexItem)<{\n  isFirstChild?: boolean\n  isLastChild?: boolean\n  isCompact?: boolean\n}>`\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: stretch;\n\n  padding: 0 2px;\n\n  ${({ isCompact }) => `${isCompact && `padding: 0`}`}\n\n  ${({ isFirstChild }) => `\n    ${isFirstChild &&\n      `\n        padding-left: 0;\n        margin-left: 0;\n      `}\n  `};\n`\n\nexport const AssetTileMeta: React.FC<AssetTileMetaProps> = ({\n  metaItems,\n  loading,\n  isDisabled,\n  inPlaylist = false,\n  justify,\n  alignSelf,\n  isCompact,\n  onClick,\n}) => {\n  if (!metaItems) {\n    return null\n  }\n\n  const { breakpoint: currentBreakpoint } = useWindowDimensions()\n  const isMobile = currentBreakpoint < breakpoints.sm\n  const showCompact = metaItems.length >= 2\n\n  if (loading) {\n    return (\n      <StyledFlexBox isDisabled={isDisabled}>\n        <SkeletonBlockItem height=\"20px\" width=\"60%\" />\n      </StyledFlexBox>\n    )\n  }\n\n  return (\n    <StyledFlexBox\n      justifyContent={justify || 'flex-start'}\n      alignContent=\"center\"\n      flexDirection={isMobile && inPlaylist ? 'column' : 'row'}\n      flexWrap={showCompact ? 'wrap' : 'nowrap'}\n      isDisabled={isDisabled}\n      onClick={onClick}>\n      {metaItems.map(({ icon, text }, index) => (\n        <StyledFlexItem\n          key={index}\n          padding={!isMobile}\n          isCompact={isCompact}\n          alignSelf={alignSelf || (isMobile && inPlaylist) ? 'center' : 'flex-start'}\n          isFirstChild={index === 0}\n          isLastChild={index === metaItems?.length}>\n          <FlexBox>\n            <FlexItem alignSelf=\"center\">\n              <Icon width={16} height={16} color=\"grey5\">\n                {icon}\n              </Icon>\n            </FlexItem>\n            <FlexItem>\n              <CopyText\n                margin={isMobile ? '0 10px' : '0 5px 0'}\n                fontSize=\"sm\"\n                color=\"grey5\"\n                tag=\"span\">\n                {text}\n              </CopyText>\n            </FlexItem>\n          </FlexBox>\n        </StyledFlexItem>\n      ))}\n    </StyledFlexBox>\n  )\n}\n"],"file":"AssetTileMeta.js"}
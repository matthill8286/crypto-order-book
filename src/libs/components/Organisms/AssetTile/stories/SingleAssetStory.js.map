{"version":3,"sources":["../../../../../src/components/Organisms/AssetTile/stories/SingleAssetStory.tsx"],"names":["boolean","select","React","Cell","Grid","Offset","Row","StorybookWrapper","AssetTileLayout","assetNames","assetOptions","baseProps","gridSelection","mockAssets","action","AssetTile","StyledIconButton","Icon","StyleguideBookmarkOutlined","SingleAssetStory","itemCount","selectedAssetType","auto","props","loading","isDisabled","videoFallbackImage","showLock","showFeatured","sponsored","assets","i","push","showAssets","locked","gridItem","isSponsored","showUppercase","label","title","infoText"],"mappings":"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","sourcesContent":["import { boolean, select } from '@storybook/addon-knobs'\nimport * as React from 'react'\nimport { Cell, Grid, Offset, Row } from '@/components/Helper/Grid'\nimport { TwelveColumn } from '@/components/Helper/Grid/Grid.interface'\nimport { StorybookWrapper } from '@/utils/StorybookWrapper'\nimport { AssetTileLayout } from '../AssetTile.interface'\n\nimport {\n  assetNames,\n  assetOptions,\n  baseProps,\n  gridSelection,\n  mockAssets,\n} from '@/components/Organisms/AssetTile/elements/mocks'\nimport { Asset } from '@/types'\nimport { action } from '@storybook/addon-actions'\nimport { AssetTile } from '@/components/Organisms/AssetTile'\nimport { StyledIconButton } from '@/components/Organisms/AssetTile/stories/AssetTileGridItemStory'\nimport { Icon } from '@/components/Atoms/Icon'\nimport { StyleguideBookmarkOutlined } from '@matthill8286/atomic-icon-library'\n\nexport const SingleAssetStory = () => {\n  const itemCount = select('Items per Row', gridSelection, 3) as TwelveColumn\n\n  const selectedAssetType = select('Asset', assetOptions, 'auto')\n  const auto = selectedAssetType === 'auto'\n\n  const props = {\n    ...baseProps,\n    loading: boolean('Loading state', false),\n    isDisabled: boolean('Disabled', false),\n    videoFallbackImage: 'public/images/teasers/02.jpg',\n  }\n\n  const showLock = boolean('Locked state', false)\n  const showFeatured = boolean('Featured Asset', false)\n  const sponsored = boolean('Sponsored asset', false)\n\n  const assets: Asset[] = []\n\n  for (let i = 0; i < itemCount; i++) {\n    assets.push(mockAssets[(auto && assetNames[i]) || selectedAssetType])\n  }\n\n  const showAssets = showLock ? { ...assets[0], locked: true } : { ...assets[0] }\n\n  return (\n    <StorybookWrapper>\n      <Grid>\n        <Row>\n          <Offset columns={3} />\n          <Cell columns={6}>\n            <AssetTile\n              {...props}\n              asset={showAssets}\n              showLock={showLock}\n              showBookmark={!showLock}\n              showFeatured={showFeatured}\n              noBorder={[]}\n              onLockClick={action('Lock clicked')}\n              onClick={action('Tile clicked')}\n              renderAddToBookmarkButton={() => (\n                <StyledIconButton round isFlat>\n                  <Icon color=\"grey5\" height=\"md\">\n                    <StyleguideBookmarkOutlined />\n                  </Icon>\n                </StyledIconButton>\n              )}\n              layout={AssetTileLayout.gridItem}\n              assetSponsoring={{\n                isSponsored: sponsored,\n                showUppercase: false,\n                label: 'Asset Sponsor',\n                title: 'Sponsored',\n                infoText: 'Some random content so we can showcase sponsored asset content',\n              }}\n            />\n          </Cell>\n        </Row>\n      </Grid>\n    </StorybookWrapper>\n  )\n}\n"],"file":"SingleAssetStory.js"}
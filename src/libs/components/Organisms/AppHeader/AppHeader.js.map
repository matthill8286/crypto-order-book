{"version":3,"sources":["../../../../src/components/Organisms/AppHeader/AppHeader.tsx"],"names":["isEmpty","React","useCallback","Button","Divider","Picture","GroupedActionLinks","LanguageMenu","NavigationMenu","StyledActionItems","StyledHeaderWrapper","StyledItemWrapper","StyledLogo","StyledSection","useTheme","AppHeaderComponent","memo","headerContent","languages","button","onButtonClick","renderSearchBar","onLanguageChoice","logoUrl","setFilter","clearFilter","onLogoClick","langIndex","filter","internalLogoClick","internalLanguageSelection","id","header","padding","links","enabled","searchEnabled","languageMenuEnabled","menus","Array","isArray","length","item","href","actionLabel"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,OAAP,MAAoB,gBAApB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,MAAT;AACA,SAASC,OAAT;AACA,SAASC,OAAT;AACA,SAASC,kBAAT;AACA,SAASC,YAAT;AACA,SAEEC,cAFF;AAKA,SACEC,iBADF,EAEEC,mBAFF,EAGEC,iBAHF,EAIEC,UAJF,EAKEC,aALF;AAOA,SAASC,QAAT;AAqCA,OAAO,IAAMC,kBAAkB,GAAGd,KAAK,CAACe,IAAN,CAChC,gBAasB;AAAA,MAZpBC,aAYoB,QAZpBA,aAYoB;AAAA,MAXpBC,SAWoB,QAXpBA,SAWoB;AAAA,MAVpBC,MAUoB,QAVpBA,MAUoB;AAAA,MATpBC,aASoB,QATpBA,aASoB;AAAA,MARpBC,eAQoB,QARpBA,eAQoB;AAAA,MAPpBC,gBAOoB,QAPpBA,gBAOoB;AAAA,MANpBC,OAMoB,QANpBA,OAMoB;AAAA,MALpBC,SAKoB,QALpBA,SAKoB;AAAA,MAJpBC,WAIoB,QAJpBA,WAIoB;AAAA,MAHpBC,WAGoB,QAHpBA,WAGoB;AAAA,MAFpBC,SAEoB,QAFpBA,SAEoB;AAAA,MADpBC,MACoB,QADpBA,MACoB;AACpB,MAAMC,iBAAiB,GAAG3B,WAAW,CAAC;AAAA,WAAMwB,WAAN,aAAMA,WAAN,uBAAMA,WAAW,EAAjB;AAAA,GAAD,EAAwB,EAAxB,CAArC;AACA,MAAMI,yBAAyB,GAAG5B,WAAW,CAAC,UAAA6B,EAAE;AAAA,WAAIT,gBAAJ,aAAIA,gBAAJ,uBAAIA,gBAAgB,CAAGS,EAAH,CAApB;AAAA,GAAH,EAA+B,EAA/B,CAA7C;;AAFoB,kBAGDjB,QAAQ,EAHP;AAAA,MAGZkB,MAHY,aAGZA,MAHY;;AAKpB,SACE,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAC;AAArB,KACE,oBAAC,OAAD;AAAS,IAAA,KAAK,EAAC,SAAf;AAAyB,IAAA,MAAM,EAAC;AAAhC,IADF,EAEE,oBAAC,mBAAD;AAAqB,IAAA,OAAO,YAAKA,MAAM,CAACC,OAAZ;AAA5B,KACGV,OAAO,IACN,oBAAC,UAAD,QACE,oBAAC,OAAD;AACE,IAAA,GAAG,EAAC,WADN;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMM,iBAAiB,EAAvB;AAAA,KAFX;AAGE,IAAA,GAAG,EAAEN,OAHP;AAIE,IAAA,KAAK,EAAC,OAJR;AAKE,IAAA,MAAM,EAAC;AALT,IADF,CAFJ,EAYE,oBAAC,iBAAD,QACG,CAAAN,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEiB,KAAf,KAAwB,CAAClC,OAAO,CAACiB,aAAD,aAACA,aAAD,uBAACA,aAAa,CAAEiB,KAAhB,CAAhC,IACC,oBAAC,iBAAD,QACE,oBAAC,kBAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,OAAO,EAAC,MAFV;AAGE,IAAA,QAAQ,EAAC,IAHX;AAIE,IAAA,KAAK,qBAAMjB,aAAa,CAACiB,KAApB;AAJP,IADF,CAFJ,EAWG,CAAAjB,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEW,MAAf,KACC,CAAC5B,OAAO,CAACiB,aAAD,aAACA,aAAD,uBAACA,aAAa,CAAEW,MAAhB,CADT,KAECX,aAFD,aAECA,aAFD,uBAECA,aAAa,CAAEW,MAAf,CAAsBO,OAFvB,KAEkC,oBAAC,iBAAD,QAAoBP,MAApB,CAbrC,EAcG,CAAAX,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEmB,aAAf,KACC,oBAAC,iBAAD,QAAoBf,eAApB,CAfJ,EAiBGJ,aAAa,CAACoB,mBAAd,KACCpB,aADD,aACCA,aADD,uBACCA,aAAa,CAAEqB,KADhB,KAEC,CAACtC,OAAO,CAACiB,aAAD,aAACA,aAAD,uBAACA,aAAa,CAAEqB,KAAhB,CAFT,IAGG,oBAAC,iBAAD,QACE,oBAAC,cAAD;AACE,IAAA,MAAM,EAAEnB,MADV;AAEE,IAAA,aAAa,qBAAMF,aAAN,aAAMA,aAAN,uBAAMA,aAAa,CAAEqB,KAAf,CAAqB,CAArB,EAAwBJ,KAA9B;AAFf,IADF,CApBN,EA2BGK,KAAK,CAACC,OAAN,CAActB,SAAd,KAA4BA,SAAS,CAACuB,MAAtC,IACC,oBAAC,iBAAD,QACE,oBAAC,YAAD;AACE,IAAA,uBAAuB,EAAE,iCAAAC,IAAI;AAAA,aAAIZ,yBAAyB,CAACY,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEX,EAAP,CAA7B;AAAA,KAD/B;AAEE,IAAA,SAAS,EAAEb,SAFb;AAGE,IAAA,iBAAiB,EAAES;AAHrB,IADF,CA5BJ,EAoCGR,MAAM,IAAIA,MAAM,CAACwB,IAAjB,IACC,oBAAC,iBAAD,QACE,oBAAC,MAAD;AACE,IAAA,UAAU,EAAC,OADb;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,IAAI,EAAC,IAHP;AAIE,IAAA,OAAO,EAAEvB,aAJX;AAKE,IAAA,IAAI,EAAED,MAAM,CAACwB;AALf,KAMGxB,MAAM,CAACyB,WANV,CADF,CArCJ,CAZF,CAFF,CADF;AAmED,CAtF+B,CAA3B","sourcesContent":["import isEmpty from 'lodash/isEmpty'\nimport React, { useCallback } from 'react'\nimport { Button } from '@/components/Atoms/Button'\nimport { Divider } from '@/components/Atoms/Divider'\nimport { Picture } from '@/components/Atoms/Picture'\nimport { GroupedActionLinks, GroupedActionLinksProps } from '@/components/Molecules/ActionLink'\nimport { LanguageMenu, LanguageMenuOption } from '@/components/Molecules/LanguageMenu'\nimport {\n  NavigationButtonType,\n  NavigationMenu,\n  NavigationMenuListProps,\n} from '@/components/Molecules/NavigationMenu'\nimport {\n  StyledActionItems,\n  StyledHeaderWrapper,\n  StyledItemWrapper,\n  StyledLogo,\n  StyledSection,\n} from './AppHeader.styled'\nimport { useTheme } from '@/utils/helper'\nimport { Image } from '@/components/Organisms/ImageAndText'\n\nexport type HeaderContent = {\n  id: string | number\n  links?: GroupedActionLinksProps['links']\n  searchEnabled?: boolean\n  searchLabel?: string\n  languageMenuEnabled?: boolean\n  hideMenu?: boolean\n  hideLinks?: boolean\n  filter?: {\n    enabled?: boolean\n    placeholder?: string\n  }\n  menus?: {\n    links: NavigationMenuListProps['navActionList']\n  }\n}\n\nexport interface AppHeaderProps {\n  headerContent: HeaderContent\n  searchQuery?: string\n  languages?: LanguageMenuOption[]\n  button?: NavigationButtonType | undefined\n  renderSearchBar?: JSX.Element | null\n  logoRef: Image\n  logoUrl?: string\n  langIndex?: number\n  onButtonClick?: (event?: React.MouseEvent) => void\n  onLanguageChoice?: (id?: string | number) => void\n  setFilter?: (event?: React.MouseEvent) => void\n  clearFilter?: (event?: React.MouseEvent) => void\n  onLogoClick?: (event?: React.MouseEvent) => void\n  filter?: JSX.Element\n}\n\nexport const AppHeaderComponent = React.memo(\n  ({\n    headerContent,\n    languages,\n    button,\n    onButtonClick,\n    renderSearchBar,\n    onLanguageChoice,\n    logoUrl,\n    setFilter,\n    clearFilter,\n    onLogoClick,\n    langIndex,\n    filter,\n  }: AppHeaderProps) => {\n    const internalLogoClick = useCallback(() => onLogoClick?.(), [])\n    const internalLanguageSelection = useCallback(id => onLanguageChoice?.(id), [])\n    const { header } = useTheme()\n\n    return (\n      <StyledSection color=\"white\">\n        <Divider color=\"primary\" height=\"xs\" />\n        <StyledHeaderWrapper padding={`${header.padding}`}>\n          {logoUrl && (\n            <StyledLogo>\n              <Picture\n                alt=\"thumbnail\"\n                onClick={() => internalLogoClick()}\n                src={logoUrl}\n                width=\"107px\"\n                height=\"64px\"\n              />\n            </StyledLogo>\n          )}\n          <StyledActionItems>\n            {headerContent?.links && !isEmpty(headerContent?.links) && (\n              <StyledItemWrapper>\n                <GroupedActionLinks\n                  color=\"grey4\"\n                  padding=\"0 sm\"\n                  fontSize=\"sm\"\n                  links={[...headerContent.links]}\n                />\n              </StyledItemWrapper>\n            )}\n            {headerContent?.filter &&\n              !isEmpty(headerContent?.filter) &&\n              headerContent?.filter.enabled && <StyledItemWrapper>{filter}</StyledItemWrapper>}\n            {headerContent?.searchEnabled && (\n              <StyledItemWrapper>{renderSearchBar}</StyledItemWrapper>\n            )}\n            {headerContent.languageMenuEnabled &&\n              headerContent?.menus &&\n              !isEmpty(headerContent?.menus) && (\n                <StyledItemWrapper>\n                  <NavigationMenu\n                    button={button}\n                    navActionList={[...headerContent?.menus[0].links]}\n                  />\n                </StyledItemWrapper>\n              )}\n            {Array.isArray(languages) && languages.length && (\n              <StyledItemWrapper>\n                <LanguageMenu\n                  extendedLanguageHandler={item => internalLanguageSelection(item?.id)}\n                  languages={languages}\n                  setupCurrentIndex={langIndex}\n                />\n              </StyledItemWrapper>\n            )}\n            {button && button.href && (\n              <StyledItemWrapper>\n                <Button\n                  actionType=\"ghost\"\n                  color=\"grey5\"\n                  size=\"sm\"\n                  onClick={onButtonClick}\n                  href={button.href}>\n                  {button.actionLabel}\n                </Button>\n              </StyledItemWrapper>\n            )}\n          </StyledActionItems>\n        </StyledHeaderWrapper>\n      </StyledSection>\n    )\n  }\n)\n"],"file":"AppHeader.js"}
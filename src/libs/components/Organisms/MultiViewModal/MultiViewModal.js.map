{"version":3,"sources":["../../../../src/components/Organisms/MultiViewModal/MultiViewModal.tsx"],"names":["React","Children","useMemo","Portal","Modal","Button","styled","Icon","useMultiViewModalState","useMultiViewModalAction","StyleguideArrow","StyledBackButton","StyledBackArrow","MultiViewModal","targetId","children","withScrollableContent","backButtonText","hideCloseButton","canClose","showBackButton","isActive","activeViewId","hasBackButton","goHome","close","activeChild","toArray","find","child","props","id","primaryButtonProps","secondaryButtonProps","displayName"],"mappings":"AAAA,OAAOA,KAAP,IAAoBC,QAApB,EAAiDC,OAAjD,QAAgE,OAAhE;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,MAAxB,EAAgCC,MAAhC,EAAwCC,IAAxC;AACA,SAASC,sBAAT,EAAiCC,uBAAjC;AACA,SAASC,eAAT,QAAgC,mCAAhC;AAWA,IAAMC,gBAAgB,GAAGL,MAAM,CAACD,MAAD,CAAT;AAAA;AAAA;AAAA,uBAAtB;AAIA,IAAMO,eAAe,GAAGN,MAAM,CAACC,IAAD,CAAT;AAAA;AAAA;AAAA,yDAArB;AAMA,OAAO,IAAMM,cAA0D,GAAG,SAA7DA,cAA6D,OAQpE;AAAA,MAPJC,QAOI,QAPJA,QAOI;AAAA,MANJC,QAMI,QANJA,QAMI;AAAA,MALJC,qBAKI,QALJA,qBAKI;AAAA,MAJJC,cAII,QAJJA,cAII;AAAA,kCAHJC,eAGI;AAAA,MAHJA,eAGI,qCAHc,KAGd;AAAA,2BAFJC,QAEI;AAAA,MAFJA,QAEI,8BAFO,IAEP;AAAA,iCADJC,cACI;AAAA,MADJA,cACI,oCADa,IACb;;AAAA,8BAC8CZ,sBAAsB,EADpE;AAAA,MACIa,QADJ,yBACIA,QADJ;AAAA,MACcC,YADd,yBACcA,YADd;AAAA,MAC4BC,aAD5B,yBAC4BA,aAD5B;;AAAA,8BAEsBd,uBAAuB,EAF7C;AAAA,MAEIe,MAFJ,yBAEIA,MAFJ;AAAA,MAEYC,KAFZ,yBAEYA,KAFZ;;AAGJ,MAAMC,WAAW,GAAGxB,OAAO,CACzB;AAAA,WAAMD,QAAQ,CAAC0B,OAAT,CAAiBZ,QAAjB,EAA2Ba,IAA3B,CAAgC,UAACC,KAAD;AAAA,aAAgBA,KAAK,CAACC,KAAN,CAAYC,EAAZ,KAAmBT,YAAnC;AAAA,KAAhC,CAAN;AAAA,GADyB,EAEzB,CAACP,QAAD,EAAWO,YAAX,CAFyB,CAA3B;AAIA,MAAI,CAACD,QAAL,EAAe,OAAO,IAAP;AACf,SACE,oBAAC,MAAD;AAAQ,IAAA,YAAY,EAAEP;AAAtB,KACE,oBAAC,KAAD;AACE,IAAA,OAAO,EAAEW,KADX;AAEE,IAAA,QAAQ,EAAEN,QAFZ;AAGE,IAAA,kBAAkB,EAAEO,WAAF,aAAEA,WAAF,uBAAEA,WAAW,CAAEI,KAAb,CAAmBE,kBAHzC;AAIE,IAAA,oBAAoB,EAAEN,WAAF,aAAEA,WAAF,uBAAEA,WAAW,CAAEI,KAAb,CAAmBG,oBAJ3C;AAKE,IAAA,qBAAqB,EAAEjB,qBALzB;AAME,IAAA,eAAe,EAAEE;AANnB,KAOE,0CACGK,aAAa,IAAIH,cAAjB,IACC,oBAAC,gBAAD;AAAkB,IAAA,UAAU,EAAC,OAA7B;AAAqC,IAAA,OAAO,EAAEI;AAA9C,KACE,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAE,GAAzB;AAA8B,IAAA,KAAK,EAAC,IAApC;AAAyC,IAAA,MAAM,EAAC;AAAhD,KACE,oBAAC,eAAD,OADF,CADF,EAIGP,cAJH,CAFJ,EASGS,WATH,CAPF,CADF,CADF;AAuBD,CAvCM;AAyCPb,cAAc,CAACqB,WAAf,GAA6B,gBAA7B","sourcesContent":["import React, { FC, Children, PropsWithChildren, useMemo } from 'react'\nimport { Portal, Modal, Button, styled, Icon } from '../../../index'\nimport { useMultiViewModalState, useMultiViewModalAction } from './MultiViewModal.store'\nimport { StyleguideArrow } from '@matthill8286/atomic-icon-library'\n\nexport type MultiViewModalProps = {\n  targetId: string\n  withScrollableContent?: boolean\n  hideCloseButton?: boolean\n  backButtonText?: string\n  canClose?: boolean\n  showBackButton?: boolean\n}\n\nconst StyledBackButton = styled(Button)`\n  padding-left: 0;\n`\n\nconst StyledBackArrow = styled(Icon)`\n  padding: 0 !important;\n  position: relative;\n  left: -7px;\n`\n\nexport const MultiViewModal: FC<PropsWithChildren<MultiViewModalProps>> = ({\n  targetId,\n  children,\n  withScrollableContent,\n  backButtonText,\n  hideCloseButton = false,\n  canClose = true,\n  showBackButton = true,\n}) => {\n  const { isActive, activeViewId, hasBackButton } = useMultiViewModalState()\n  const { goHome, close } = useMultiViewModalAction()\n  const activeChild = useMemo<any>(\n    () => Children.toArray(children).find((child: any) => child.props.id === activeViewId),\n    [children, activeViewId]\n  )\n  if (!isActive) return null\n  return (\n    <Portal targetRootId={targetId}>\n      <Modal\n        onClose={close}\n        canClose={canClose}\n        primaryButtonProps={activeChild?.props.primaryButtonProps}\n        secondaryButtonProps={activeChild?.props.secondaryButtonProps}\n        withScrollableContent={withScrollableContent}\n        hideCloseButton={hideCloseButton}>\n        <>\n          {hasBackButton && showBackButton && (\n            <StyledBackButton actionType=\"ghost\" onClick={goHome}>\n              <StyledBackArrow rotate={180} width=\"sm\" height=\"sm\">\n                <StyleguideArrow />\n              </StyledBackArrow>\n              {backButtonText}\n            </StyledBackButton>\n          )}\n          {activeChild}\n        </>\n      </Modal>\n    </Portal>\n  )\n}\n\nMultiViewModal.displayName = 'MultiViewModal'\n"],"file":"MultiViewModal.js"}
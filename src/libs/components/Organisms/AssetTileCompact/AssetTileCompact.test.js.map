{"version":3,"sources":["../../../../src/components/Organisms/AssetTileCompact/AssetTileCompact.test.tsx"],"names":["React","IconButton","SkeletonBlockItem","FlexBox","Icon","Spacer","mountWithTheme","renderWithTheme","AssetTileCompact","AssetTileCompactElement","StyleguideAddToTrash","newAssetMocks","assetLineItemElementProps","title","provider","name","description","describe","it","mockClick","jest","fn","wrapper","image","expect","toMatchSnapshot","find","length","toBe","simulate","mock","calls","toEqual"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { IconButton } from '@/components/Atoms/Button/IconButton'\nimport { SkeletonBlockItem, SkeletonInlineItem } from '@/components/Atoms/Skeleton'\nimport { FlexBox, Icon, Spacer } from '@/index'\nimport { mountWithTheme, renderWithTheme } from '@/testRenderer'\nimport { AssetTileCompact } from './AssetTileCompact'\nimport { AssetTileCompactElement } from './AssetTileCompactElement'\nimport { StyleguideAddToTrash } from '@matthill8286/atomic-icon-library'\nimport { newAssetMocks } from '@/components/Organisms/AssetTile/elements/mockAsset'\n\nconst assetLineItemElementProps = {\n  title: newAssetMocks[0]?.title,\n  provider: newAssetMocks[0]?.provider?.name,\n  description: 'Testing the description',\n}\n\ndescribe('AssetTileCompact', () => {\n  it('renders correct snapshot with asset data', () => {\n    const mockClick = jest.fn()\n    const wrapper = renderWithTheme(\n      <AssetTileCompact assetImage={newAssetMocks[0].image} loading={false}>\n        <AssetTileCompactElement\n          onClick={mockClick}\n          {...assetLineItemElementProps}\n          loading={false}\n        />\n      </AssetTileCompact>\n    )\n\n    expect(wrapper).toMatchSnapshot()\n  })\n\n  it('renders correct snapshot with button children', () => {\n    const mockClick = jest.fn()\n    const wrapper = renderWithTheme(\n      <AssetTileCompact loading={false} assetImage={newAssetMocks[0].image}>\n        <AssetTileCompactElement\n          onClick={mockClick}\n          {...assetLineItemElementProps}\n          loading={false}\n          showInteractions={false}\n        />\n        <FlexBox flexDirection=\"row\">\n          <IconButton>\n            <Icon width={20} height={20}>\n              <StyleguideAddToTrash />\n            </Icon>\n          </IconButton>\n          <Spacer direction=\"vertical\" size=\"md\" />\n        </FlexBox>\n      </AssetTileCompact>\n    )\n\n    expect(wrapper).toMatchSnapshot()\n  })\n\n  it('renders correct snapshot in loading state', () => {\n    const mockClick = jest.fn()\n    const wrapper = renderWithTheme(\n      <AssetTileCompact loading assetImage={newAssetMocks[0].image}>\n        <AssetTileCompactElement onClick={mockClick} {...assetLineItemElementProps} loading />\n      </AssetTileCompact>\n    )\n\n    expect(wrapper).toMatchSnapshot()\n  })\n\n  it('renders Skeleton-Elements in loading state', () => {\n    const mockClick = jest.fn()\n    const wrapper = mountWithTheme(\n      <AssetTileCompact loading>\n        <AssetTileCompactElement onClick={mockClick} {...assetLineItemElementProps} loading />\n      </AssetTileCompact>\n    )\n\n    expect(wrapper.find(SkeletonBlockItem).length).toBe(1)\n  })\n})\n\ndescribe('AssetTileCompactElement', () => {\n  it('should be clickable', () => {\n    const mockClick = jest.fn()\n    const wrapper = mountWithTheme(\n      <AssetTileCompact onClick={mockClick}>\n        <AssetTileCompactElement {...assetLineItemElementProps} loading />\n      </AssetTileCompact>\n    )\n\n    wrapper.find(AssetTileCompactElement).simulate('click')\n    expect(mockClick.mock.calls.length).toEqual(1)\n  })\n})\n"],"file":"AssetTileCompact.test.js"}